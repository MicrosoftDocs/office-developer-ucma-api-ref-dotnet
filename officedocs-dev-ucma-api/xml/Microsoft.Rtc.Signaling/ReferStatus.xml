<Type Name="ReferStatus" FullName="Microsoft.Rtc.Signaling.ReferStatus">
  <TypeSignature Language="C#" Value="public class ReferStatus" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReferStatus extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Rtc.Signaling.ReferStatus" />
  <TypeSignature Language="VB.NET" Value="Public Class ReferStatus" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReferStatus" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the state of the Refer operation.  
            This object is created by the application sending the Refer
            message to track the status of the Refer as carried out by the
            remote endpoint. The notifications sent by the remote endpoint
            are reflected in this instance.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReferStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Signaling.ReferStatus.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReferStatus();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReferStatus (object applicationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object applicationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Signaling.ReferStatus.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (applicationContext As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReferStatus(System::Object ^ applicationContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="applicationContext">Any application context. For example, the application can store
            the signaling session associated or any other object.
            </param>
        <summary>
            Initializes this instance with the given application context. 
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationContext">
      <MemberSignature Language="C#" Value="public object ApplicationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ApplicationContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Signaling.ReferStatus.ApplicationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ApplicationContext { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the application context.
            </summary>
        <value>The context.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminateSubscription">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminateSubscription (AsyncCallback userCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminateSubscription(class System.AsyncCallback userCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Signaling.ReferStatus.BeginTerminateSubscription(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminateSubscription (userCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminateSubscription(AsyncCallback ^ userCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userCallback">The method to be called when the asynchronous operation is completed.</param>
        <param name="state">A user-provided object that distinguishes this particular asynchronous operation from other asynchronous operations.</param>
        <summary>
            Terminates this refer subscription. The subscription is active until terminating Notify message is received.
            If the application is not interested in waiting for the notification messages, this method can be used to terminate
            the underlying subscription for these notification messages. The refer state will not be affected by this operation.
            </summary>
        <returns>An IAsyncResult that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminateSubscription">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Signaling.SipResponseData EndTerminateSubscription (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Rtc.Signaling.SipResponseData EndTerminateSubscription(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Signaling.ReferStatus.EndTerminateSubscription(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTerminateSubscription (result As IAsyncResult) As SipResponseData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Rtc::Signaling::SipResponseData ^ EndTerminateSubscription(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Signaling.SipResponseData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">The reference to the pending asynchronous operation.</param>
        <summary>
            Waits for the pending TerminateSubscription operation to complete.
            </summary>
        <returns>Returns the response data associated the unsubscribe request.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            Thrown when this method is invoked multiple times using the same result.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when the <paramref name="result" /> parameter is null.
            </exception>
        <exception cref="T:System.ArgumentException">
            Thrown when the <paramref name="result" /> parameter is invalid.
            </exception>
        <exception cref="T:Microsoft.Rtc.Signaling.OperationTimeoutException">
            Thrown when this operation timed out.
            </exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">
            Thrown when any of the sub operations of this operation failed due to SIP related errors like connection failure, Authentication failure.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubscriptionActive">
      <MemberSignature Language="C#" Value="public bool IsSubscriptionActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubscriptionActive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Signaling.ReferStatus.IsSubscriptionActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSubscriptionActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSubscriptionActive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the flag indicating whether the subscription for notification is active or not.
            </summary>
        <value>The Boolean value.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Signaling.SignalingSession Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Rtc.Signaling.SignalingSession Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Signaling.ReferStatus.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As SignalingSession" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Rtc::Signaling::SignalingSession ^ Session { Microsoft::Rtc::Signaling::SignalingSession ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Signaling.SignalingSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the signaling session that is tracking this Refer status.
            This property can be null if it is not associated with any session.
            </summary>
        <value>The session value.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Signaling.ReferState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Rtc.Signaling.ReferState State" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Signaling.ReferStatus.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As ReferState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Rtc::Signaling::ReferState State { Microsoft::Rtc::Signaling::ReferState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Signaling.ReferState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current state of the Refer operation as carried out by the remote endpoint.
            
            
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>State changes based on the state of the Refer message that is sent out start with the prefix "Refer".
            Other states reflect the state of the actual "Invite" operation carried out by the remote participant.
            These states are based on the "Notify" message received from the remote participant.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Rtc.Signaling.ReferStateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Rtc.Signaling.ReferStateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Rtc.Signaling.ReferStatus.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of ReferStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::Rtc::Signaling::ReferStateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Rtc.Signaling.ReferStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Raised when the state of the session changes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateSubscription">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Signaling.SipResponseData TerminateSubscription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Rtc.Signaling.SipResponseData TerminateSubscription() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Signaling.ReferStatus.TerminateSubscription" />
      <MemberSignature Language="VB.NET" Value="Public Function TerminateSubscription () As SipResponseData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Rtc::Signaling::SipResponseData ^ TerminateSubscription();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Signaling.SipResponseData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Terminates this refer subscription. The subscription is active until terminating Notify message is received.
            If the application is not interested in waiting for the notification messages, this method can be used to terminate
            the underlying subscription for these notification messages. The refer state will not be affected by this operation.
            </summary>
        <returns>Returns the response data associated the unsubscribe request.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>