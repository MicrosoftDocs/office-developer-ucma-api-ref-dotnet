<Type Name="ReferStateChangedEventArgs" FullName="Microsoft.Rtc.Signaling.ReferStateChangedEventArgs">
  <TypeSignature Language="C#" Value="public class ReferStateChangedEventArgs : Microsoft.Rtc.Signaling.StateChangedEventArgs&lt;Microsoft.Rtc.Signaling.ReferState&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReferStateChangedEventArgs extends Microsoft.Rtc.Signaling.StateChangedEventArgs`1&lt;valuetype Microsoft.Rtc.Signaling.ReferState&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Rtc.Signaling.ReferStateChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ReferStateChangedEventArgs&#xA;Inherits StateChangedEventArgs(Of ReferState)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReferStateChangedEventArgs : Microsoft::Rtc::Signaling::StateChangedEventArgs&lt;Microsoft::Rtc::Signaling::ReferState&gt;" />
  <TypeSignature Language="F#" Value="type ReferStateChangedEventArgs = class&#xA;    inherit StateChangedEventArgs&lt;ReferState&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Rtc.Signaling.StateChangedEventArgs&lt;Microsoft.Rtc.Signaling.ReferState&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">Microsoft.Rtc.Signaling.ReferState</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the event argument for Refer state changed event.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="MessageData">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Signaling.SipMessageData MessageData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Rtc.Signaling.SipMessageData MessageData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Signaling.ReferStateChangedEventArgs.MessageData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageData As SipMessageData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Rtc::Signaling::SipMessageData ^ MessageData { Microsoft::Rtc::Signaling::SipMessageData ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageData : Microsoft.Rtc.Signaling.SipMessageData" Usage="Microsoft.Rtc.Signaling.ReferStateChangedEventArgs.MessageData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Signaling.SipMessageData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the specific response data in the Notify that was used to map to the new State.
            </summary>
        <value>The specific message data either received on Notify request or Response.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyRemainingSipFragment">
      <MemberSignature Language="C#" Value="public string NotifyRemainingSipFragment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NotifyRemainingSipFragment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Signaling.ReferStateChangedEventArgs.NotifyRemainingSipFragment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotifyRemainingSipFragment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NotifyRemainingSipFragment { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NotifyRemainingSipFragment : string" Usage="Microsoft.Rtc.Signaling.ReferStateChangedEventArgs.NotifyRemainingSipFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the remaining text in the notification body after status code and status text.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            If the state change is not due to Notification received or the notification did not 
            contain it, this can be String.Empty.
            </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyStatusCode">
      <MemberSignature Language="C#" Value="public int NotifyStatusCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NotifyStatusCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Signaling.ReferStateChangedEventArgs.NotifyStatusCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotifyStatusCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NotifyStatusCode { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NotifyStatusCode : int" Usage="Microsoft.Rtc.Signaling.ReferStateChangedEventArgs.NotifyStatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the status code parsed from notification body. 
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            If the value is 0, then it indicates that there is no status code available.
            </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyStatusText">
      <MemberSignature Language="C#" Value="public string NotifyStatusText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NotifyStatusText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Signaling.ReferStateChangedEventArgs.NotifyStatusText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotifyStatusText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NotifyStatusText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NotifyStatusText : string" Usage="Microsoft.Rtc.Signaling.ReferStateChangedEventArgs.NotifyStatusText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the status text parsed from notification body.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            If the state change is not due to Notification received, this can be String.Empty.
            </para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>