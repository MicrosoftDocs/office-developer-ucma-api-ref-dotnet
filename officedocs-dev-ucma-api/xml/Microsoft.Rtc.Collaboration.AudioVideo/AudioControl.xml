<Type Name="AudioControl" FullName="Microsoft.Rtc.Collaboration.AudioVideo.AudioControl">
  <TypeSignature Language="C#" Value="public class AudioControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AudioControl extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Rtc.Collaboration.AudioVideo.AudioControl" />
  <TypeSignature Language="VB.NET" Value="Public Class AudioControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class AudioControl" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the entities in AudioVideoFlow that relate to audio.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DirectionMuted">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Collaboration.AudioVideo.MuteDirection DirectionMuted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Rtc.Collaboration.AudioVideo.MuteDirection DirectionMuted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.AudioVideo.AudioControl.DirectionMuted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectionMuted As MuteDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Rtc::Collaboration::AudioVideo::MuteDirection DirectionMuted { Microsoft::Rtc::Collaboration::AudioVideo::MuteDirection get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Collaboration.AudioVideo.MuteDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the direction in which audio is muted.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannels">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;Microsoft.Rtc.Collaboration.AudioVideo.ChannelLabel,Microsoft.Rtc.Collaboration.AudioVideo.AudioChannel&gt; GetChannels ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;valuetype Microsoft.Rtc.Collaboration.AudioVideo.ChannelLabel, class Microsoft.Rtc.Collaboration.AudioVideo.AudioChannel&gt; GetChannels() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.AudioVideo.AudioControl.GetChannels" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChannels () As IDictionary(Of ChannelLabel, AudioChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;Microsoft::Rtc::Collaboration::AudioVideo::ChannelLabel, Microsoft::Rtc::Collaboration::AudioVideo::AudioChannel ^&gt; ^ GetChannels();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;Microsoft.Rtc.Collaboration.AudioVideo.ChannelLabel,Microsoft.Rtc.Collaboration.AudioVideo.AudioChannel&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the audio channels.
            </summary>
        <returns>Dictionary with with an AudioChannel indexed by its ChannelLabel.</returns>
        <remarks>
          <para>
            Returns a read-only dictionary of the channels held by AudioControl.
            Modification at the Dictionary will not have an effect, 
            as the returned object is a copy of the original one.
            </para>
          <para />
        </remarks>
        <example>
          <para />
          <para>
            The following example disconnects the call if audio channel direction changes to some value 
            different than SendReceive or Inactive.
                </para>
          <para> C# Getting AudioChannel and verifying its property.</para>
          <code> 

            audioVideoFlow.ConfigurationChanged += delegate(object sender, AudioVideoFlowConfigurationChangedEventArgs arg)
            {
                AudioVideoFlow avFlow = (AudioVideoFlow)sender;

                // check directions
                AudioChannel audioChannel = (AudioChannel)avFlow.Audio.GetChannels()[ChannelLabel.AudioMono];
                if ((audioChannel.Direction != MediaChannelDirection.SendReceive)
                    &amp;amp;&amp;amp; (audioChannel.Direction != MediaChannelDirection.Inactive))
                {
                    AudioVideoCall call = avFlow.Call;
                    call.EndTerminate(call.BeginTerminate(null, null));
                }
            };



</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Mute">
      <MemberSignature Language="C#" Value="public void Mute (Microsoft.Rtc.Collaboration.AudioVideo.MuteDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Mute(valuetype Microsoft.Rtc.Collaboration.AudioVideo.MuteDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.AudioVideo.AudioControl.Mute(Microsoft.Rtc.Collaboration.AudioVideo.MuteDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Mute (direction As MuteDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Mute(Microsoft::Rtc::Collaboration::AudioVideo::MuteDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Microsoft.Rtc.Collaboration.AudioVideo.MuteDirection" />
      </Parameters>
      <Docs>
        <param name="direction">The direction to mute.</param>
        <summary>
            Mutes the audio.
            </summary>
        <remarks>To be added.</remarks>
        <example>
          <para />
          <para>
            The following example mutes the call so AudioVideoFlow won't be able to send audio.
                </para>
          <para> C# Muting a call.</para>
          <code> 

            audioVideoFlow.Audio.Mute(MuteDirection.Send);



</code>
        </example>
        <exception cref="T:System.InvalidOperationException">Thrown when the AudioVideoFlow is not in the Active state or when there is no audio channel.</exception>
        <exception cref="T:System.ArgumentException">Thrown when the direction specified is invalid.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the direction specified is not a value in the MuteDirection enumerated type.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unmute">
      <MemberSignature Language="C#" Value="public void Unmute (Microsoft.Rtc.Collaboration.AudioVideo.MuteDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unmute(valuetype Microsoft.Rtc.Collaboration.AudioVideo.MuteDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.AudioVideo.AudioControl.Unmute(Microsoft.Rtc.Collaboration.AudioVideo.MuteDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unmute (direction As MuteDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unmute(Microsoft::Rtc::Collaboration::AudioVideo::MuteDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Microsoft.Rtc.Collaboration.AudioVideo.MuteDirection" />
      </Parameters>
      <Docs>
        <param name="direction">The direction to unmute.</param>
        <summary>
            Unmutes the audio.
            </summary>
        <remarks>To be added.</remarks>
        <example>
          <para />
          <para>
            The following example unmutes the call.
                </para>
          <para> C# Unmuting a call.</para>
          <code> 

            audioVideoFlow.Audio.Unmute(MuteDirection.Send);



</code>
        </example>
        <exception cref="T:System.InvalidOperationException">Thrown when the AudioVideoFlow is not in the Active state or when there is no audio channel.</exception>
        <exception cref="T:System.ArgumentException">Thrown when the direction specified is invalid.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the direction specified is not a value in the MuteDirection enumerated type.</exception>
      </Docs>
    </Member>
  </Members>
</Type>