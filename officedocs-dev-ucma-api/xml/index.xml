<Overview>
  <Assemblies>
    <Assembly Name="ServerAgent" Version="7.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 69 4e 34 3e 3b 85 bd 91 bf d3 d5 c0 71 54 85 f8 48 2f 2a 36 7f de d6 60 b5 24 b2 ef b2 95 8c 59 7d 12 a5 08 79 d6 9d 42 bc ee 55 0e 66 fc 58 ca c7 a2 06 af 25 3b 82 db 29 99 8b 8b 03 19 b0 bb c0 fb 71 19 d8 f6 95 50 a9 c1 89 34 5a e6 08 82 07 95 9f 20 3c 3f c6 98 05 f8 e1 2a bf 94 ca a5 a8 9f 54 2d d7 f9 bf d1 81 88 dc 64 02 ba cd b2 cc 9a 33 3d af 95 f8 c0 93 8c 6b 0b 9e 16 c0 b3 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.Default | System.Diagnostics.DebuggableAttribute+DebuggingModes.DisableOptimizations | System.Diagnostics.DebuggableAttribute+DebuggingModes.EnableEditAndContinue | System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("DEBUG")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDefaultAlias("ServerAgent.dll")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("SIP Server Application Interface")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("7.0.2044.25")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyKeyName("SfBKey")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Skype for Business Server 2019")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("ServerAgent.dll")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.7", FrameworkDisplayName=".NET Framework 4")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Rtc.Collaboration" Version="6.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("RELEASE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDefaultAlias("Microsoft.Rtc.Collaboration.dll")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Unified Communications Managed API")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("6.0.9319.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft Unified Communications Managed API 5.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.Rtc.Collaboration.dll")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTrademark("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("XmppTGW, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("Microsoft.Rtc.Collaboration.UnitTests, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("Microsoft.Rtc.Collaboration.AudioVideoTests, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("EndpointTest, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("Microsoft.Rtc.Collaboration.Test, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("Microsoft.Rtc.Collaboration.TestHooks, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("Microsoft.Rtc.Collaboration.Speech, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.0", FrameworkDisplayName=".NET Framework 4")</AttributeName>
        </Attribute>
      </Attributes>
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
    </Assembly>
  </Assemblies>
  <Remarks>To be added.</Remarks>
  <Copyright>To be added.</Copyright>
  <Types>
    <Namespace Name="Microsoft.Rtc.Collaboration">
      <Type Name="ActiveConferenceService" Kind="Class" />
      <Type Name="AddToDefaultRoutingOptions" Kind="Class" />
      <Type Name="ApplicationEndpoint" Kind="Class" />
      <Type Name="ApplicationEndpointOwnerPropertiesChangedEventArgs" Kind="Class" />
      <Type Name="ApplicationEndpointPresenceServices" Kind="Class" />
      <Type Name="ApplicationEndpointPresenceSettings" Kind="Class" />
      <Type Name="ApplicationEndpointSettings" Kind="Class" />
      <Type Name="ApplicationEndpointSettingsDiscoveredEventArgs" Kind="Class" />
      <Type Name="ApplicationTopologyData" Kind="Class" />
      <Type Name="AttendanceAnnouncementsStatus" Kind="Enumeration" />
      <Type Name="AutoAcceptNeededEventArgs" Kind="Class" />
      <Type Name="AutomaticLeaderAssignment" Kind="Enumeration" />
      <Type Name="BackToBackCall" Kind="Class" />
      <Type Name="BackToBackCallSettings" Kind="Class" />
      <Type Name="BackToBackCallState" Kind="Enumeration" />
      <Type Name="BackToBackCallStateChangedEventArgs" Kind="Class" />
      <Type Name="BackToBackCallTerminateOptions" Kind="Class" />
      <Type Name="Call" Kind="Class" />
      <Type Name="CallAcceptOptions" Kind="Class" />
      <Type Name="CallDeclineOptions" Kind="Class" />
      <Type Name="CallDialogContext" Kind="Class" />
      <Type Name="CallEstablishOptions" Kind="Class" />
      <Type Name="CallForwardOptions" Kind="Class" />
      <Type Name="CallForwardReceivedEventArgs" Kind="Class" />
      <Type Name="CallMessageData" Kind="Class" />
      <Type Name="CallMessageReceivedEventArgs" Kind="Class" />
      <Type Name="CallOperationFailureException" Kind="Class" />
      <Type Name="CallOperationFailureReason" Kind="Enumeration" />
      <Type Name="CallOrbit" Kind="Class" />
      <Type Name="CallParkOptions" Kind="Class" />
      <Type Name="CallParkResponseData" Kind="Class" />
      <Type Name="CallParticipantEndpointProperties" Kind="Class" />
      <Type Name="CallProvisionalResponseOptions" Kind="Class" />
      <Type Name="CallProvisionalResponseReceivedEventArgs" Kind="Class" />
      <Type Name="CallReceivedEventArgs`1" DisplayName="CallReceivedEventArgs&lt;TCall&gt;" Kind="Class" />
      <Type Name="CallReceivedEventArgsBase" Kind="Class" />
      <Type Name="CallSendMessageRequestOptions" Kind="Class" />
      <Type Name="CallSendMessageResponseOptions" Kind="Class" />
      <Type Name="CallState" Kind="Enumeration" />
      <Type Name="CallStateChangedEventArgs" Kind="Class" />
      <Type Name="CallStateTransitionReason" Kind="Enumeration" />
      <Type Name="CallTerminateOptions" Kind="Class" />
      <Type Name="CallTransferNotificationOptions" Kind="Class" />
      <Type Name="CallTransferOptions" Kind="Class" />
      <Type Name="CallTransferReceivedEventArgs" Kind="Class" />
      <Type Name="CallTransferType" Kind="Enumeration" />
      <Type Name="CapabilitySupport" Kind="Enumeration" />
      <Type Name="ClientPlatformSettings" Kind="Class" />
      <Type Name="CollaborationPlatform" Kind="Class" />
      <Type Name="CommandFailureReasons" Kind="Class" />
      <Type Name="CommandStatusCode" Kind="Enumeration" />
      <Type Name="ComposingState" Kind="Enumeration" />
      <Type Name="ComposingStateChangedEventArgs" Kind="Class" />
      <Type Name="Conference" Kind="Class" />
      <Type Name="ConferenceAccessLevel" Kind="Enumeration" />
      <Type Name="ConferenceAccessMethod" Kind="Enumeration" />
      <Type Name="ConferenceAuthenticationMethod" Kind="Enumeration" />
      <Type Name="ConferenceCommandOptions" Kind="Class" />
      <Type Name="ConferenceCommandResponse" Kind="Class" />
      <Type Name="ConferenceEndpointState" Kind="Enumeration" />
      <Type Name="ConferenceFailureException" Kind="Class" />
      <Type Name="ConferenceInvitation" Kind="Class" />
      <Type Name="ConferenceInvitationAcceptOptions" Kind="Class" />
      <Type Name="ConferenceInvitationDeclineOptions" Kind="Class" />
      <Type Name="ConferenceInvitationDeliverOptions" Kind="Class" />
      <Type Name="ConferenceInvitationDialOutOptions" Kind="Class" />
      <Type Name="ConferenceInvitationReceivedEventArgs" Kind="Class" />
      <Type Name="ConferenceInvitationResponse" Kind="Class" />
      <Type Name="ConferenceInvitationSettings" Kind="Class" />
      <Type Name="ConferenceInvitationState" Kind="Enumeration" />
      <Type Name="ConferenceInvitationStateChangedEventArgs" Kind="Class" />
      <Type Name="ConferenceInvitationStateTransitionReason" Kind="Enumeration" />
      <Type Name="ConferenceInvitationStatus" Kind="Enumeration" />
      <Type Name="ConferenceJoinInformation" Kind="Class" />
      <Type Name="ConferenceJoinMethod" Kind="Enumeration" />
      <Type Name="ConferenceJoinOptions" Kind="Class" />
      <Type Name="ConferenceParticipantEndpointProperties" Kind="Class" />
      <Type Name="ConferenceRecordingPolicy" Kind="Enumeration" />
      <Type Name="ConferenceSession" Kind="Class" />
      <Type Name="ConferenceSessionExtendedProperties" Kind="Class" />
      <Type Name="ConferenceSessionProperties" Kind="Class" />
      <Type Name="ConferenceSessionState" Kind="Enumeration" />
      <Type Name="ConferencingCapabilities" Kind="Class" />
      <Type Name="ConferencingRole" Kind="Enumeration" />
      <Type Name="ConferencingRosterVisibility" Kind="Enumeration" />
      <Type Name="Conversation" Kind="Class" />
      <Type Name="ConversationChangedEventArgs" Kind="Class" />
      <Type Name="ConversationChangedReason" Kind="Enumeration" />
      <Type Name="ConversationContextChannel" Kind="Class" />
      <Type Name="ConversationContextChannelDataReceivedEventArgs" Kind="Class" />
      <Type Name="ConversationContextChannelEstablishOptions" Kind="Class" />
      <Type Name="ConversationContextChannelState" Kind="Enumeration" />
      <Type Name="ConversationContextChannelStateChangedEventArgs" Kind="Class" />
      <Type Name="ConversationContextChannelStateTransitionReason" Kind="Enumeration" />
      <Type Name="ConversationParticipant" Kind="Class" />
      <Type Name="ConversationParticipantProperties" Kind="Class" />
      <Type Name="ConversationPriority" Kind="Class" />
      <Type Name="ConversationProperties" Kind="Class" />
      <Type Name="ConversationSettings" Kind="Class" />
      <Type Name="ConversationState" Kind="Enumeration" />
      <Type Name="ConversationTerminateOptions" Kind="Class" />
      <Type Name="DeliveryNotificationReceivedEventArgs" Kind="Class" />
      <Type Name="DiversionContext" Kind="Class" />
      <Type Name="DiversionContextSource" Kind="Enumeration" />
      <Type Name="DivertedDestination" Kind="Class" />
      <Type Name="EjectOptions" Kind="Class" />
      <Type Name="EndpointSubtype" Kind="Enumeration" />
      <Type Name="EndpointType" Kind="Enumeration" />
      <Type Name="EscalateToConferenceRequestedEventArgs" Kind="Class" />
      <Type Name="IncomingCallDelegate`1" DisplayName="IncomingCallDelegate&lt;TCall&gt;" Kind="Delegate" />
      <Type Name="InstantMessageConsumptionMode" Kind="Enumeration" />
      <Type Name="InstantMessageId" Kind="Class" />
      <Type Name="InstantMessageReceivedEventArgs" Kind="Class" />
      <Type Name="InstantMessagingBlockAllMode" Kind="Enumeration" />
      <Type Name="InstantMessagingCall" Kind="Class" />
      <Type Name="InstantMessagingFlow" Kind="Class" />
      <Type Name="InstantMessagingFlowConfigurationRequestedEventArgs" Kind="Class" />
      <Type Name="InstantMessagingFlowProperties" Kind="Class" />
      <Type Name="InstantMessagingFlowPropertiesChangedEventArgs" Kind="Class" />
      <Type Name="InstantMessagingFlowTemplate" Kind="Class" />
      <Type Name="InstantMessagingFormat" Kind="Enumeration" />
      <Type Name="InstantMessagingMcuParticipantEndpointProperties" Kind="Class" />
      <Type Name="InstantMessagingMcuSession" Kind="Class" />
      <Type Name="InstantMessagingMcuSessionProperties" Kind="Class" />
      <Type Name="InstantMessagingMediaCapabilities" Kind="Class" />
      <Type Name="InviteParticipantUpdateEventArgs" Kind="Class" />
      <Type Name="JoinMode" Kind="Enumeration" />
      <Type Name="LobbyAdmitOptions" Kind="Class" />
      <Type Name="LobbyBypass" Kind="Enumeration" />
      <Type Name="LobbyDenyOptions" Kind="Class" />
      <Type Name="LobbyManager" Kind="Class" />
      <Type Name="LobbyOperationFailureReason" Kind="Enumeration" />
      <Type Name="LobbyOperationResponse" Kind="Class" />
      <Type Name="LobbyParticipantAttendanceChangedEventArgs" Kind="Class" />
      <Type Name="LobbyRemovalReason" Kind="Enumeration" />
      <Type Name="LocalEndpoint" Kind="Class" />
      <Type Name="LocalEndpointPresenceServices" Kind="Class" />
      <Type Name="LocalEndpointSettings" Kind="Class" />
      <Type Name="LocalEndpointState" Kind="Enumeration" />
      <Type Name="LocalEndpointStateChangedEventArgs" Kind="Class" />
      <Type Name="LocalEndpointStateTransitionReason" Kind="Enumeration" />
      <Type Name="LockConferenceOptions" Kind="Class" />
      <Type Name="McuDialInOptions" Kind="Class" />
      <Type Name="McuDialOutOptions" Kind="Class" />
      <Type Name="McuInformation" Kind="Class" />
      <Type Name="McuMediaChannel" Kind="Class" />
      <Type Name="McuMediaChannelStatus" Kind="Enumeration" />
      <Type Name="McuSession" Kind="Class" />
      <Type Name="McuSessionProperties" Kind="Class" />
      <Type Name="McuSessionState" Kind="Enumeration" />
      <Type Name="McuTransferOptions" Kind="Class" />
      <Type Name="MediaChannelEstablishmentData" Kind="Class" />
      <Type Name="MediaChannelEstablishmentDiagnosticsReason" Kind="Enumeration" />
      <Type Name="MediaChannelEstablishmentStatus" Kind="Enumeration" />
      <Type Name="MediaEdgeResourceAllocationDiagnosticsReason" Kind="Enumeration" />
      <Type Name="MediaFlowState" Kind="Enumeration" />
      <Type Name="MediaFlowStateChangedEventArgs" Kind="Class" />
      <Type Name="MediaTroubleshootingDataReportedEventArgs" Kind="Class" />
      <Type Name="MediaType" Kind="Class" />
      <Type Name="MeetNowOptions" Kind="Class" />
      <Type Name="MessageDeliveryFailureData" Kind="Class" />
      <Type Name="MimePartContentDescription" Kind="Class" />
      <Type Name="ModifyConferenceConfigurationOptions" Kind="Class" />
      <Type Name="ModifyRoleOptions" Kind="Class" />
      <Type Name="OfferAnswerException" Kind="Class" />
      <Type Name="OfferAnswerFailureReason" Kind="Enumeration" />
      <Type Name="OperationState" Kind="Enumeration" />
      <Type Name="ParticipantAttendanceChangedEventArgs" Kind="Class" />
      <Type Name="ParticipantEndpoint" Kind="Class" />
      <Type Name="ParticipantEndpointAttendanceChangedEventArgs`1" DisplayName="ParticipantEndpointAttendanceChangedEventArgs&lt;TProperties&gt;" Kind="Class" />
      <Type Name="ParticipantEndpointPropertiesChangedEventArgs`1" DisplayName="ParticipantEndpointPropertiesChangedEventArgs&lt;TProperties&gt;" Kind="Class" />
      <Type Name="ParticipantPropertiesChangedEventArgs" Kind="Class" />
      <Type Name="ParticipantPropertiesChangedEventArgs`1" DisplayName="ParticipantPropertiesChangedEventArgs&lt;TProperties&gt;" Kind="Class" />
      <Type Name="PlatformExtension" Kind="Class" />
      <Type Name="PlatformExtensionType" Kind="Class" />
      <Type Name="PreferredServiceCapabilities" Kind="Class" />
      <Type Name="PresenceSettings" Kind="Class" />
      <Type Name="PrivacyOptions" Kind="Enumeration" />
      <Type Name="PropertiesChangedEventArgs`1" DisplayName="PropertiesChangedEventArgs&lt;TProperties&gt;" Kind="Class" />
      <Type Name="ProvisionedApplicationPlatformSettings" Kind="Class" />
      <Type Name="ProvisioningFailedEventArgs" Kind="Class" />
      <Type Name="ProvisioningFailureException" Kind="Class" />
      <Type Name="ProvisioningFailureReason" Kind="Enumeration" />
      <Type Name="RemoteMediaFlowState" Kind="Enumeration" />
      <Type Name="RemoteMediaFlowStateChangedEventArgs" Kind="Class" />
      <Type Name="RemoteParticipantChangedEventArgs" Kind="Class" />
      <Type Name="RemoveFromDefaultRoutingOptions" Kind="Class" />
      <Type Name="RePublishingRequiredEventArgs" Kind="Class" />
      <Type Name="SchedulingTemplate" Kind="Enumeration" />
      <Type Name="SdpAnswer" Kind="Class" />
      <Type Name="SdpAnswerStatus" Kind="Enumeration" />
      <Type Name="SdpContentDescription" Kind="Class" />
      <Type Name="SdpOffer" Kind="Class" />
      <Type Name="SendInstantMessageResult" Kind="Class" />
      <Type Name="ServerPlatformSettings" Kind="Class" />
      <Type Name="SourceNetwork" Kind="Enumeration" />
      <Type Name="TerminationCountdownStatus" Kind="Enumeration" />
      <Type Name="TerminationCountdownStatusChangedEventArgs" Kind="Class" />
      <Type Name="ToastMessage" Kind="Class" />
      <Type Name="TopologyConfiguration" Kind="Class" />
      <Type Name="TransferStateChangedEventArgs" Kind="Class" />
      <Type Name="TrustedDomain" Kind="Class" />
      <Type Name="TrustedDomainMode" Kind="Enumeration" />
      <Type Name="UnlockConferenceOptions" Kind="Class" />
      <Type Name="UserEndpoint" Kind="Class" />
      <Type Name="UserEndpointPresenceServices" Kind="Class" />
      <Type Name="UserEndpointSettings" Kind="Class" />
      <Type Name="UserPresenceSettings" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Collaboration.AudioVideo">
      <Type Name="AudioChannel" Kind="Class" />
      <Type Name="AudioChannelTemplate" Kind="Class" />
      <Type Name="AudioControl" Kind="Class" />
      <Type Name="AudioControlTemplate" Kind="Class" />
      <Type Name="AudioFormat" Kind="Enumeration" />
      <Type Name="AudioRoute" Kind="Class" />
      <Type Name="AudioSamplingRate" Kind="Enumeration" />
      <Type Name="AudioVideoCall" Kind="Class" />
      <Type Name="AudioVideoCallEstablishOptions" Kind="Class" />
      <Type Name="AudioVideoCallTransferReceivedEventArgs" Kind="Class" />
      <Type Name="AudioVideoFlow" Kind="Class" />
      <Type Name="AudioVideoFlowConfigurationChangedEventArgs" Kind="Class" />
      <Type Name="AudioVideoFlowConfigurationRequestedEventArgs" Kind="Class" />
      <Type Name="AudioVideoFlowTemplate" Kind="Class" />
      <Type Name="AudioVideoMcuDialInOptions" Kind="Class" />
      <Type Name="AudioVideoMcuDialOutOptions" Kind="Class" />
      <Type Name="AudioVideoMcuParticipantEndpointProperties" Kind="Class" />
      <Type Name="AudioVideoMcuRouting" Kind="Class" />
      <Type Name="AudioVideoMcuSession" Kind="Class" />
      <Type Name="AudioVideoMcuSessionProperties" Kind="Class" />
      <Type Name="AudioVideoMediaType" Kind="Enumeration" />
      <Type Name="AudioVideoSettings" Kind="Class" />
      <Type Name="ChannelLabel" Kind="Enumeration" />
      <Type Name="CodecCollection`1" DisplayName="CodecCollection&lt;T&gt;" Kind="Class" />
      <Type Name="DisableMuteAllModeOptions" Kind="Class" />
      <Type Name="EnableMuteAllModeOptions" Kind="Class" />
      <Type Name="HoldType" Kind="Enumeration" />
      <Type Name="IncomingAudioRoute" Kind="Class" />
      <Type Name="IncomingFaxDetectedEventArgs" Kind="Class" />
      <Type Name="MediaChannel" Kind="Class" />
      <Type Name="MediaChannelDirection" Kind="Enumeration" />
      <Type Name="MediaChannelTemplate" Kind="Class" />
      <Type Name="MediaEncryption" Kind="Enumeration" />
      <Type Name="MediaSink" Kind="Class" />
      <Type Name="MediaSource" Kind="Class" />
      <Type Name="MediaSourceOpenMode" Kind="Enumeration" />
      <Type Name="ModifyAttendanceAnnouncementOptions" Kind="Class" />
      <Type Name="MuteAllMode" Kind="Enumeration" />
      <Type Name="MuteAllModeAssignment" Kind="Enumeration" />
      <Type Name="MuteDirection" Kind="Enumeration" />
      <Type Name="MuteOptions" Kind="Class" />
      <Type Name="NetworkPortRange" Kind="Class" />
      <Type Name="OutgoingAudioRoute" Kind="Class" />
      <Type Name="PlaybackSpeed" Kind="Enumeration" />
      <Type Name="Player" Kind="Class" />
      <Type Name="PlayerMode" Kind="Enumeration" />
      <Type Name="PlayerState" Kind="Enumeration" />
      <Type Name="PlayerStateChangedEventArgs" Kind="Class" />
      <Type Name="PlayerStateTransitionReason" Kind="Enumeration" />
      <Type Name="QualityOfService" Kind="Class" />
      <Type Name="ReadOnlyDictionary`2" DisplayName="ReadOnlyDictionary&lt;K,V&gt;" Kind="Class" />
      <Type Name="Recorder" Kind="Class" />
      <Type Name="RecorderState" Kind="Enumeration" />
      <Type Name="RecorderStateChangedEventArgs" Kind="Class" />
      <Type Name="RouteUpdateOperation" Kind="Enumeration" />
      <Type Name="SelfUnmuteAssignment" Kind="Enumeration" />
      <Type Name="SpeechRecognitionConnector" Kind="Class" />
      <Type Name="SpeechRecognitionStream" Kind="Class" />
      <Type Name="SpeechSynthesisConnector" Kind="Class" />
      <Type Name="ToneController" Kind="Class" />
      <Type Name="ToneControllerEventArgs" Kind="Class" />
      <Type Name="ToneId" Kind="Enumeration" />
      <Type Name="TonePolicy" Kind="Enumeration" />
      <Type Name="UnmuteOptions" Kind="Class" />
      <Type Name="VideoSource" Kind="Class" />
      <Type Name="VideoSourceMode" Kind="Enumeration" />
      <Type Name="VoiceActivityChangedEventArgs" Kind="Class" />
      <Type Name="WmaEncodingFormat" Kind="Enumeration" />
      <Type Name="WmaFileSink" Kind="Class" />
      <Type Name="WmaFileSource" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Collaboration.ComponentModel">
      <Type Name="CallFactory" Kind="Class" />
      <Type Name="FlowConfigurationRequestedEventArgs" Kind="Class" />
      <Type Name="InviteReceivedEventArgs" Kind="Class" />
      <Type Name="McuParticipantEndpointProperties" Kind="Class" />
      <Type Name="MediaBasedFactory" Kind="Class" />
      <Type Name="MediaFlow" Kind="Class" />
      <Type Name="MediaProvider" Kind="Class" />
      <Type Name="MediaProviderFactory" Kind="Class" />
      <Type Name="NetworkStackHint" Kind="Enumeration" />
      <Type Name="OfferAnswerContext" Kind="Class" />
      <Type Name="SdpOfferAnswerReason" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Collaboration.ConferenceManagement">
      <Type Name="ConferenceMcuInformation" Kind="Class" />
      <Type Name="ConferenceParticipantInformation" Kind="Class" />
      <Type Name="ConferencePhoneInformation" Kind="Class" />
      <Type Name="ConferenceScheduleInformation" Kind="Class" />
      <Type Name="ConferenceServices" Kind="Class" />
      <Type Name="ConferenceSummary" Kind="Class" />
      <Type Name="McuPropertyName" Kind="Class" />
      <Type Name="McuType" Kind="Class" />
      <Type Name="PhoneAccessInformation" Kind="Class" />
      <Type Name="PhoneAccessNumber" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Collaboration.ContactsGroups">
      <Type Name="Contact" Kind="Class" />
      <Type Name="ContactAddOptions" Kind="Class" />
      <Type Name="ContactGroupNotificationEventArgs" Kind="Class" />
      <Type Name="ContactGroupServices" Kind="Class" />
      <Type Name="Group" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Collaboration.PinManagement">
      <Type Name="ApplicationPinServices" Kind="Class" />
      <Type Name="PinCommandOptions" Kind="Class" />
      <Type Name="PinFailureException" Kind="Class" />
      <Type Name="PinFailureReason" Kind="Enumeration" />
      <Type Name="PinServices" Kind="Class" />
      <Type Name="PinVerificationResult" Kind="Class" />
      <Type Name="UpdatePinOptions" Kind="Class" />
      <Type Name="UpdatePinResult" Kind="Class" />
      <Type Name="UserPinServices" Kind="Class" />
      <Type Name="VerifyPinOptions" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Collaboration.Presence">
      <Type Name="ActivityStatus" Kind="Enumeration" />
      <Type Name="CategoryNotificationEventArgs" Kind="Class" />
      <Type Name="CollaborationSubscriptionState" Kind="Enumeration" />
      <Type Name="ContactCard" Kind="Class" />
      <Type Name="ContactPhysicalAddress" Kind="Class" />
      <Type Name="ContainerMembership" Kind="Class" />
      <Type Name="ContainerNotificationEventArgs" Kind="Class" />
      <Type Name="ContainerUpdateOperation" Kind="Class" />
      <Type Name="CustomPresenceCategory" Kind="Class" />
      <Type Name="Delegatee" Kind="Class" />
      <Type Name="DelegatesNotificationEventArgs" Kind="Class" />
      <Type Name="DeviceType" Kind="Enumeration" />
      <Type Name="EndpointConfiguration" Kind="Class" />
      <Type Name="ExpiryPolicy" Kind="Enumeration" />
      <Type Name="LocalizedString" Kind="Class" />
      <Type Name="LocalOwnerPresence" Kind="Class" />
      <Type Name="LocalPresentityNotificationEventArgs" Kind="Class" />
      <Type Name="LocationPolicyConfiguration" Kind="Class" />
      <Type Name="LocationProfileConfiguration" Kind="Class" />
      <Type Name="LocationProfileInstance" Kind="Class" />
      <Type Name="LocationProfilesConfiguration" Kind="Class" />
      <Type Name="MediaConfiguration" Kind="Class" />
      <Type Name="MeetingPolicyConfiguration" Kind="Class" />
      <Type Name="MobilityPolicyConfiguration" Kind="Class" />
      <Type Name="NormalizationRule" Kind="Class" />
      <Type Name="NormalizationRulesInstance" Kind="Class" />
      <Type Name="Note" Kind="Class" />
      <Type Name="NoteType" Kind="Enumeration" />
      <Type Name="NotificationItem`1" DisplayName="NotificationItem&lt;T&gt;" Kind="Class" />
      <Type Name="PersistentChatConfiguration" Kind="Class" />
      <Type Name="PhoneCallType" Kind="Enumeration" />
      <Type Name="PhoneNumber" Kind="Class" />
      <Type Name="PidfDocument" Kind="Class" />
      <Type Name="PresenceActivity" Kind="Class" />
      <Type Name="PresenceAvailability" Kind="Enumeration" />
      <Type Name="PresenceCategory" Kind="Class" />
      <Type Name="PresenceCategoryNames" Kind="Class" />
      <Type Name="PresenceCategoryWithMetaData" Kind="Class" />
      <Type Name="PresencePolicy" Kind="Class" />
      <Type Name="PresencePublicationState" Kind="Enumeration" />
      <Type Name="PresencePublicationStateChangedEventArgs" Kind="Class" />
      <Type Name="PresenceRelationshipLevel" Kind="Enumeration" />
      <Type Name="PresenceState" Kind="Class" />
      <Type Name="PresenceStateType" Kind="Enumeration" />
      <Type Name="PresenceSubscriptionStateChangedEventArgs" Kind="Class" />
      <Type Name="PrivacyMode" Kind="Enumeration" />
      <Type Name="PrivacyModePreference" Kind="Enumeration" />
      <Type Name="ProvisioningData" Kind="Class" />
      <Type Name="PublishOperation" Kind="Enumeration" />
      <Type Name="PublishSubscribeSession" Kind="Class" />
      <Type Name="RemotePresence" Kind="Class" />
      <Type Name="RemotePresenceNotificationEventArgs" Kind="Class" />
      <Type Name="RemotePresenceSubscriptionStateChangedEventArgs" Kind="Class" />
      <Type Name="RemotePresenceView" Kind="Class" />
      <Type Name="RemotePresenceViewSettings" Kind="Class" />
      <Type Name="RemotePresenceViewSubscriptionMode" Kind="Enumeration" />
      <Type Name="RemotePresentitiesNotificationEventArgs" Kind="Class" />
      <Type Name="RemotePresentityNotification" Kind="Class" />
      <Type Name="RemotePresentityNotificationData" Kind="Class" />
      <Type Name="RemotePresentityStateChange" Kind="Class" />
      <Type Name="RemotePresentitySubscriptionState" Kind="Enumeration" />
      <Type Name="RemotePresentitySubscriptionStateTransitionReason" Kind="Enumeration" />
      <Type Name="RemotePresentitySubscriptionTarget" Kind="Class" />
      <Type Name="RemoteSubscriptionContext" Kind="Class" />
      <Type Name="RemoteSubscriptionStateChangedEventArgs" Kind="Class" />
      <Type Name="ServerConfiguration" Kind="Class" />
      <Type Name="ServiceCapability" Kind="Class" />
      <Type Name="ServiceCapabilitySupport" Kind="Enumeration" />
      <Type Name="Services" Kind="Class" />
      <Type Name="Subscriber" Kind="Class" />
      <Type Name="SubscriberNotificationEventArgs" Kind="Class" />
      <Type Name="SubscriptionStateTransitionReason" Kind="Enumeration" />
      <Type Name="UCPolicyConfiguration" Kind="Class" />
      <Type Name="UserSettingConfiguration" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration">
      <Type Name="AcpInformation" Kind="Class" />
      <Type Name="AggregateMachineState" Kind="Class" />
      <Type Name="AggregateState" Kind="Class" />
      <Type Name="AlertsSettings" Kind="Class" />
      <Type Name="ApplicationEndpointExtensionMethods" Kind="Class" />
      <Type Name="ApplicationEndpointOwnerProperties" Kind="Class" />
      <Type Name="ApplicationEndpointOwnerPropertiesEx" Kind="Class" />
      <Type Name="ApplicationEndpointSettingsInternal" Kind="Class" />
      <Type Name="ApplicationTopologyDataExtensions" Kind="Class" />
      <Type Name="AppSharingCallAcceptOptions" Kind="Class" />
      <Type Name="AppSharingCallEstablishOptions" Kind="Class" />
      <Type Name="AudioVideoCallEstablishOptionsInternal" Kind="Class" />
      <Type Name="AudioVideoMcuNotificationProcessorFactory" Kind="Class" />
      <Type Name="AudioVideoMcuSessionFactory" Kind="Class" />
      <Type Name="BackToBackCallExtensions" Kind="Class" />
      <Type Name="CachedCompressedProvisioningData" Kind="Class" />
      <Type Name="CachedMediaRelayToken" Kind="Class" />
      <Type Name="CalendarState" Kind="Class" />
      <Type Name="CallExtensions" Kind="Class" />
      <Type Name="CallOptionsExtensions" Kind="Class" />
      <Type Name="CallParkNotificationReason" Kind="Enumeration" />
      <Type Name="CallParkRequestData" Kind="Class" />
      <Type Name="CallParticipantEndpointPropertiesExtensions" Kind="Class" />
      <Type Name="CallSessionData" Kind="Class" />
      <Type Name="CallStateTransitionSubreason" Kind="Enumeration" />
      <Type Name="Capability" Kind="Class" />
      <Type Name="CertificateId" Kind="Class" />
      <Type Name="ClientPlatformSettingsExtensions" Kind="Class" />
      <Type Name="ClientPlatformSettingsInternal" Kind="Class" />
      <Type Name="CollaborationPlatformDrainOptions" Kind="Class" />
      <Type Name="CollaborationPlatformExtensions" Kind="Class" />
      <Type Name="ConferenceExtensions" Kind="Class" />
      <Type Name="ConferenceInvitationDialOutOptionsExtensions" Kind="Class" />
      <Type Name="ConferenceInvitationExtensions" Kind="Class" />
      <Type Name="ConferenceInvitationReceivedEventArgsExtensions" Kind="Class" />
      <Type Name="ConferenceInvitationStateTransitionReasonSubreason" Kind="Enumeration" />
      <Type Name="ConferenceJoinOptionsInternal" Kind="Class" />
      <Type Name="ConferenceMcuNotificationProcessor" Kind="Class" />
      <Type Name="ConferenceMcuNotificationProcessorFactory" Kind="Class" />
      <Type Name="ConferenceMcuSessionFactory" Kind="Class" />
      <Type Name="ConferencingCapabilities" Kind="Class" />
      <Type Name="ContactCardExtensions" Kind="Class" />
      <Type Name="ContactCardPresentityTypes" Kind="Class" />
      <Type Name="ContactsAndGroupsSettings" Kind="Class" />
      <Type Name="ConversationExtensions" Kind="Class" />
      <Type Name="ConversationIdExtensions" Kind="Class" />
      <Type Name="ConversationParticipantExtensions" Kind="Class" />
      <Type Name="ConversationReplicationHandler" Kind="Class" />
      <Type Name="ConversationRestorationPropertiesChangedEventArgs" Kind="Class" />
      <Type Name="ConversationRestoreOptions" Kind="Class" />
      <Type Name="ConversationStateChangedEventArgs" Kind="Class" />
      <Type Name="ConversationTerminateOptionsExtensions" Kind="Class" />
      <Type Name="ConversationTraceFilterAdapter" Kind="Class" />
      <Type Name="DefaultMediaMatchingStrategy" Kind="Class" />
      <Type Name="DeploymentRole" Kind="Enumeration" />
      <Type Name="Device" Kind="Class" />
      <Type Name="DeviceCapabilities" Kind="Class" />
      <Type Name="DeviceCapability" Kind="Class" />
      <Type Name="DiversionContextExtensions" Kind="Class" />
      <Type Name="DivertedDestinationExtensions" Kind="Class" />
      <Type Name="EscalateToConferenceRequestedInternalEventArgs" Kind="Class" />
      <Type Name="FactoryContext" Kind="Class" />
      <Type Name="HistoryInfoContext" Kind="Class" />
      <Type Name="IMediaMatchingStrategy" Kind="Interface" />
      <Type Name="IncomingCallParkSession" Kind="Class" />
      <Type Name="InstantMessagingFlowExtensions" Kind="Class" />
      <Type Name="InstantMessagingFlowTemplateExtensions" Kind="Class" />
      <Type Name="InstantMessagingMcuNotificationProcessorFactory" Kind="Class" />
      <Type Name="InstantMessagingMcuSessionFactory" Kind="Class" />
      <Type Name="InternalSettings" Kind="Class" />
      <Type Name="LocalEndpointDrainOptions" Kind="Class" />
      <Type Name="LocalEndpointExtensions" Kind="Class" />
      <Type Name="LocalEndpointPresenceServicesExtensions" Kind="Class" />
      <Type Name="LocalEndpointTerminationOptions" Kind="Class" />
      <Type Name="LocaleStringInternal" Kind="Class" />
      <Type Name="LocalOwnerPresenceCache" Kind="Class" />
      <Type Name="LocalPresentityNotificationEventArgsExtensions" Kind="Class" />
      <Type Name="MachineState" Kind="Class" />
      <Type Name="MediaRelay" Kind="Class" />
      <Type Name="MediaRelayToken" Kind="Class" />
      <Type Name="MediaRelayTokenRefreshEventArgs" Kind="Class" />
      <Type Name="MediaRelayTokenRequest" Kind="Class" />
      <Type Name="MediaRelayTokenRequestData" Kind="Class" />
      <Type Name="MediaRelayTokenRequestRoute" Kind="Enumeration" />
      <Type Name="MediaSession" Kind="Class" />
      <Type Name="MediaSessionEstablishOptions" Kind="Class" />
      <Type Name="MediaSessionState" Kind="Enumeration" />
      <Type Name="MediaSessionStateChangedEventArgs" Kind="Class" />
      <Type Name="MeetNowOptionsInternal" Kind="Class" />
      <Type Name="MessageForwarder" Kind="Class" />
      <Type Name="MessageForwardingContext" Kind="Class" />
      <Type Name="MessageForwardingTestSettings" Kind="Class" />
      <Type Name="MessageWaitingIndicator" Kind="Class" />
      <Type Name="MimePartContentDescriptionExtensions" Kind="Class" />
      <Type Name="MimeProcessorResult" Kind="Enumeration" />
      <Type Name="Mobility" Kind="Class" />
      <Type Name="MultipartMimeProcessor" Kind="Class" />
      <Type Name="NoteExtensionMethods" Kind="Class" />
      <Type Name="NoteInternal" Kind="Class" />
      <Type Name="ParticipantCommandResponse" Kind="Class" />
      <Type Name="PhoneNumberLocation" Kind="Class" />
      <Type Name="PhoneState" Kind="Class" />
      <Type Name="PhoneState+PhoneCallOption" Kind="Enumeration" />
      <Type Name="PreferredServiceCapabilitiesExtensions" Kind="Class" />
      <Type Name="PresenceActivityInternal" Kind="Class" />
      <Type Name="PresenceStateInternal" Kind="Class" />
      <Type Name="PresenceStateInternal+StateTypes" Kind="Class" />
      <Type Name="PresenceSubscriptionStateChangedEventArgsExtensions" Kind="Class" />
      <Type Name="PropertyMergeInformation`1" DisplayName="PropertyMergeInformation&lt;T&gt;" Kind="Class" />
      <Type Name="ProvisionedApplicationPlatformSettingsExtensions" Kind="Class" />
      <Type Name="ProvisioningDataExtensions" Kind="Class" />
      <Type Name="RelayLocation" Kind="Enumeration" />
      <Type Name="RemoteCallControlOption" Kind="Class" />
      <Type Name="RemoteCallControlOption+CallForwardingMode" Kind="Enumeration" />
      <Type Name="RemotePresentityPresenceCache" Kind="Class" />
      <Type Name="ReplicationFailureException" Kind="Class" />
      <Type Name="ReplicationFailureReason" Kind="Enumeration" />
      <Type Name="RestorationContext" Kind="Class" />
      <Type Name="RestorationData" Kind="Class" />
      <Type Name="Routing" Kind="Class" />
      <Type Name="Routing+RoutingTargetList" Kind="Class" />
      <Type Name="RoutingCategory" Kind="Class" />
      <Type Name="SendDeliveryNotificationOptions" Kind="Class" />
      <Type Name="SendFailureDeliveryNotificationOptions" Kind="Class" />
      <Type Name="SendInstantMessageOptions" Kind="Class" />
      <Type Name="SendInstantMessageResultExtensions" Kind="Class" />
      <Type Name="SendSuccessDeliveryNotificationOptions" Kind="Class" />
      <Type Name="ServerPlatformSettingsExtensions" Kind="Class" />
      <Type Name="ServerSourceNetwork" Kind="Enumeration" />
      <Type Name="ServiceCapabilities" Kind="Class" />
      <Type Name="ServiceCapabilityInternal" Kind="Class" />
      <Type Name="ServicesInternal" Kind="Class" />
      <Type Name="ServiceUri" Kind="Class" />
      <Type Name="StaticRegistration" Kind="Class" />
      <Type Name="StaticRegistration+RoutingTargetList" Kind="Class" />
      <Type Name="StaticRegistrationTarget" Kind="Class" />
      <Type Name="SubscriptionStateTransitionSubReason" Kind="Enumeration" />
      <Type Name="UserEndpointExtensions" Kind="Class" />
      <Type Name="UserEndpointPresenceServicesExtensions" Kind="Class" />
      <Type Name="UserEndpointSettingsInternal" Kind="Class" />
      <Type Name="UserInformation" Kind="Class" />
      <Type Name="UserInformationPhone" Kind="Class" />
      <Type Name="UserPresenceNotificationEventArgs" Kind="Class" />
      <Type Name="UserProperties" Kind="Class" />
      <Type Name="UserPropertiesPhone" Kind="Class" />
      <Type Name="UserState" Kind="Class" />
      <Type Name="VoiceDeploymentMode" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration.ApplicationSharing">
      <Type Name="ApplicationSharingCall" Kind="Class" />
      <Type Name="ApplicationSharingClientInitializedEventArgs" Kind="Class" />
      <Type Name="ApplicationSharingFlow" Kind="Class" />
      <Type Name="ApplicationSharingFlowConfiguration" Kind="Class" />
      <Type Name="ApplicationSharingFlowConfigurationRequestedEventArgs" Kind="Class" />
      <Type Name="ApplicationSharingFlowConfiguredEventArgs" Kind="Class" />
      <Type Name="ApplicationSharingLevel" Kind="Enumeration" />
      <Type Name="ApplicationSharingMcuParticipantEndpointProperties" Kind="Class" />
      <Type Name="ApplicationSharingMcuSession" Kind="Class" />
      <Type Name="ApplicationSharingMcuSessionProperties" Kind="Class" />
      <Type Name="ApplicationSharingMediaEncodings" Kind="Enumeration" />
      <Type Name="ApplicationSharingRole" Kind="Enumeration" />
      <Type Name="ApplicationSharingSession" Kind="Class" />
      <Type Name="ApplicationSharingSettings" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration.ApplicationSharing.Media">
      <Type Name="ApplicationSharingApplicationEventArgs" Kind="Class" />
      <Type Name="ApplicationSharingClient" Kind="Class" />
      <Type Name="ApplicationSharingClientFactory" Kind="Class" />
      <Type Name="ApplicationSharingErrorEventArgs" Kind="Class" />
      <Type Name="ApplicationSharingHost" Kind="Class" />
      <Type Name="ApplicationSharingState" Kind="Enumeration" />
      <Type Name="ApplicationSharingViewer" Kind="Class" />
      <Type Name="ApplicationSharingWindowEventArgs" Kind="Class" />
      <Type Name="Attendee" Kind="Class" />
      <Type Name="AttendeeEventArgs" Kind="Class" />
      <Type Name="ClientStateEventArgs" Kind="Class" />
      <Type Name="ControlLevel" Kind="Enumeration" />
      <Type Name="DesktopRegion" Kind="Structure" />
      <Type Name="DesktopRegionEventArgs" Kind="Class" />
      <Type Name="ErrorReason" Kind="Enumeration" />
      <Type Name="Icon" Kind="Class" />
      <Type Name="IMediaEndpoint" Kind="Interface" />
      <Type Name="ResourceFilterEventArgs" Kind="Class" />
      <Type Name="ShareableApplication" Kind="Class" />
      <Type Name="ShareableMonitor" Kind="Class" />
      <Type Name="ShareableResource" Kind="Class" />
      <Type Name="ShareableResourceFilter" Kind="Class" />
      <Type Name="ShareableWindow" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration.AudioVideo">
      <Type Name="AcpMcuSession" Kind="Class" />
      <Type Name="ActiveMediaChannelTypes" Kind="Class" />
      <Type Name="AudioVideoMcuDialOutOptionsInternal" Kind="Class" />
      <Type Name="AudioVideoMcuParticipantEndpointPropertiesExtensions" Kind="Class" />
      <Type Name="AudioVideoMcuSessionExtensions" Kind="Class" />
      <Type Name="AudioVideoProviderHelper" Kind="Class" />
      <Type Name="ExtendedAudioVideoFlowTemplate" Kind="Class" />
      <Type Name="HoldOptions" Kind="Class" />
      <Type Name="InternalAudioVideoFlowFlags" Kind="Enumeration" />
      <Type Name="MediaChannelType" Kind="Enumeration" />
      <Type Name="ModifyVideoSourceOptions" Kind="Class" />
      <Type Name="ProvisioningStatus" Kind="Enumeration" />
      <Type Name="ResumeOptions" Kind="Class" />
      <Type Name="VideoChannel" Kind="Class" />
      <Type Name="VideoChannelTemplate" Kind="Class" />
      <Type Name="VideoControl" Kind="Class" />
      <Type Name="VideoControlTemplate" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration.ComponentModel">
      <Type Name="ExternalConnectivityCandidatesStatus" Kind="Enumeration" />
      <Type Name="InviteReceivedEventArgsExtensions" Kind="Class" />
      <Type Name="MediaCapability" Kind="Class" />
      <Type Name="MediaCapabilitySource" Kind="Enumeration" />
      <Type Name="MediaCapabilityValue" Kind="Enumeration" />
      <Type Name="MediaOperationFailureCategory" Kind="Enumeration" />
      <Type Name="MediaOperationFailureException" Kind="Class" />
      <Type Name="MediaPermission" Kind="Class" />
      <Type Name="MediaProviderInternal" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration.ConferenceManagement">
      <Type Name="ConferenceServicesExtensions" Kind="Class" />
      <Type Name="GetConferenceOptions" Kind="Class" />
      <Type Name="InternalConferenceScheduleInformationExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration.Conferencing">
      <Type Name="ConferenceAttendanceType" Kind="Enumeration" />
      <Type Name="ConferenceWebInformation" Kind="Class" />
      <Type Name="InternalConferenceSession" Kind="Class" />
      <Type Name="InternalConferencingExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration.Conferencing.Commands">
      <Type Name="ConferenceCommand" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration.ContactsGroups">
      <Type Name="ContactAddOptionsExtensions" Kind="Class" />
      <Type Name="ContactExtension" Kind="Class" />
      <Type Name="ContactExtensions" Kind="Class" />
      <Type Name="ContactGroupServicesExtensions" Kind="Class" />
      <Type Name="ContactStoreMigrationStatus" Kind="Enumeration" />
      <Type Name="ContactStoreMigrationStatusChangedEventArgs" Kind="Class" />
      <Type Name="GroupExtension" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration.DataCollaboration">
      <Type Name="ConnectionInfo" Kind="Class" />
      <Type Name="ConnectionInfoInitializedEventArgs" Kind="Class" />
      <Type Name="DataCollaborationMcuNotificationProcessorFactory" Kind="Class" />
      <Type Name="DataCollaborationMcuParticipantEndpointProperties" Kind="Class" />
      <Type Name="DataCollaborationMcuSession" Kind="Class" />
      <Type Name="DataCollaborationMcuSessionFactory" Kind="Class" />
      <Type Name="DataCollaborationMcuSessionProperties" Kind="Class" />
      <Type Name="DataCollaborationMediaSession" Kind="Class" />
      <Type Name="DataCollaborationMediaSessionConfiguration" Kind="Class" />
      <Type Name="DataCollaborationSession" Kind="Class" />
      <Type Name="DataSessionInitializedEventArgs" Kind="Class" />
      <Type Name="MediaSessionConfigurationRequestedEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration.Media">
      <Type Name="AudioMediaFormatSet" Kind="Class" />
      <Type Name="CandidateNetworkType" Kind="Enumeration" />
      <Type Name="CandidateType" Kind="Enumeration" />
      <Type Name="CodecAllowedStreamDirections" Kind="Enumeration" />
      <Type Name="CodecId" Kind="Enumeration" />
      <Type Name="CodecInfo" Kind="Class" />
      <Type Name="EncryptionAttribute" Kind="Enumeration" />
      <Type Name="H264FormatParamaters" Kind="Class" />
      <Type Name="H264VideoMediaFormatSet" Kind="Class" />
      <Type Name="IceV19SdpMediaDescription" Kind="Class" />
      <Type Name="IceV19SdpMediaSession`2" DisplayName="IceV19SdpMediaSession&lt;TSessionDescription,TMediaDescription&gt;" Kind="Class" />
      <Type Name="IceV19SdpSessionDescription" Kind="Class" />
      <Type Name="ISdpMediaNegotiator" Kind="Interface" />
      <Type Name="MediaChannelContext" Kind="Class" />
      <Type Name="MediaChannelDescriptor" Kind="Class" />
      <Type Name="MediaChannelStatus" Kind="Enumeration" />
      <Type Name="MediaCryptoKeySet" Kind="Class" />
      <Type Name="MediaEncryptionPolicy" Kind="Enumeration" />
      <Type Name="MediaFlowStatus" Kind="Enumeration" />
      <Type Name="MediaFormatSet" Kind="Class" />
      <Type Name="MediaModifications" Kind="Enumeration" />
      <Type Name="MediaTransportAddress" Kind="Class" />
      <Type Name="MediaTransportCandidate" Kind="Class" />
      <Type Name="MediaTransportInfo" Kind="Class" />
      <Type Name="MediaTransportType" Kind="Enumeration" />
      <Type Name="NonIceSdpMediaSession" Kind="Class" />
      <Type Name="OfferAnswerParsingOperation" Kind="Enumeration" />
      <Type Name="OfferAnswerStatus" Kind="Enumeration" />
      <Type Name="RtcpCapabilityFlags" Kind="Enumeration" />
      <Type Name="RtcpMultiplexingMode" Kind="Enumeration" />
      <Type Name="ScaleSrtpRole" Kind="Enumeration" />
      <Type Name="SdpConstants" Kind="Class" />
      <Type Name="SdpConstants+MediaLabels" Kind="Class" />
      <Type Name="SdpConstants+MediaTypes" Kind="Class" />
      <Type Name="SdpConstants+SdpAttributeName" Kind="Class" />
      <Type Name="SdpDiagnosticsCode" Kind="Enumeration" />
      <Type Name="SdpDialogNegotiationContext" Kind="Class" />
      <Type Name="SdpDialogState" Kind="Enumeration" />
      <Type Name="SdpIPConfiguration" Kind="Enumeration" />
      <Type Name="SdpMediaBandwidth" Kind="Class" />
      <Type Name="SdpMediaDescription" Kind="Class" />
      <Type Name="SdpMediaFormat" Kind="Structure" />
      <Type Name="SdpMediaOfferAnswerInfo" Kind="Class" />
      <Type Name="SdpMediaSession`2" DisplayName="SdpMediaSession&lt;TSessionDescription,TMediaDescription&gt;" Kind="Class" />
      <Type Name="SdpNegotiatorFlags" Kind="Enumeration" />
      <Type Name="SdpNegotiatorSettings" Kind="Class" />
      <Type Name="SdpRemoteCandidate" Kind="Class" />
      <Type Name="SdpSessionDescription" Kind="Class" />
      <Type Name="SdpSessionState" Kind="Enumeration" />
      <Type Name="SdpSetTransportAttributesOptions" Kind="Enumeration" />
      <Type Name="SdpSrtpCryptoKey" Kind="Class" />
      <Type Name="SdpTransportCandidate" Kind="Class" />
      <Type Name="SdpTransportCandidateInfo" Kind="Class" />
      <Type Name="SsrcRange" Kind="Class" />
      <Type Name="TcpConnectionSetupRole" Kind="Enumeration" />
      <Type Name="TcpConnectionStatus" Kind="Enumeration" />
      <Type Name="VtcSdpMediaDescription" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration.Presence">
      <Type Name="LocalOwnerPresenceExtensions" Kind="Class" />
      <Type Name="NormalizationRuleExtensions" Kind="Class" />
      <Type Name="PresenceStateExtensions" Kind="Class" />
      <Type Name="PrivacyModeChangedEventArgs" Kind="Class" />
      <Type Name="RemotePresenceViewExtensions" Kind="Class" />
      <Type Name="RemotePresentitySubscriptionTargetExtensions" Kind="Class" />
      <Type Name="ServiceExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration.Tasks">
      <Type Name="TaskCompletionSourceExtensions" Kind="Class" />
      <Type Name="TaskExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Collaboration.Utilities">
      <Type Name="Diagnostics" Kind="Class" />
      <Type Name="DiagnosticsVisibility" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Signaling">
      <Type Name="ConnectionConfigurationRequestedEventArgs" Kind="Class" />
      <Type Name="ConnectionContextExtensions" Kind="Class" />
      <Type Name="ConnectionManagerDiagnosticsMode" Kind="Enumeration" />
      <Type Name="DiagnosticsInformationInternal" Kind="Class" />
      <Type Name="ExceptionDataPropertyKeys" Kind="Class" />
      <Type Name="IncomingSubscriptionSession" Kind="Class" />
      <Type Name="IncomingSubscriptionSessionState" Kind="Enumeration" />
      <Type Name="InDialogMessageReceivedEventArgs" Kind="Class" />
      <Type Name="InternalSignalingSessionEstablishOptionsExtensions" Kind="Class" />
      <Type Name="InternalSignalingSessionExtensions" Kind="Class" />
      <Type Name="InternalSignalingSessionSettingsExtensions" Kind="Class" />
      <Type Name="ITraceFilterConfiguration" Kind="Interface" />
      <Type Name="ManagedTraceFilter" Kind="Class" />
      <Type Name="MessageForwardingRequestedEventArgs" Kind="Class" />
      <Type Name="MultipartContentException" Kind="Class" />
      <Type Name="MultipartContentGenerator" Kind="Class" />
      <Type Name="MultipartContentParser" Kind="Structure" />
      <Type Name="MultipartItem" Kind="Structure" />
      <Type Name="Pool" Kind="Class" />
      <Type Name="PoolConfiguration" Kind="Class" />
      <Type Name="PoolMember" Kind="Class" />
      <Type Name="RealTimeAddressExtensions" Kind="Class" />
      <Type Name="RealTimeConnectionManagerExtensions" Kind="Class" />
      <Type Name="RealTimeConnectionManagerExtensions+GetCustomSipConnectionDelegate" Kind="Delegate" />
      <Type Name="RealTimeEndpointExtension" Kind="Class" />
      <Type Name="RealTimeEndpointExtensionMethods" Kind="Class" />
      <Type Name="RegistrationNotificationReason" Kind="Enumeration" />
      <Type Name="SessionErrorReport" Kind="Class" />
      <Type Name="SignalingSessionExtensions" Kind="Class" />
      <Type Name="SignalingSessionInternal" Kind="Class" />
      <Type Name="SipPeerToPeerEndpointExtensions" Kind="Class" />
      <Type Name="SipUriParserExtension" Kind="Class" />
      <Type Name="SubscriptionNotificationOptions" Kind="Class" />
      <Type Name="SubscriptionNotificationResponse" Kind="Class" />
      <Type Name="SubscriptionRefreshReceivedEventArgs" Kind="Class" />
      <Type Name="SubscriptionSessionAcceptOptions" Kind="Class" />
      <Type Name="SubscriptionSessionDeclineOptions" Kind="Class" />
      <Type Name="SubscriptionSessionReceivedEventArgs" Kind="Class" />
      <Type Name="SubscriptionSessionStateChangedEventArgs" Kind="Class" />
      <Type Name="SubscriptionSessionTerminateOptions" Kind="Class" />
      <Type Name="UserRegistrationNotificationEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Internal.Utilities">
      <Type Name="TelUri" Kind="Class" />
      <Type Name="TelUri+Parameter" Kind="Class" />
      <Type Name="TelUri+ParseOptions" Kind="Enumeration" />
      <Type Name="TelUriType" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Signaling">
      <Type Name="AddressFamilyHint" Kind="Enumeration" />
      <Type Name="AgentIdentity" Kind="Class" />
      <Type Name="AuthenticationException" Kind="Class" />
      <Type Name="AuthenticationFailureReason" Kind="Enumeration" />
      <Type Name="CollectionChangedEventArgs`1" DisplayName="CollectionChangedEventArgs&lt;T&gt;" Kind="Class" />
      <Type Name="CollectionExtensions" Kind="Class" />
      <Type Name="ConnectionAuthorizationAction" Kind="Enumeration" />
      <Type Name="ConnectionAuthorizationRequestedEventArgs" Kind="Class" />
      <Type Name="ConnectionContext" Kind="Class" />
      <Type Name="ConnectionFailureException" Kind="Class" />
      <Type Name="ConnectionPool" Kind="Class" />
      <Type Name="ContentDescription" Kind="Class" />
      <Type Name="DiagnosticHeader" Kind="Class" />
      <Type Name="DiagnosticsInformation" Kind="Class" />
      <Type Name="DiagnosticVisibility" Kind="Enumeration" />
      <Type Name="DialogContext" Kind="Class" />
      <Type Name="EndpointState" Kind="Enumeration" />
      <Type Name="EndpointStateChangedEventArgs" Kind="Class" />
      <Type Name="EndpointTransitionReason" Kind="Enumeration" />
      <Type Name="ExtensionFeatureSupport" Kind="Enumeration" />
      <Type Name="FailureRequestException" Kind="Class" />
      <Type Name="FailureResponseException" Kind="Class" />
      <Type Name="FromToHeader" Kind="Class" />
      <Type Name="IncomingConnectionAddedEventArgs" Kind="Class" />
      <Type Name="IncomingConnectionRemovedEventArgs" Kind="Class" />
      <Type Name="InvalidOperationReason" Kind="Enumeration" />
      <Type Name="InvitationAcceptedEventArgs" Kind="Class" />
      <Type Name="IOfferAnswer" Kind="Interface" />
      <Type Name="ISipSubscriptionProcessor" Kind="Interface" />
      <Type Name="MessageParsingException" Kind="Class" />
      <Type Name="MessageReceivedEventArgs" Kind="Class" />
      <Type Name="MessageType" Kind="Enumeration" />
      <Type Name="NameValuePair" Kind="Class" />
      <Type Name="OfferInInviteResponseEventArgs" Kind="Class" />
      <Type Name="OfferInReInviteEventArgs" Kind="Class" />
      <Type Name="OperationFailureException" Kind="Class" />
      <Type Name="OperationFailureReason" Kind="Enumeration" />
      <Type Name="OperationTimeoutException" Kind="Class" />
      <Type Name="OutboundConnectionConfiguration" Kind="Class" />
      <Type Name="ParsingFailureReason" Kind="Enumeration" />
      <Type Name="Participant" Kind="Class" />
      <Type Name="ParticipantPropertyChanges" Kind="Enumeration" />
      <Type Name="ParticipateState" Kind="Enumeration" />
      <Type Name="ParticipateStateChangedEventArgs" Kind="Class" />
      <Type Name="ProvisionalResponseReceivedEventArgs" Kind="Class" />
      <Type Name="PublishSubscribeException" Kind="Class" />
      <Type Name="RealTimeAddress" Kind="Class" />
      <Type Name="RealTimeClientConnectionManager" Kind="Class" />
      <Type Name="RealTimeConnection" Kind="Class" />
      <Type Name="RealTimeConnectionManager" Kind="Class" />
      <Type Name="RealTimeEndpoint" Kind="Class" />
      <Type Name="RealTimeEndpointSettings" Kind="Class" />
      <Type Name="RealTimeException" Kind="Class" />
      <Type Name="RealTimeInvalidOperationException" Kind="Class" />
      <Type Name="RealTimeServerConnectionManager" Kind="Class" />
      <Type Name="RealTimeServerTcpConnectionManager" Kind="Class" />
      <Type Name="RealTimeServerTlsConnectionManager" Kind="Class" />
      <Type Name="RedirectAction" Kind="Enumeration" />
      <Type Name="RedirectingEventArgs" Kind="Class" />
      <Type Name="ReferNotifier" Kind="Class" />
      <Type Name="ReferReceivedEventArgs" Kind="Class" />
      <Type Name="ReferState" Kind="Enumeration" />
      <Type Name="ReferStateChangedEventArgs" Kind="Class" />
      <Type Name="ReferStatus" Kind="Class" />
      <Type Name="RegisterException" Kind="Class" />
      <Type Name="RegistrationState" Kind="Enumeration" />
      <Type Name="RegistrationStateChangedEventArgs" Kind="Class" />
      <Type Name="RegistrationTransitionReason" Kind="Enumeration" />
      <Type Name="RequestOrResponseReceivedEventArgs" Kind="Class" />
      <Type Name="ResponseCode" Kind="Class" />
      <Type Name="RouteSetRecoveryMode" Kind="Enumeration" />
      <Type Name="RouteSetRecoverySettings" Kind="Class" />
      <Type Name="RouteSetStatus" Kind="Enumeration" />
      <Type Name="RouteSetStatusChangedEventArgs" Kind="Class" />
      <Type Name="Sdp`2" DisplayName="Sdp&lt;TGlobalDescription,TMediaDescription&gt;" Kind="Class" />
      <Type Name="SdpAttribute" Kind="Class" />
      <Type Name="SdpBandwidth" Kind="Class" />
      <Type Name="SdpConnection" Kind="Class" />
      <Type Name="SdpDescription" Kind="Class" />
      <Type Name="SdpEncryptionKey" Kind="Class" />
      <Type Name="SdpEncryptionMethod" Kind="Enumeration" />
      <Type Name="SdpGlobalDescription" Kind="Class" />
      <Type Name="SdpMediaDescription" Kind="Class" />
      <Type Name="SdpOrigin" Kind="Class" />
      <Type Name="SdpParseStatus" Kind="Class" />
      <Type Name="SdpWriter" Kind="Class" />
      <Type Name="SendMessageOptions" Kind="Class" />
      <Type Name="SendProvisionalResponseOptions" Kind="Class" />
      <Type Name="ServerPolicyException" Kind="Class" />
      <Type Name="ServiceState" Kind="Enumeration" />
      <Type Name="SessionReceivedEventArgs" Kind="Class" />
      <Type Name="SignalingContentDescription" Kind="Class" />
      <Type Name="SignalingHeader" Kind="Class" />
      <Type Name="SignalingHeaderParser" Kind="Class" />
      <Type Name="SignalingParticipant" Kind="Class" />
      <Type Name="SignalingPropertyChangedEventArgs" Kind="Class" />
      <Type Name="SignalingSession" Kind="Class" />
      <Type Name="SignalingSessionAcceptOptions" Kind="Class" />
      <Type Name="SignalingSessionEstablishOptions" Kind="Class" />
      <Type Name="SignalingSessionSettings" Kind="Class" />
      <Type Name="SignalingState" Kind="Enumeration" />
      <Type Name="SignalingStateChangedEventArgs" Kind="Class" />
      <Type Name="SignalingTransitionReason" Kind="Enumeration" />
      <Type Name="SipAuthenticationProtocols" Kind="Enumeration" />
      <Type Name="SipCredentialCache" Kind="Class" />
      <Type Name="SipDialogContext" Kind="Class" />
      <Type Name="SipEndpoint" Kind="Class" />
      <Type Name="SipEndpointSettings" Kind="Class" />
      <Type Name="SipMessageData" Kind="Class" />
      <Type Name="SipPeerToPeerEndpoint" Kind="Class" />
      <Type Name="SipPeerToPeerEndpointSettings" Kind="Class" />
      <Type Name="SipRequestData" Kind="Class" />
      <Type Name="SipRequestReceivedEventArgs" Kind="Class" />
      <Type Name="SipResponseData" Kind="Class" />
      <Type Name="SipResponseReceivedEventArgs" Kind="Class" />
      <Type Name="SipServiceRequest" Kind="Class" />
      <Type Name="SipSubscription" Kind="Class" />
      <Type Name="SipSubscription+RequestType" Kind="Enumeration" />
      <Type Name="SipTransportType" Kind="Enumeration" />
      <Type Name="SipUriParameter" Kind="Class" />
      <Type Name="SipUriParser" Kind="Class" />
      <Type Name="StartListeningOptions" Kind="Class" />
      <Type Name="StateChangedEventArgs`1" DisplayName="StateChangedEventArgs&lt;T&gt;" Kind="Class" />
      <Type Name="SubscriptionSignalingState" Kind="Enumeration" />
      <Type Name="SubscriptionStateChangedEventArgs" Kind="Class" />
      <Type Name="TimerItem" Kind="Class" />
      <Type Name="TimerWheel" Kind="Class" />
      <Type Name="TlsFailureException" Kind="Class" />
      <Type Name="TlsFailureReason" Kind="Enumeration" />
      <Type Name="TransitionReason" Kind="Enumeration" />
      <Type Name="UnhandledExceptionManager" Kind="Class" />
      <Type Name="UnhandledThreadPoolExceptionHandler" Kind="Delegate" />
      <Type Name="WarningCode" Kind="Class" />
      <Type Name="WarningHeader" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Sip">
    </Namespace>
    <Namespace Name="Microsoft.Rtc.Sip.Impl">
    </Namespace>
  </Types>
  <Title>ServerAgent</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ApplicationEndpoint" />
      </Targets>
      <Member MemberName="BeginGetMediaRelayToken">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetMediaRelayToken (this Microsoft.Rtc.Collaboration.ApplicationEndpoint endpoint, string mrasUri, string identity, bool forceRefresh, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetMediaRelayToken(class Microsoft.Rtc.Collaboration.ApplicationEndpoint endpoint, string mrasUri, string identity, bool forceRefresh, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.BeginGetMediaRelayToken(Microsoft.Rtc.Collaboration.ApplicationEndpoint,System.String,System.String,System.Boolean,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginGetMediaRelayToken (endpoint As ApplicationEndpoint, mrasUri As String, identity As String, forceRefresh As Boolean, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginGetMediaRelayToken(Microsoft::Rtc::Collaboration::ApplicationEndpoint ^ endpoint, System::String ^ mrasUri, System::String ^ identity, bool forceRefresh, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginGetMediaRelayToken : Microsoft.Rtc.Collaboration.ApplicationEndpoint * string * string * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.BeginGetMediaRelayToken (endpoint, mrasUri, identity, forceRefresh, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.ApplicationEndpoint" RefType="this" />
          <Parameter Name="mrasUri" Type="System.String" />
          <Parameter Name="identity" Type="System.String" />
          <Parameter Name="forceRefresh" Type="System.Boolean" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="mrasUri">To be added.</param>
          <param name="identity">To be added.</param>
          <param name="forceRefresh">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods" Member="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.BeginGetMediaRelayToken(Microsoft.Rtc.Collaboration.ApplicationEndpoint,System.String,System.String,System.Boolean,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ApplicationEndpoint" />
      </Targets>
      <Member MemberName="EndGetMediaRelayToken">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.MediaRelayToken EndGetMediaRelayToken (this Microsoft.Rtc.Collaboration.ApplicationEndpoint endpoint, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Collaboration.MediaRelayToken EndGetMediaRelayToken(class Microsoft.Rtc.Collaboration.ApplicationEndpoint endpoint, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.EndGetMediaRelayToken(Microsoft.Rtc.Collaboration.ApplicationEndpoint,System.IAsyncResult)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndGetMediaRelayToken (endpoint As ApplicationEndpoint, result As IAsyncResult) As MediaRelayToken" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::MediaRelayToken ^ EndGetMediaRelayToken(Microsoft::Rtc::Collaboration::ApplicationEndpoint ^ endpoint, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndGetMediaRelayToken : Microsoft.Rtc.Collaboration.ApplicationEndpoint * IAsyncResult -&gt; Microsoft.Rtc.Internal.Collaboration.MediaRelayToken" Usage="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.EndGetMediaRelayToken (endpoint, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.MediaRelayToken</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.ApplicationEndpoint" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods" Member="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.EndGetMediaRelayToken(Microsoft.Rtc.Collaboration.ApplicationEndpoint,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ApplicationEndpoint" />
      </Targets>
      <Member MemberName="GetApplicationEndpointOwnerProperties">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties GetApplicationEndpointOwnerProperties (this Microsoft.Rtc.Collaboration.ApplicationEndpoint endpoint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties GetApplicationEndpointOwnerProperties(class Microsoft.Rtc.Collaboration.ApplicationEndpoint endpoint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.GetApplicationEndpointOwnerProperties(Microsoft.Rtc.Collaboration.ApplicationEndpoint)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApplicationEndpointOwnerProperties (endpoint As ApplicationEndpoint) As ApplicationEndpointOwnerProperties" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::ApplicationEndpointOwnerProperties ^ GetApplicationEndpointOwnerProperties(Microsoft::Rtc::Collaboration::ApplicationEndpoint ^ endpoint);" />
        <MemberSignature Language="F#" Value="static member GetApplicationEndpointOwnerProperties : Microsoft.Rtc.Collaboration.ApplicationEndpoint -&gt; Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties" Usage="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.GetApplicationEndpointOwnerProperties endpoint" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.ApplicationEndpoint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods" Member="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.GetApplicationEndpointOwnerProperties(Microsoft.Rtc.Collaboration.ApplicationEndpoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ApplicationEndpointOwnerPropertiesChangedEventArgs" />
      </Targets>
      <Member MemberName="GetApplicationEndpointOwnerProperties">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties GetApplicationEndpointOwnerProperties (this Microsoft.Rtc.Collaboration.ApplicationEndpointOwnerPropertiesChangedEventArgs e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties GetApplicationEndpointOwnerProperties(class Microsoft.Rtc.Collaboration.ApplicationEndpointOwnerPropertiesChangedEventArgs e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.GetApplicationEndpointOwnerProperties(Microsoft.Rtc.Collaboration.ApplicationEndpointOwnerPropertiesChangedEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApplicationEndpointOwnerProperties (e As ApplicationEndpointOwnerPropertiesChangedEventArgs) As ApplicationEndpointOwnerProperties" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::ApplicationEndpointOwnerProperties ^ GetApplicationEndpointOwnerProperties(Microsoft::Rtc::Collaboration::ApplicationEndpointOwnerPropertiesChangedEventArgs ^ e);" />
        <MemberSignature Language="F#" Value="static member GetApplicationEndpointOwnerProperties : Microsoft.Rtc.Collaboration.ApplicationEndpointOwnerPropertiesChangedEventArgs -&gt; Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties" Usage="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.GetApplicationEndpointOwnerProperties e" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="Microsoft.Rtc.Collaboration.ApplicationEndpointOwnerPropertiesChangedEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods" Member="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.GetApplicationEndpointOwnerProperties(Microsoft.Rtc.Collaboration.ApplicationEndpointOwnerPropertiesChangedEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ApplicationEndpointSettingsDiscoveredEventArgs" />
      </Targets>
      <Member MemberName="GetApplicationEndpointOwnerProperties">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties GetApplicationEndpointOwnerProperties (this Microsoft.Rtc.Collaboration.ApplicationEndpointSettingsDiscoveredEventArgs e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties GetApplicationEndpointOwnerProperties(class Microsoft.Rtc.Collaboration.ApplicationEndpointSettingsDiscoveredEventArgs e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.GetApplicationEndpointOwnerProperties(Microsoft.Rtc.Collaboration.ApplicationEndpointSettingsDiscoveredEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApplicationEndpointOwnerProperties (e As ApplicationEndpointSettingsDiscoveredEventArgs) As ApplicationEndpointOwnerProperties" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::ApplicationEndpointOwnerProperties ^ GetApplicationEndpointOwnerProperties(Microsoft::Rtc::Collaboration::ApplicationEndpointSettingsDiscoveredEventArgs ^ e);" />
        <MemberSignature Language="F#" Value="static member GetApplicationEndpointOwnerProperties : Microsoft.Rtc.Collaboration.ApplicationEndpointSettingsDiscoveredEventArgs -&gt; Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties" Usage="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.GetApplicationEndpointOwnerProperties e" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="Microsoft.Rtc.Collaboration.ApplicationEndpointSettingsDiscoveredEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods" Member="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.GetApplicationEndpointOwnerProperties(Microsoft.Rtc.Collaboration.ApplicationEndpointSettingsDiscoveredEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ApplicationEndpoint" />
      </Targets>
      <Member MemberName="RegisterForUserPresenceNotification">
        <MemberSignature Language="C#" Value="public static void RegisterForUserPresenceNotification (this Microsoft.Rtc.Collaboration.ApplicationEndpoint endpoint, EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.UserPresenceNotificationEventArgs&gt; notificationDelegate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterForUserPresenceNotification(class Microsoft.Rtc.Collaboration.ApplicationEndpoint endpoint, class System.EventHandler`1&lt;class Microsoft.Rtc.Internal.Collaboration.UserPresenceNotificationEventArgs&gt; notificationDelegate) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.RegisterForUserPresenceNotification(Microsoft.Rtc.Collaboration.ApplicationEndpoint,System.EventHandler{Microsoft.Rtc.Internal.Collaboration.UserPresenceNotificationEventArgs})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RegisterForUserPresenceNotification (endpoint As ApplicationEndpoint, notificationDelegate As EventHandler(Of UserPresenceNotificationEventArgs))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void RegisterForUserPresenceNotification(Microsoft::Rtc::Collaboration::ApplicationEndpoint ^ endpoint, EventHandler&lt;Microsoft::Rtc::Internal::Collaboration::UserPresenceNotificationEventArgs ^&gt; ^ notificationDelegate);" />
        <MemberSignature Language="F#" Value="static member RegisterForUserPresenceNotification : Microsoft.Rtc.Collaboration.ApplicationEndpoint * EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.UserPresenceNotificationEventArgs&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.RegisterForUserPresenceNotification (endpoint, notificationDelegate)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.ApplicationEndpoint" RefType="this" />
          <Parameter Name="notificationDelegate" Type="System.EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.UserPresenceNotificationEventArgs&gt;" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="notificationDelegate">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods" Member="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.RegisterForUserPresenceNotification(Microsoft.Rtc.Collaboration.ApplicationEndpoint,System.EventHandler{Microsoft.Rtc.Internal.Collaboration.UserPresenceNotificationEventArgs})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ApplicationEndpoint" />
      </Targets>
      <Member MemberName="SetMediaEdgeAuthenticationService">
        <MemberSignature Language="C#" Value="public static void SetMediaEdgeAuthenticationService (this Microsoft.Rtc.Collaboration.ApplicationEndpoint endpoint, Microsoft.Rtc.Signaling.ConnectionContext connectionContext);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMediaEdgeAuthenticationService(class Microsoft.Rtc.Collaboration.ApplicationEndpoint endpoint, class Microsoft.Rtc.Signaling.ConnectionContext connectionContext) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.SetMediaEdgeAuthenticationService(Microsoft.Rtc.Collaboration.ApplicationEndpoint,Microsoft.Rtc.Signaling.ConnectionContext)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetMediaEdgeAuthenticationService(Microsoft::Rtc::Collaboration::ApplicationEndpoint ^ endpoint, Microsoft::Rtc::Signaling::ConnectionContext ^ connectionContext);" />
        <MemberSignature Language="F#" Value="static member SetMediaEdgeAuthenticationService : Microsoft.Rtc.Collaboration.ApplicationEndpoint * Microsoft.Rtc.Signaling.ConnectionContext -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.SetMediaEdgeAuthenticationService (endpoint, connectionContext)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.ApplicationEndpoint" RefType="this" />
          <Parameter Name="connectionContext" Type="Microsoft.Rtc.Signaling.ConnectionContext" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="connectionContext">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods" Member="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.SetMediaEdgeAuthenticationService(Microsoft.Rtc.Collaboration.ApplicationEndpoint,Microsoft.Rtc.Signaling.ConnectionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ApplicationEndpoint" />
      </Targets>
      <Member MemberName="UnregisterForUserPresenceNotification">
        <MemberSignature Language="C#" Value="public static void UnregisterForUserPresenceNotification (this Microsoft.Rtc.Collaboration.ApplicationEndpoint endpoint, EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.UserPresenceNotificationEventArgs&gt; notificationDelegate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterForUserPresenceNotification(class Microsoft.Rtc.Collaboration.ApplicationEndpoint endpoint, class System.EventHandler`1&lt;class Microsoft.Rtc.Internal.Collaboration.UserPresenceNotificationEventArgs&gt; notificationDelegate) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.UnregisterForUserPresenceNotification(Microsoft.Rtc.Collaboration.ApplicationEndpoint,System.EventHandler{Microsoft.Rtc.Internal.Collaboration.UserPresenceNotificationEventArgs})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub UnregisterForUserPresenceNotification (endpoint As ApplicationEndpoint, notificationDelegate As EventHandler(Of UserPresenceNotificationEventArgs))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void UnregisterForUserPresenceNotification(Microsoft::Rtc::Collaboration::ApplicationEndpoint ^ endpoint, EventHandler&lt;Microsoft::Rtc::Internal::Collaboration::UserPresenceNotificationEventArgs ^&gt; ^ notificationDelegate);" />
        <MemberSignature Language="F#" Value="static member UnregisterForUserPresenceNotification : Microsoft.Rtc.Collaboration.ApplicationEndpoint * EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.UserPresenceNotificationEventArgs&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.UnregisterForUserPresenceNotification (endpoint, notificationDelegate)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.ApplicationEndpoint" RefType="this" />
          <Parameter Name="notificationDelegate" Type="System.EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.UserPresenceNotificationEventArgs&gt;" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="notificationDelegate">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods" Member="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointExtensionMethods.UnregisterForUserPresenceNotification(Microsoft.Rtc.Collaboration.ApplicationEndpoint,System.EventHandler{Microsoft.Rtc.Internal.Collaboration.UserPresenceNotificationEventArgs})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties" />
      </Targets>
      <Member MemberName="IsBackup">
        <MemberSignature Language="C#" Value="public static bool IsBackup (this Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties settings);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBackup(class Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties settings) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerPropertiesEx.IsBackup(Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsBackup (settings As ApplicationEndpointOwnerProperties) As Boolean" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsBackup(Microsoft::Rtc::Internal::Collaboration::ApplicationEndpointOwnerProperties ^ settings);" />
        <MemberSignature Language="F#" Value="static member IsBackup : Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerPropertiesEx.IsBackup settings" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="settings" Type="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties" RefType="this" />
        </Parameters>
        <Docs>
          <param name="settings">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerPropertiesEx" Member="M:Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerPropertiesEx.IsBackup(Microsoft.Rtc.Internal.Collaboration.ApplicationEndpointOwnerProperties)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ApplicationTopologyData" />
      </Targets>
      <Member MemberName="GetDefaultRegistrar">
        <MemberSignature Language="C#" Value="public static string GetDefaultRegistrar (this Microsoft.Rtc.Collaboration.ApplicationTopologyData applicationTopologyData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultRegistrar(class Microsoft.Rtc.Collaboration.ApplicationTopologyData applicationTopologyData) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ApplicationTopologyDataExtensions.GetDefaultRegistrar(Microsoft.Rtc.Collaboration.ApplicationTopologyData)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetDefaultRegistrar(Microsoft::Rtc::Collaboration::ApplicationTopologyData ^ applicationTopologyData);" />
        <MemberSignature Language="F#" Value="static member GetDefaultRegistrar : Microsoft.Rtc.Collaboration.ApplicationTopologyData -&gt; string" Usage="Microsoft.Rtc.Internal.Collaboration.ApplicationTopologyDataExtensions.GetDefaultRegistrar applicationTopologyData" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="applicationTopologyData" Type="Microsoft.Rtc.Collaboration.ApplicationTopologyData" RefType="this" />
        </Parameters>
        <Docs>
          <param name="applicationTopologyData">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ApplicationTopologyDataExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ApplicationTopologyDataExtensions.GetDefaultRegistrar(Microsoft.Rtc.Collaboration.ApplicationTopologyData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ApplicationTopologyData" />
      </Targets>
      <Member MemberName="GetDefaultRegistrarPort">
        <MemberSignature Language="C#" Value="public static int GetDefaultRegistrarPort (this Microsoft.Rtc.Collaboration.ApplicationTopologyData applicationTopologyData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDefaultRegistrarPort(class Microsoft.Rtc.Collaboration.ApplicationTopologyData applicationTopologyData) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ApplicationTopologyDataExtensions.GetDefaultRegistrarPort(Microsoft.Rtc.Collaboration.ApplicationTopologyData)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int GetDefaultRegistrarPort(Microsoft::Rtc::Collaboration::ApplicationTopologyData ^ applicationTopologyData);" />
        <MemberSignature Language="F#" Value="static member GetDefaultRegistrarPort : Microsoft.Rtc.Collaboration.ApplicationTopologyData -&gt; int" Usage="Microsoft.Rtc.Internal.Collaboration.ApplicationTopologyDataExtensions.GetDefaultRegistrarPort applicationTopologyData" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="applicationTopologyData" Type="Microsoft.Rtc.Collaboration.ApplicationTopologyData" RefType="this" />
        </Parameters>
        <Docs>
          <param name="applicationTopologyData">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ApplicationTopologyDataExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ApplicationTopologyDataExtensions.GetDefaultRegistrarPort(Microsoft.Rtc.Collaboration.ApplicationTopologyData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuParticipantEndpointProperties" />
      </Targets>
      <Member MemberName="GetParticipantEndpointId">
        <MemberSignature Language="C#" Value="public static string GetParticipantEndpointId (this Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuParticipantEndpointProperties avmcuParticipantEndpointProperties);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetParticipantEndpointId(class Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuParticipantEndpointProperties avmcuParticipantEndpointProperties) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuParticipantEndpointPropertiesExtensions.GetParticipantEndpointId(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuParticipantEndpointProperties)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetParticipantEndpointId (avmcuParticipantEndpointProperties As AudioVideoMcuParticipantEndpointProperties) As String" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetParticipantEndpointId(Microsoft::Rtc::Collaboration::AudioVideo::AudioVideoMcuParticipantEndpointProperties ^ avmcuParticipantEndpointProperties);" />
        <MemberSignature Language="F#" Value="static member GetParticipantEndpointId : Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuParticipantEndpointProperties -&gt; string" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuParticipantEndpointPropertiesExtensions.GetParticipantEndpointId avmcuParticipantEndpointProperties" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="avmcuParticipantEndpointProperties" Type="Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuParticipantEndpointProperties" RefType="this" />
        </Parameters>
        <Docs>
          <param name="avmcuParticipantEndpointProperties">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuParticipantEndpointPropertiesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuParticipantEndpointPropertiesExtensions.GetParticipantEndpointId(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuParticipantEndpointProperties)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" />
      </Targets>
      <Member MemberName="BeginHold">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginHold (this Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, Microsoft.Rtc.Collaboration.ParticipantEndpoint endpoint, Microsoft.Rtc.Internal.Collaboration.AudioVideo.HoldOptions options, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginHold(class Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, class Microsoft.Rtc.Collaboration.ParticipantEndpoint endpoint, class Microsoft.Rtc.Internal.Collaboration.AudioVideo.HoldOptions options, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.BeginHold(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,Microsoft.Rtc.Collaboration.ParticipantEndpoint,Microsoft.Rtc.Internal.Collaboration.AudioVideo.HoldOptions,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginHold (avmcuSession As AudioVideoMcuSession, endpoint As ParticipantEndpoint, options As HoldOptions, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginHold(Microsoft::Rtc::Collaboration::AudioVideo::AudioVideoMcuSession ^ avmcuSession, Microsoft::Rtc::Collaboration::ParticipantEndpoint ^ endpoint, Microsoft::Rtc::Internal::Collaboration::AudioVideo::HoldOptions ^ options, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginHold : Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession * Microsoft.Rtc.Collaboration.ParticipantEndpoint * Microsoft.Rtc.Internal.Collaboration.AudioVideo.HoldOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.BeginHold (avmcuSession, endpoint, options, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="avmcuSession" Type="Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" RefType="this" />
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.ParticipantEndpoint" />
          <Parameter Name="options" Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.HoldOptions" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="avmcuSession">To be added.</param>
          <param name="endpoint">To be added.</param>
          <param name="options">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.BeginHold(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,Microsoft.Rtc.Collaboration.ParticipantEndpoint,Microsoft.Rtc.Internal.Collaboration.AudioVideo.HoldOptions,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" />
      </Targets>
      <Member MemberName="BeginModifyVideoSource">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginModifyVideoSource (this Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, Microsoft.Rtc.Collaboration.AudioVideo.VideoSource videoSource, Microsoft.Rtc.Internal.Collaboration.AudioVideo.ModifyVideoSourceOptions options, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginModifyVideoSource(class Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, class Microsoft.Rtc.Collaboration.AudioVideo.VideoSource videoSource, class Microsoft.Rtc.Internal.Collaboration.AudioVideo.ModifyVideoSourceOptions options, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.BeginModifyVideoSource(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,Microsoft.Rtc.Collaboration.AudioVideo.VideoSource,Microsoft.Rtc.Internal.Collaboration.AudioVideo.ModifyVideoSourceOptions,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginModifyVideoSource(Microsoft::Rtc::Collaboration::AudioVideo::AudioVideoMcuSession ^ avmcuSession, Microsoft::Rtc::Collaboration::AudioVideo::VideoSource ^ videoSource, Microsoft::Rtc::Internal::Collaboration::AudioVideo::ModifyVideoSourceOptions ^ options, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginModifyVideoSource : Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession * Microsoft.Rtc.Collaboration.AudioVideo.VideoSource * Microsoft.Rtc.Internal.Collaboration.AudioVideo.ModifyVideoSourceOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.BeginModifyVideoSource (avmcuSession, videoSource, options, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="avmcuSession" Type="Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" RefType="this" />
          <Parameter Name="videoSource" Type="Microsoft.Rtc.Collaboration.AudioVideo.VideoSource" />
          <Parameter Name="options" Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.ModifyVideoSourceOptions" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="avmcuSession">To be added.</param>
          <param name="videoSource">To be added.</param>
          <param name="options">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.BeginModifyVideoSource(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,Microsoft.Rtc.Collaboration.AudioVideo.VideoSource,Microsoft.Rtc.Internal.Collaboration.AudioVideo.ModifyVideoSourceOptions,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" />
      </Targets>
      <Member MemberName="BeginResume">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginResume (this Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, Microsoft.Rtc.Collaboration.ParticipantEndpoint endpoint, Microsoft.Rtc.Internal.Collaboration.AudioVideo.ResumeOptions options, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResume(class Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, class Microsoft.Rtc.Collaboration.ParticipantEndpoint endpoint, class Microsoft.Rtc.Internal.Collaboration.AudioVideo.ResumeOptions options, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.BeginResume(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,Microsoft.Rtc.Collaboration.ParticipantEndpoint,Microsoft.Rtc.Internal.Collaboration.AudioVideo.ResumeOptions,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginResume (avmcuSession As AudioVideoMcuSession, endpoint As ParticipantEndpoint, options As ResumeOptions, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginResume(Microsoft::Rtc::Collaboration::AudioVideo::AudioVideoMcuSession ^ avmcuSession, Microsoft::Rtc::Collaboration::ParticipantEndpoint ^ endpoint, Microsoft::Rtc::Internal::Collaboration::AudioVideo::ResumeOptions ^ options, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginResume : Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession * Microsoft.Rtc.Collaboration.ParticipantEndpoint * Microsoft.Rtc.Internal.Collaboration.AudioVideo.ResumeOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.BeginResume (avmcuSession, endpoint, options, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="avmcuSession" Type="Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" RefType="this" />
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.ParticipantEndpoint" />
          <Parameter Name="options" Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.ResumeOptions" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="avmcuSession">To be added.</param>
          <param name="endpoint">To be added.</param>
          <param name="options">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.BeginResume(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,Microsoft.Rtc.Collaboration.ParticipantEndpoint,Microsoft.Rtc.Internal.Collaboration.AudioVideo.ResumeOptions,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" />
      </Targets>
      <Member MemberName="BeginTransfer">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginTransfer (this Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, string remoteEndpointAddress, string conversationId, string participantUri, string participantDisplayName, string referToUri, string replacesHeaderValue, System.Collections.Generic.IEnumerable&lt;string&gt; mediaTypes, Microsoft.Rtc.Collaboration.McuTransferOptions mcuTransferOptions, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginTransfer(class Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, string remoteEndpointAddress, string conversationId, string participantUri, string participantDisplayName, string referToUri, string replacesHeaderValue, class System.Collections.Generic.IEnumerable`1&lt;string&gt; mediaTypes, class Microsoft.Rtc.Collaboration.McuTransferOptions mcuTransferOptions, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.BeginTransfer(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Rtc.Collaboration.McuTransferOptions,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginTransfer(Microsoft::Rtc::Collaboration::AudioVideo::AudioVideoMcuSession ^ avmcuSession, System::String ^ remoteEndpointAddress, System::String ^ conversationId, System::String ^ participantUri, System::String ^ participantDisplayName, System::String ^ referToUri, System::String ^ replacesHeaderValue, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ mediaTypes, Microsoft::Rtc::Collaboration::McuTransferOptions ^ mcuTransferOptions, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginTransfer : Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession * string * string * string * string * string * string * seq&lt;string&gt; * Microsoft.Rtc.Collaboration.McuTransferOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.BeginTransfer (avmcuSession, remoteEndpointAddress, conversationId, participantUri, participantDisplayName, referToUri, replacesHeaderValue, mediaTypes, mcuTransferOptions, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="avmcuSession" Type="Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" RefType="this" />
          <Parameter Name="remoteEndpointAddress" Type="System.String" />
          <Parameter Name="conversationId" Type="System.String" />
          <Parameter Name="participantUri" Type="System.String" />
          <Parameter Name="participantDisplayName" Type="System.String" />
          <Parameter Name="referToUri" Type="System.String" />
          <Parameter Name="replacesHeaderValue" Type="System.String" />
          <Parameter Name="mediaTypes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
          <Parameter Name="mcuTransferOptions" Type="Microsoft.Rtc.Collaboration.McuTransferOptions" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="avmcuSession">To be added.</param>
          <param name="remoteEndpointAddress">To be added.</param>
          <param name="conversationId">To be added.</param>
          <param name="participantUri">To be added.</param>
          <param name="participantDisplayName">To be added.</param>
          <param name="referToUri">To be added.</param>
          <param name="replacesHeaderValue">To be added.</param>
          <param name="mediaTypes">To be added.</param>
          <param name="mcuTransferOptions">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.BeginTransfer(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Rtc.Collaboration.McuTransferOptions,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" />
      </Targets>
      <Member MemberName="CreateVideoSource">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Collaboration.AudioVideo.VideoSource CreateVideoSource (this Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, Microsoft.Rtc.Collaboration.AudioVideo.VideoSourceMode videoSourceMode, Microsoft.Rtc.Collaboration.ParticipantEndpoint participantEndpoint = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Collaboration.AudioVideo.VideoSource CreateVideoSource(class Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, valuetype Microsoft.Rtc.Collaboration.AudioVideo.VideoSourceMode videoSourceMode, class Microsoft.Rtc.Collaboration.ParticipantEndpoint participantEndpoint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.CreateVideoSource(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,Microsoft.Rtc.Collaboration.AudioVideo.VideoSourceMode,Microsoft.Rtc.Collaboration.ParticipantEndpoint)" />
        <MemberSignature Language="F#" Value="static member CreateVideoSource : Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession * Microsoft.Rtc.Collaboration.AudioVideo.VideoSourceMode * Microsoft.Rtc.Collaboration.ParticipantEndpoint -&gt; Microsoft.Rtc.Collaboration.AudioVideo.VideoSource" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.CreateVideoSource (avmcuSession, videoSourceMode, participantEndpoint)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Collaboration.AudioVideo.VideoSource</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="avmcuSession" Type="Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" RefType="this" />
          <Parameter Name="videoSourceMode" Type="Microsoft.Rtc.Collaboration.AudioVideo.VideoSourceMode" />
          <Parameter Name="participantEndpoint" Type="Microsoft.Rtc.Collaboration.ParticipantEndpoint" />
        </Parameters>
        <Docs>
          <param name="avmcuSession">To be added.</param>
          <param name="videoSourceMode">To be added.</param>
          <param name="participantEndpoint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.CreateVideoSource(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,Microsoft.Rtc.Collaboration.AudioVideo.VideoSourceMode,Microsoft.Rtc.Collaboration.ParticipantEndpoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" />
      </Targets>
      <Member MemberName="EndHold">
        <MemberSignature Language="C#" Value="public static void EndHold (this Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndHold(class Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.EndHold(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,System.IAsyncResult)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub EndHold (avmcuSession As AudioVideoMcuSession, result As IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EndHold(Microsoft::Rtc::Collaboration::AudioVideo::AudioVideoMcuSession ^ avmcuSession, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndHold : Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession * IAsyncResult -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.EndHold (avmcuSession, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="avmcuSession" Type="Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="avmcuSession">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.EndHold(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" />
      </Targets>
      <Member MemberName="EndModifyVideoSource">
        <MemberSignature Language="C#" Value="public static void EndModifyVideoSource (this Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndModifyVideoSource(class Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.EndModifyVideoSource(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,System.IAsyncResult)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub EndModifyVideoSource (avmcuSession As AudioVideoMcuSession, result As IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EndModifyVideoSource(Microsoft::Rtc::Collaboration::AudioVideo::AudioVideoMcuSession ^ avmcuSession, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndModifyVideoSource : Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession * IAsyncResult -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.EndModifyVideoSource (avmcuSession, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="avmcuSession" Type="Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="avmcuSession">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.EndModifyVideoSource(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" />
      </Targets>
      <Member MemberName="EndResume">
        <MemberSignature Language="C#" Value="public static void EndResume (this Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndResume(class Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession avmcuSession, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.EndResume(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,System.IAsyncResult)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub EndResume (avmcuSession As AudioVideoMcuSession, result As IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EndResume(Microsoft::Rtc::Collaboration::AudioVideo::AudioVideoMcuSession ^ avmcuSession, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndResume : Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession * IAsyncResult -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.EndResume (avmcuSession, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="avmcuSession" Type="Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="avmcuSession">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoMcuSessionExtensions.EndResume(Microsoft.Rtc.Collaboration.AudioVideo.AudioVideoMcuSession,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallDialogContext" />
      </Targets>
      <Member MemberName="GetCall">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Collaboration.Call GetCall (this Microsoft.Rtc.Collaboration.CallDialogContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Collaboration.Call GetCall(class Microsoft.Rtc.Collaboration.CallDialogContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetCall(Microsoft.Rtc.Collaboration.CallDialogContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCall (context As CallDialogContext) As Call" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Collaboration::Call ^ GetCall(Microsoft::Rtc::Collaboration::CallDialogContext ^ context);" />
        <MemberSignature Language="F#" Value="static member GetCall : Microsoft.Rtc.Collaboration.CallDialogContext -&gt; Microsoft.Rtc.Collaboration.Call" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetCall context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Collaboration.Call</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Rtc.Collaboration.CallDialogContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetCall(Microsoft.Rtc.Collaboration.CallDialogContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext" />
      </Targets>
      <Member MemberName="GetConnection">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Signaling.RealTimeConnection GetConnection (this Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Signaling.RealTimeConnection GetConnection(class Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetConnection(Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnection (context As OfferAnswerContext) As RealTimeConnection" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Signaling::RealTimeConnection ^ GetConnection(Microsoft::Rtc::Collaboration::ComponentModel::OfferAnswerContext ^ context);" />
        <MemberSignature Language="F#" Value="static member GetConnection : Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext -&gt; Microsoft.Rtc.Signaling.RealTimeConnection" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetConnection context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Signaling.RealTimeConnection</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetConnection(Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext" />
      </Targets>
      <Member MemberName="GetLocalEndpointLocation">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Media.RtpEndpointLocation GetLocalEndpointLocation (this Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Rtc.Internal.Media.RtpEndpointLocation GetLocalEndpointLocation(class Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetLocalEndpointLocation(Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLocalEndpointLocation (context As OfferAnswerContext) As RtpEndpointLocation" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Media::RtpEndpointLocation GetLocalEndpointLocation(Microsoft::Rtc::Collaboration::ComponentModel::OfferAnswerContext ^ context);" />
        <MemberSignature Language="F#" Value="static member GetLocalEndpointLocation : Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext -&gt; Microsoft.Rtc.Internal.Media.RtpEndpointLocation" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetLocalEndpointLocation context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Media.RtpEndpointLocation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetLocalEndpointLocation(Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext" />
      </Targets>
      <Member MemberName="GetMediaRelayToken">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.MediaRelayToken GetMediaRelayToken (this Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Collaboration.MediaRelayToken GetMediaRelayToken(class Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetMediaRelayToken(Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaRelayToken (context As OfferAnswerContext) As MediaRelayToken" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::MediaRelayToken ^ GetMediaRelayToken(Microsoft::Rtc::Collaboration::ComponentModel::OfferAnswerContext ^ context);" />
        <MemberSignature Language="F#" Value="static member GetMediaRelayToken : Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext -&gt; Microsoft.Rtc.Internal.Collaboration.MediaRelayToken" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetMediaRelayToken context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.MediaRelayToken</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetMediaRelayToken(Microsoft.Rtc.Collaboration.ComponentModel.OfferAnswerContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Call" />
      </Targets>
      <Member MemberName="GetRemoteParticipant">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Collaboration.ConversationParticipant GetRemoteParticipant (this Microsoft.Rtc.Collaboration.Call call);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Collaboration.ConversationParticipant GetRemoteParticipant(class Microsoft.Rtc.Collaboration.Call call) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetRemoteParticipant(Microsoft.Rtc.Collaboration.Call)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Collaboration::ConversationParticipant ^ GetRemoteParticipant(Microsoft::Rtc::Collaboration::Call ^ call);" />
        <MemberSignature Language="F#" Value="static member GetRemoteParticipant : Microsoft.Rtc.Collaboration.Call -&gt; Microsoft.Rtc.Collaboration.ConversationParticipant" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetRemoteParticipant call" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Collaboration.ConversationParticipant</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="call" Type="Microsoft.Rtc.Collaboration.Call" RefType="this" />
        </Parameters>
        <Docs>
          <param name="call">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetRemoteParticipant(Microsoft.Rtc.Collaboration.Call)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallDialogContext" />
      </Targets>
      <Member MemberName="GetSignalingSession">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Signaling.SignalingSession GetSignalingSession (this Microsoft.Rtc.Collaboration.CallDialogContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Signaling.SignalingSession GetSignalingSession(class Microsoft.Rtc.Collaboration.CallDialogContext context) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetSignalingSession(Microsoft.Rtc.Collaboration.CallDialogContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSignalingSession (context As CallDialogContext) As SignalingSession" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Signaling::SignalingSession ^ GetSignalingSession(Microsoft::Rtc::Collaboration::CallDialogContext ^ context);" />
        <MemberSignature Language="F#" Value="static member GetSignalingSession : Microsoft.Rtc.Collaboration.CallDialogContext -&gt; Microsoft.Rtc.Signaling.SignalingSession" Usage="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetSignalingSession context" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Signaling.SignalingSession</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Rtc.Collaboration.CallDialogContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper" Member="M:Microsoft.Rtc.Internal.Collaboration.AudioVideo.AudioVideoProviderHelper.GetSignalingSession(Microsoft.Rtc.Collaboration.CallDialogContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.BackToBackCall" />
      </Targets>
      <Member MemberName="EnableEscalationMode">
        <MemberSignature Language="C#" Value="public static void EnableEscalationMode (this Microsoft.Rtc.Collaboration.BackToBackCall backToBackCall);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableEscalationMode(class Microsoft.Rtc.Collaboration.BackToBackCall backToBackCall) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.BackToBackCallExtensions.EnableEscalationMode(Microsoft.Rtc.Collaboration.BackToBackCall)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EnableEscalationMode(Microsoft::Rtc::Collaboration::BackToBackCall ^ backToBackCall);" />
        <MemberSignature Language="F#" Value="static member EnableEscalationMode : Microsoft.Rtc.Collaboration.BackToBackCall -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.BackToBackCallExtensions.EnableEscalationMode backToBackCall" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="backToBackCall" Type="Microsoft.Rtc.Collaboration.BackToBackCall" RefType="this" />
        </Parameters>
        <Docs>
          <param name="backToBackCall">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.BackToBackCallExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.BackToBackCallExtensions.EnableEscalationMode(Microsoft.Rtc.Collaboration.BackToBackCall)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Call" />
      </Targets>
      <Member MemberName="CreateSessionErrorReport">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Signaling.SessionErrorReport CreateSessionErrorReport (this Microsoft.Rtc.Collaboration.Call call, Microsoft.Rtc.Signaling.DiagnosticsInformation diagInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Signaling.SessionErrorReport CreateSessionErrorReport(class Microsoft.Rtc.Collaboration.Call call, class Microsoft.Rtc.Signaling.DiagnosticsInformation diagInfo) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.CreateSessionErrorReport(Microsoft.Rtc.Collaboration.Call,Microsoft.Rtc.Signaling.DiagnosticsInformation)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Signaling::SessionErrorReport ^ CreateSessionErrorReport(Microsoft::Rtc::Collaboration::Call ^ call, Microsoft::Rtc::Signaling::DiagnosticsInformation ^ diagInfo);" />
        <MemberSignature Language="F#" Value="static member CreateSessionErrorReport : Microsoft.Rtc.Collaboration.Call * Microsoft.Rtc.Signaling.DiagnosticsInformation -&gt; Microsoft.Rtc.Internal.Signaling.SessionErrorReport" Usage="Microsoft.Rtc.Internal.Collaboration.CallExtensions.CreateSessionErrorReport (call, diagInfo)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Signaling.SessionErrorReport</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="call" Type="Microsoft.Rtc.Collaboration.Call" RefType="this" />
          <Parameter Name="diagInfo" Type="Microsoft.Rtc.Signaling.DiagnosticsInformation" />
        </Parameters>
        <Docs>
          <param name="call">To be added.</param>
          <param name="diagInfo">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.CreateSessionErrorReport(Microsoft.Rtc.Collaboration.Call,Microsoft.Rtc.Signaling.DiagnosticsInformation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Call" />
      </Targets>
      <Member MemberName="GeneratePrimarySessionCallId">
        <MemberSignature Language="C#" Value="public static void GeneratePrimarySessionCallId (this Microsoft.Rtc.Collaboration.Call call);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GeneratePrimarySessionCallId(class Microsoft.Rtc.Collaboration.Call call) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.GeneratePrimarySessionCallId(Microsoft.Rtc.Collaboration.Call)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void GeneratePrimarySessionCallId(Microsoft::Rtc::Collaboration::Call ^ call);" />
        <MemberSignature Language="F#" Value="static member GeneratePrimarySessionCallId : Microsoft.Rtc.Collaboration.Call -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallExtensions.GeneratePrimarySessionCallId call" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="call" Type="Microsoft.Rtc.Collaboration.Call" RefType="this" />
        </Parameters>
        <Docs>
          <param name="call">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.GeneratePrimarySessionCallId(Microsoft.Rtc.Collaboration.Call)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Call" />
      </Targets>
      <Member MemberName="GetConferenceQoeServerAddress">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Signaling.RealTimeAddress GetConferenceQoeServerAddress (this Microsoft.Rtc.Collaboration.Call call);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Signaling.RealTimeAddress GetConferenceQoeServerAddress(class Microsoft.Rtc.Collaboration.Call call) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.GetConferenceQoeServerAddress(Microsoft.Rtc.Collaboration.Call)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Signaling::RealTimeAddress ^ GetConferenceQoeServerAddress(Microsoft::Rtc::Collaboration::Call ^ call);" />
        <MemberSignature Language="F#" Value="static member GetConferenceQoeServerAddress : Microsoft.Rtc.Collaboration.Call -&gt; Microsoft.Rtc.Signaling.RealTimeAddress" Usage="Microsoft.Rtc.Internal.Collaboration.CallExtensions.GetConferenceQoeServerAddress call" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Signaling.RealTimeAddress</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="call" Type="Microsoft.Rtc.Collaboration.Call" RefType="this" />
        </Parameters>
        <Docs>
          <param name="call">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.GetConferenceQoeServerAddress(Microsoft.Rtc.Collaboration.Call)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Call" />
      </Targets>
      <Member MemberName="GetIfCallFromVerifiedSource">
        <MemberSignature Language="C#" Value="public static bool GetIfCallFromVerifiedSource (this Microsoft.Rtc.Collaboration.Call call);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIfCallFromVerifiedSource(class Microsoft.Rtc.Collaboration.Call call) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.GetIfCallFromVerifiedSource(Microsoft.Rtc.Collaboration.Call)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool GetIfCallFromVerifiedSource(Microsoft::Rtc::Collaboration::Call ^ call);" />
        <MemberSignature Language="F#" Value="static member GetIfCallFromVerifiedSource : Microsoft.Rtc.Collaboration.Call -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.CallExtensions.GetIfCallFromVerifiedSource call" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="call" Type="Microsoft.Rtc.Collaboration.Call" RefType="this" />
        </Parameters>
        <Docs>
          <param name="call">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.GetIfCallFromVerifiedSource(Microsoft.Rtc.Collaboration.Call)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Call" />
      </Targets>
      <Member MemberName="GetMcuReplacesInformation">
        <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection GetMcuReplacesInformation (this Microsoft.Rtc.Collaboration.Call call);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.NameValueCollection GetMcuReplacesInformation(class Microsoft.Rtc.Collaboration.Call call) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.GetMcuReplacesInformation(Microsoft.Rtc.Collaboration.Call)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Specialized::NameValueCollection ^ GetMcuReplacesInformation(Microsoft::Rtc::Collaboration::Call ^ call);" />
        <MemberSignature Language="F#" Value="static member GetMcuReplacesInformation : Microsoft.Rtc.Collaboration.Call -&gt; System.Collections.Specialized.NameValueCollection" Usage="Microsoft.Rtc.Internal.Collaboration.CallExtensions.GetMcuReplacesInformation call" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="call" Type="Microsoft.Rtc.Collaboration.Call" RefType="this" />
        </Parameters>
        <Docs>
          <param name="call">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.GetMcuReplacesInformation(Microsoft.Rtc.Collaboration.Call)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallStateChangedEventArgs" />
      </Targets>
      <Member MemberName="GetTransitionSubreason">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.CallStateTransitionSubreason GetTransitionSubreason (this Microsoft.Rtc.Collaboration.CallStateChangedEventArgs e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Rtc.Internal.Collaboration.CallStateTransitionSubreason GetTransitionSubreason(class Microsoft.Rtc.Collaboration.CallStateChangedEventArgs e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.GetTransitionSubreason(Microsoft.Rtc.Collaboration.CallStateChangedEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTransitionSubreason (e As CallStateChangedEventArgs) As CallStateTransitionSubreason" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::CallStateTransitionSubreason GetTransitionSubreason(Microsoft::Rtc::Collaboration::CallStateChangedEventArgs ^ e);" />
        <MemberSignature Language="F#" Value="static member GetTransitionSubreason : Microsoft.Rtc.Collaboration.CallStateChangedEventArgs -&gt; Microsoft.Rtc.Internal.Collaboration.CallStateTransitionSubreason" Usage="Microsoft.Rtc.Internal.Collaboration.CallExtensions.GetTransitionSubreason e" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.CallStateTransitionSubreason</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="Microsoft.Rtc.Collaboration.CallStateChangedEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.GetTransitionSubreason(Microsoft.Rtc.Collaboration.CallStateChangedEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Call" />
      </Targets>
      <Member MemberName="Redeliver">
        <MemberSignature Language="C#" Value="public static void Redeliver (this Microsoft.Rtc.Collaboration.Call call);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Redeliver(class Microsoft.Rtc.Collaboration.Call call) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.Redeliver(Microsoft.Rtc.Collaboration.Call)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Redeliver(Microsoft::Rtc::Collaboration::Call ^ call);" />
        <MemberSignature Language="F#" Value="static member Redeliver : Microsoft.Rtc.Collaboration.Call -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallExtensions.Redeliver call" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="call" Type="Microsoft.Rtc.Collaboration.Call" RefType="this" />
        </Parameters>
        <Docs>
          <param name="call">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.Redeliver(Microsoft.Rtc.Collaboration.Call)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Call" />
      </Targets>
      <Member MemberName="SetMissedCallStatus">
        <MemberSignature Language="C#" Value="public static void SetMissedCallStatus (this Microsoft.Rtc.Collaboration.Call call, bool isMissedCall);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMissedCallStatus(class Microsoft.Rtc.Collaboration.Call call, bool isMissedCall) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.SetMissedCallStatus(Microsoft.Rtc.Collaboration.Call,System.Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetMissedCallStatus(Microsoft::Rtc::Collaboration::Call ^ call, bool isMissedCall);" />
        <MemberSignature Language="F#" Value="static member SetMissedCallStatus : Microsoft.Rtc.Collaboration.Call * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallExtensions.SetMissedCallStatus (call, isMissedCall)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="call" Type="Microsoft.Rtc.Collaboration.Call" RefType="this" />
          <Parameter Name="isMissedCall" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="call">To be added.</param>
          <param name="isMissedCall">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallExtensions.SetMissedCallStatus(Microsoft.Rtc.Collaboration.Call,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallAcceptOptions" />
      </Targets>
      <Member MemberName="AddFeatureParameter">
        <MemberSignature Language="C#" Value="public static void AddFeatureParameter (this Microsoft.Rtc.Collaboration.CallAcceptOptions callAcceptOptions, string name, string value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddFeatureParameter(class Microsoft.Rtc.Collaboration.CallAcceptOptions callAcceptOptions, string name, string value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.AddFeatureParameter(Microsoft.Rtc.Collaboration.CallAcceptOptions,System.String,System.String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddFeatureParameter(Microsoft::Rtc::Collaboration::CallAcceptOptions ^ callAcceptOptions, System::String ^ name, System::String ^ value);" />
        <MemberSignature Language="F#" Value="static member AddFeatureParameter : Microsoft.Rtc.Collaboration.CallAcceptOptions * string * string -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.AddFeatureParameter (callAcceptOptions, name, value)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="callAcceptOptions" Type="Microsoft.Rtc.Collaboration.CallAcceptOptions" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="callAcceptOptions">To be added.</param>
          <param name="name">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.AddFeatureParameter(Microsoft.Rtc.Collaboration.CallAcceptOptions,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallEstablishOptions" />
      </Targets>
      <Member MemberName="AddFeatureParameter">
        <MemberSignature Language="C#" Value="public static void AddFeatureParameter (this Microsoft.Rtc.Collaboration.CallEstablishOptions callEstablishOptions, string name, string value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddFeatureParameter(class Microsoft.Rtc.Collaboration.CallEstablishOptions callEstablishOptions, string name, string value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.AddFeatureParameter(Microsoft.Rtc.Collaboration.CallEstablishOptions,System.String,System.String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddFeatureParameter(Microsoft::Rtc::Collaboration::CallEstablishOptions ^ callEstablishOptions, System::String ^ name, System::String ^ value);" />
        <MemberSignature Language="F#" Value="static member AddFeatureParameter : Microsoft.Rtc.Collaboration.CallEstablishOptions * string * string -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.AddFeatureParameter (callEstablishOptions, name, value)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="callEstablishOptions" Type="Microsoft.Rtc.Collaboration.CallEstablishOptions" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="callEstablishOptions">To be added.</param>
          <param name="name">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.AddFeatureParameter(Microsoft.Rtc.Collaboration.CallEstablishOptions,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallAcceptOptions" />
      </Targets>
      <Member MemberName="GetDiagnosticsInformation">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Signaling.DiagnosticsInformation GetDiagnosticsInformation (this Microsoft.Rtc.Collaboration.CallAcceptOptions callAcceptOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Signaling.DiagnosticsInformation GetDiagnosticsInformation(class Microsoft.Rtc.Collaboration.CallAcceptOptions callAcceptOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.GetDiagnosticsInformation(Microsoft.Rtc.Collaboration.CallAcceptOptions)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Signaling::DiagnosticsInformation ^ GetDiagnosticsInformation(Microsoft::Rtc::Collaboration::CallAcceptOptions ^ callAcceptOptions);" />
        <MemberSignature Language="F#" Value="static member GetDiagnosticsInformation : Microsoft.Rtc.Collaboration.CallAcceptOptions -&gt; Microsoft.Rtc.Signaling.DiagnosticsInformation" Usage="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.GetDiagnosticsInformation callAcceptOptions" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Signaling.DiagnosticsInformation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="callAcceptOptions" Type="Microsoft.Rtc.Collaboration.CallAcceptOptions" RefType="this" />
        </Parameters>
        <Docs>
          <param name="callAcceptOptions">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.GetDiagnosticsInformation(Microsoft.Rtc.Collaboration.CallAcceptOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions" />
      </Targets>
      <Member MemberName="GetDiagnosticsInformation">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Signaling.DiagnosticsInformation GetDiagnosticsInformation (this Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions invitationAcceptOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Signaling.DiagnosticsInformation GetDiagnosticsInformation(class Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions invitationAcceptOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.GetDiagnosticsInformation(Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiagnosticsInformation (invitationAcceptOptions As ConferenceInvitationAcceptOptions) As DiagnosticsInformation" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Signaling::DiagnosticsInformation ^ GetDiagnosticsInformation(Microsoft::Rtc::Collaboration::ConferenceInvitationAcceptOptions ^ invitationAcceptOptions);" />
        <MemberSignature Language="F#" Value="static member GetDiagnosticsInformation : Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions -&gt; Microsoft.Rtc.Signaling.DiagnosticsInformation" Usage="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.GetDiagnosticsInformation invitationAcceptOptions" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Signaling.DiagnosticsInformation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="invitationAcceptOptions" Type="Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions" RefType="this" />
        </Parameters>
        <Docs>
          <param name="invitationAcceptOptions">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.GetDiagnosticsInformation(Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallAcceptOptions" />
      </Targets>
      <Member MemberName="SetAssertedIdentity">
        <MemberSignature Language="C#" Value="public static void SetAssertedIdentity (this Microsoft.Rtc.Collaboration.CallAcceptOptions callAcceptOptions, string uri, string phoneUri, string displayName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAssertedIdentity(class Microsoft.Rtc.Collaboration.CallAcceptOptions callAcceptOptions, string uri, string phoneUri, string displayName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetAssertedIdentity(Microsoft.Rtc.Collaboration.CallAcceptOptions,System.String,System.String,System.String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetAssertedIdentity(Microsoft::Rtc::Collaboration::CallAcceptOptions ^ callAcceptOptions, System::String ^ uri, System::String ^ phoneUri, System::String ^ displayName);" />
        <MemberSignature Language="F#" Value="static member SetAssertedIdentity : Microsoft.Rtc.Collaboration.CallAcceptOptions * string * string * string -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetAssertedIdentity (callAcceptOptions, uri, phoneUri, displayName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="callAcceptOptions" Type="Microsoft.Rtc.Collaboration.CallAcceptOptions" RefType="this" />
          <Parameter Name="uri" Type="System.String" />
          <Parameter Name="phoneUri" Type="System.String" />
          <Parameter Name="displayName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="callAcceptOptions">To be added.</param>
          <param name="uri">To be added.</param>
          <param name="phoneUri">To be added.</param>
          <param name="displayName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetAssertedIdentity(Microsoft.Rtc.Collaboration.CallAcceptOptions,System.String,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallEstablishOptions" />
      </Targets>
      <Member MemberName="SetAssertedIdentity">
        <MemberSignature Language="C#" Value="public static void SetAssertedIdentity (this Microsoft.Rtc.Collaboration.CallEstablishOptions callEstablishOptions, string uri, string phoneUri, string displayName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAssertedIdentity(class Microsoft.Rtc.Collaboration.CallEstablishOptions callEstablishOptions, string uri, string phoneUri, string displayName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetAssertedIdentity(Microsoft.Rtc.Collaboration.CallEstablishOptions,System.String,System.String,System.String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetAssertedIdentity(Microsoft::Rtc::Collaboration::CallEstablishOptions ^ callEstablishOptions, System::String ^ uri, System::String ^ phoneUri, System::String ^ displayName);" />
        <MemberSignature Language="F#" Value="static member SetAssertedIdentity : Microsoft.Rtc.Collaboration.CallEstablishOptions * string * string * string -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetAssertedIdentity (callEstablishOptions, uri, phoneUri, displayName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="callEstablishOptions" Type="Microsoft.Rtc.Collaboration.CallEstablishOptions" RefType="this" />
          <Parameter Name="uri" Type="System.String" />
          <Parameter Name="phoneUri" Type="System.String" />
          <Parameter Name="displayName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="callEstablishOptions">To be added.</param>
          <param name="uri">To be added.</param>
          <param name="phoneUri">To be added.</param>
          <param name="displayName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetAssertedIdentity(Microsoft.Rtc.Collaboration.CallEstablishOptions,System.String,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallAcceptOptions" />
      </Targets>
      <Member MemberName="SetDiagnosticsInformation">
        <MemberSignature Language="C#" Value="public static void SetDiagnosticsInformation (this Microsoft.Rtc.Collaboration.CallAcceptOptions callAcceptOptions, Microsoft.Rtc.Signaling.DiagnosticsInformation diagnostics);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDiagnosticsInformation(class Microsoft.Rtc.Collaboration.CallAcceptOptions callAcceptOptions, class Microsoft.Rtc.Signaling.DiagnosticsInformation diagnostics) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetDiagnosticsInformation(Microsoft.Rtc.Collaboration.CallAcceptOptions,Microsoft.Rtc.Signaling.DiagnosticsInformation)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetDiagnosticsInformation(Microsoft::Rtc::Collaboration::CallAcceptOptions ^ callAcceptOptions, Microsoft::Rtc::Signaling::DiagnosticsInformation ^ diagnostics);" />
        <MemberSignature Language="F#" Value="static member SetDiagnosticsInformation : Microsoft.Rtc.Collaboration.CallAcceptOptions * Microsoft.Rtc.Signaling.DiagnosticsInformation -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetDiagnosticsInformation (callAcceptOptions, diagnostics)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="callAcceptOptions" Type="Microsoft.Rtc.Collaboration.CallAcceptOptions" RefType="this" />
          <Parameter Name="diagnostics" Type="Microsoft.Rtc.Signaling.DiagnosticsInformation" />
        </Parameters>
        <Docs>
          <param name="callAcceptOptions">To be added.</param>
          <param name="diagnostics">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetDiagnosticsInformation(Microsoft.Rtc.Collaboration.CallAcceptOptions,Microsoft.Rtc.Signaling.DiagnosticsInformation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions" />
      </Targets>
      <Member MemberName="SetDiagnosticsInformation">
        <MemberSignature Language="C#" Value="public static void SetDiagnosticsInformation (this Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions invitationAcceptOptions, Microsoft.Rtc.Signaling.DiagnosticsInformation diagnostics);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDiagnosticsInformation(class Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions invitationAcceptOptions, class Microsoft.Rtc.Signaling.DiagnosticsInformation diagnostics) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetDiagnosticsInformation(Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions,Microsoft.Rtc.Signaling.DiagnosticsInformation)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDiagnosticsInformation (invitationAcceptOptions As ConferenceInvitationAcceptOptions, diagnostics As DiagnosticsInformation)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetDiagnosticsInformation(Microsoft::Rtc::Collaboration::ConferenceInvitationAcceptOptions ^ invitationAcceptOptions, Microsoft::Rtc::Signaling::DiagnosticsInformation ^ diagnostics);" />
        <MemberSignature Language="F#" Value="static member SetDiagnosticsInformation : Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions * Microsoft.Rtc.Signaling.DiagnosticsInformation -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetDiagnosticsInformation (invitationAcceptOptions, diagnostics)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="invitationAcceptOptions" Type="Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions" RefType="this" />
          <Parameter Name="diagnostics" Type="Microsoft.Rtc.Signaling.DiagnosticsInformation" />
        </Parameters>
        <Docs>
          <param name="invitationAcceptOptions">To be added.</param>
          <param name="diagnostics">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetDiagnosticsInformation(Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions,Microsoft.Rtc.Signaling.DiagnosticsInformation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallEstablishOptions" />
      </Targets>
      <Member MemberName="SetExchangeItemId">
        <MemberSignature Language="C#" Value="public static void SetExchangeItemId (this Microsoft.Rtc.Collaboration.CallEstablishOptions callEstablishOptions, string exchangeItemId);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetExchangeItemId(class Microsoft.Rtc.Collaboration.CallEstablishOptions callEstablishOptions, string exchangeItemId) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetExchangeItemId(Microsoft.Rtc.Collaboration.CallEstablishOptions,System.String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetExchangeItemId(Microsoft::Rtc::Collaboration::CallEstablishOptions ^ callEstablishOptions, System::String ^ exchangeItemId);" />
        <MemberSignature Language="F#" Value="static member SetExchangeItemId : Microsoft.Rtc.Collaboration.CallEstablishOptions * string -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetExchangeItemId (callEstablishOptions, exchangeItemId)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="callEstablishOptions" Type="Microsoft.Rtc.Collaboration.CallEstablishOptions" RefType="this" />
          <Parameter Name="exchangeItemId" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="callEstablishOptions">To be added.</param>
          <param name="exchangeItemId">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetExchangeItemId(Microsoft.Rtc.Collaboration.CallEstablishOptions,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallEstablishOptions" />
      </Targets>
      <Member MemberName="SetHistoryInfoContext">
        <MemberSignature Language="C#" Value="public static void SetHistoryInfoContext (this Microsoft.Rtc.Collaboration.CallEstablishOptions callEstablishOptions, Microsoft.Rtc.Internal.Collaboration.HistoryInfoContext historyInfoContext);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetHistoryInfoContext(class Microsoft.Rtc.Collaboration.CallEstablishOptions callEstablishOptions, class Microsoft.Rtc.Internal.Collaboration.HistoryInfoContext historyInfoContext) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetHistoryInfoContext(Microsoft.Rtc.Collaboration.CallEstablishOptions,Microsoft.Rtc.Internal.Collaboration.HistoryInfoContext)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetHistoryInfoContext(Microsoft::Rtc::Collaboration::CallEstablishOptions ^ callEstablishOptions, Microsoft::Rtc::Internal::Collaboration::HistoryInfoContext ^ historyInfoContext);" />
        <MemberSignature Language="F#" Value="static member SetHistoryInfoContext : Microsoft.Rtc.Collaboration.CallEstablishOptions * Microsoft.Rtc.Internal.Collaboration.HistoryInfoContext -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetHistoryInfoContext (callEstablishOptions, historyInfoContext)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="callEstablishOptions" Type="Microsoft.Rtc.Collaboration.CallEstablishOptions" RefType="this" />
          <Parameter Name="historyInfoContext" Type="Microsoft.Rtc.Internal.Collaboration.HistoryInfoContext" />
        </Parameters>
        <Docs>
          <param name="callEstablishOptions">To be added.</param>
          <param name="historyInfoContext">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetHistoryInfoContext(Microsoft.Rtc.Collaboration.CallEstablishOptions,Microsoft.Rtc.Internal.Collaboration.HistoryInfoContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallAcceptOptions" />
      </Targets>
      <Member MemberName="SetIsMissedCall">
        <MemberSignature Language="C#" Value="public static void SetIsMissedCall (this Microsoft.Rtc.Collaboration.CallAcceptOptions callAcceptOptions, bool isMissedCall);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsMissedCall(class Microsoft.Rtc.Collaboration.CallAcceptOptions callAcceptOptions, bool isMissedCall) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetIsMissedCall(Microsoft.Rtc.Collaboration.CallAcceptOptions,System.Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetIsMissedCall(Microsoft::Rtc::Collaboration::CallAcceptOptions ^ callAcceptOptions, bool isMissedCall);" />
        <MemberSignature Language="F#" Value="static member SetIsMissedCall : Microsoft.Rtc.Collaboration.CallAcceptOptions * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetIsMissedCall (callAcceptOptions, isMissedCall)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="callAcceptOptions" Type="Microsoft.Rtc.Collaboration.CallAcceptOptions" RefType="this" />
          <Parameter Name="isMissedCall" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="callAcceptOptions">To be added.</param>
          <param name="isMissedCall">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetIsMissedCall(Microsoft.Rtc.Collaboration.CallAcceptOptions,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallTerminateOptions" />
      </Targets>
      <Member MemberName="SetIsMissedCall">
        <MemberSignature Language="C#" Value="public static void SetIsMissedCall (this Microsoft.Rtc.Collaboration.CallTerminateOptions callTerminateOptions, bool isMissedCall);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsMissedCall(class Microsoft.Rtc.Collaboration.CallTerminateOptions callTerminateOptions, bool isMissedCall) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetIsMissedCall(Microsoft.Rtc.Collaboration.CallTerminateOptions,System.Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetIsMissedCall(Microsoft::Rtc::Collaboration::CallTerminateOptions ^ callTerminateOptions, bool isMissedCall);" />
        <MemberSignature Language="F#" Value="static member SetIsMissedCall : Microsoft.Rtc.Collaboration.CallTerminateOptions * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetIsMissedCall (callTerminateOptions, isMissedCall)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="callTerminateOptions" Type="Microsoft.Rtc.Collaboration.CallTerminateOptions" RefType="this" />
          <Parameter Name="isMissedCall" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="callTerminateOptions">To be added.</param>
          <param name="isMissedCall">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetIsMissedCall(Microsoft.Rtc.Collaboration.CallTerminateOptions,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions" />
      </Targets>
      <Member MemberName="SetMissedStatus">
        <MemberSignature Language="C#" Value="public static void SetMissedStatus (this Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions invitationAcceptOptions, bool isMissedConferenceInvitation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMissedStatus(class Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions invitationAcceptOptions, bool isMissedConferenceInvitation) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetMissedStatus(Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetMissedStatus (invitationAcceptOptions As ConferenceInvitationAcceptOptions, isMissedConferenceInvitation As Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetMissedStatus(Microsoft::Rtc::Collaboration::ConferenceInvitationAcceptOptions ^ invitationAcceptOptions, bool isMissedConferenceInvitation);" />
        <MemberSignature Language="F#" Value="static member SetMissedStatus : Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetMissedStatus (invitationAcceptOptions, isMissedConferenceInvitation)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="invitationAcceptOptions" Type="Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions" RefType="this" />
          <Parameter Name="isMissedConferenceInvitation" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="invitationAcceptOptions">To be added.</param>
          <param name="isMissedConferenceInvitation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallOptionsExtensions.SetMissedStatus(Microsoft.Rtc.Collaboration.ConferenceInvitationAcceptOptions,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CallParticipantEndpointProperties" />
      </Targets>
      <Member MemberName="IsMediaBypassRequired">
        <MemberSignature Language="C#" Value="public static bool IsMediaBypassRequired (this Microsoft.Rtc.Collaboration.CallParticipantEndpointProperties callParticipantEndpointProperties);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMediaBypassRequired(class Microsoft.Rtc.Collaboration.CallParticipantEndpointProperties callParticipantEndpointProperties) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CallParticipantEndpointPropertiesExtensions.IsMediaBypassRequired(Microsoft.Rtc.Collaboration.CallParticipantEndpointProperties)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsMediaBypassRequired(Microsoft::Rtc::Collaboration::CallParticipantEndpointProperties ^ callParticipantEndpointProperties);" />
        <MemberSignature Language="F#" Value="static member IsMediaBypassRequired : Microsoft.Rtc.Collaboration.CallParticipantEndpointProperties -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.CallParticipantEndpointPropertiesExtensions.IsMediaBypassRequired callParticipantEndpointProperties" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="callParticipantEndpointProperties" Type="Microsoft.Rtc.Collaboration.CallParticipantEndpointProperties" RefType="this" />
        </Parameters>
        <Docs>
          <param name="callParticipantEndpointProperties">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CallParticipantEndpointPropertiesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CallParticipantEndpointPropertiesExtensions.IsMediaBypassRequired(Microsoft.Rtc.Collaboration.CallParticipantEndpointProperties)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ClientPlatformSettings" />
      </Targets>
      <Member MemberName="SetTraceFilterConfiguration">
        <MemberSignature Language="C#" Value="public static void SetTraceFilterConfiguration (this Microsoft.Rtc.Collaboration.ClientPlatformSettings settings, Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration traceFilterConguration);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTraceFilterConfiguration(class Microsoft.Rtc.Collaboration.ClientPlatformSettings settings, class Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration traceFilterConguration) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ClientPlatformSettingsExtensions.SetTraceFilterConfiguration(Microsoft.Rtc.Collaboration.ClientPlatformSettings,Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetTraceFilterConfiguration (settings As ClientPlatformSettings, traceFilterConguration As ITraceFilterConfiguration)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetTraceFilterConfiguration(Microsoft::Rtc::Collaboration::ClientPlatformSettings ^ settings, Microsoft::Rtc::Internal::Signaling::ITraceFilterConfiguration ^ traceFilterConguration);" />
        <MemberSignature Language="F#" Value="static member SetTraceFilterConfiguration : Microsoft.Rtc.Collaboration.ClientPlatformSettings * Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ClientPlatformSettingsExtensions.SetTraceFilterConfiguration (settings, traceFilterConguration)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="settings" Type="Microsoft.Rtc.Collaboration.ClientPlatformSettings" RefType="this" />
          <Parameter Name="traceFilterConguration" Type="Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration" />
        </Parameters>
        <Docs>
          <param name="settings">To be added.</param>
          <param name="traceFilterConguration">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ClientPlatformSettingsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ClientPlatformSettingsExtensions.SetTraceFilterConfiguration(Microsoft.Rtc.Collaboration.ClientPlatformSettings,Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CollaborationPlatform" />
      </Targets>
      <Member MemberName="BeginChangeCertificateTls">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginChangeCertificateTls (this Microsoft.Rtc.Collaboration.CollaborationPlatform platform, string certificateIssuerName, byte[] certificateSerialNumber, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginChangeCertificateTls(class Microsoft.Rtc.Collaboration.CollaborationPlatform platform, string certificateIssuerName, unsigned int8[] certificateSerialNumber, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.BeginChangeCertificateTls(Microsoft.Rtc.Collaboration.CollaborationPlatform,System.String,System.Byte[],System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginChangeCertificateTls (platform As CollaborationPlatform, certificateIssuerName As String, certificateSerialNumber As Byte(), userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginChangeCertificateTls(Microsoft::Rtc::Collaboration::CollaborationPlatform ^ platform, System::String ^ certificateIssuerName, cli::array &lt;System::Byte&gt; ^ certificateSerialNumber, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginChangeCertificateTls : Microsoft.Rtc.Collaboration.CollaborationPlatform * string * byte[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.BeginChangeCertificateTls (platform, certificateIssuerName, certificateSerialNumber, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="Microsoft.Rtc.Collaboration.CollaborationPlatform" RefType="this" />
          <Parameter Name="certificateIssuerName" Type="System.String" />
          <Parameter Name="certificateSerialNumber" Type="System.Byte[]" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <param name="certificateIssuerName">To be added.</param>
          <param name="certificateSerialNumber">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.BeginChangeCertificateTls(Microsoft.Rtc.Collaboration.CollaborationPlatform,System.String,System.Byte[],System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CollaborationPlatform" />
      </Targets>
      <Member MemberName="BeginDrain">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginDrain (this Microsoft.Rtc.Collaboration.CollaborationPlatform collaborationPlatform, Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformDrainOptions drainOptions, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDrain(class Microsoft.Rtc.Collaboration.CollaborationPlatform collaborationPlatform, class Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformDrainOptions drainOptions, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.BeginDrain(Microsoft.Rtc.Collaboration.CollaborationPlatform,Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformDrainOptions,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginDrain(Microsoft::Rtc::Collaboration::CollaborationPlatform ^ collaborationPlatform, Microsoft::Rtc::Internal::Collaboration::CollaborationPlatformDrainOptions ^ drainOptions, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginDrain : Microsoft.Rtc.Collaboration.CollaborationPlatform * Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformDrainOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.BeginDrain (collaborationPlatform, drainOptions, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="collaborationPlatform" Type="Microsoft.Rtc.Collaboration.CollaborationPlatform" RefType="this" />
          <Parameter Name="drainOptions" Type="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformDrainOptions" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="collaborationPlatform">To be added.</param>
          <param name="drainOptions">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.BeginDrain(Microsoft.Rtc.Collaboration.CollaborationPlatform,Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformDrainOptions,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CollaborationPlatform" />
      </Targets>
      <Member MemberName="BeginShutdown">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginShutdown (this Microsoft.Rtc.Collaboration.CollaborationPlatform platform, bool terminateEndpoints, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginShutdown(class Microsoft.Rtc.Collaboration.CollaborationPlatform platform, bool terminateEndpoints, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.BeginShutdown(Microsoft.Rtc.Collaboration.CollaborationPlatform,System.Boolean,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginShutdown (platform As CollaborationPlatform, terminateEndpoints As Boolean, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginShutdown(Microsoft::Rtc::Collaboration::CollaborationPlatform ^ platform, bool terminateEndpoints, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginShutdown : Microsoft.Rtc.Collaboration.CollaborationPlatform * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.BeginShutdown (platform, terminateEndpoints, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="Microsoft.Rtc.Collaboration.CollaborationPlatform" RefType="this" />
          <Parameter Name="terminateEndpoints" Type="System.Boolean" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <param name="terminateEndpoints">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.BeginShutdown(Microsoft.Rtc.Collaboration.CollaborationPlatform,System.Boolean,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CollaborationPlatform" />
      </Targets>
      <Member MemberName="ConfigureAsTestPlatform">
        <MemberSignature Language="C#" Value="public static void ConfigureAsTestPlatform (this Microsoft.Rtc.Collaboration.CollaborationPlatform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfigureAsTestPlatform(class Microsoft.Rtc.Collaboration.CollaborationPlatform platform) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.ConfigureAsTestPlatform(Microsoft.Rtc.Collaboration.CollaborationPlatform)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConfigureAsTestPlatform (platform As CollaborationPlatform)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ConfigureAsTestPlatform(Microsoft::Rtc::Collaboration::CollaborationPlatform ^ platform);" />
        <MemberSignature Language="F#" Value="static member ConfigureAsTestPlatform : Microsoft.Rtc.Collaboration.CollaborationPlatform -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.ConfigureAsTestPlatform platform" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="Microsoft.Rtc.Collaboration.CollaborationPlatform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.ConfigureAsTestPlatform(Microsoft.Rtc.Collaboration.CollaborationPlatform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CollaborationPlatform" />
      </Targets>
      <Member MemberName="ConfigurePlatformForTestMessageForwarding">
        <MemberSignature Language="C#" Value="public static void ConfigurePlatformForTestMessageForwarding (this Microsoft.Rtc.Collaboration.CollaborationPlatform platform, Microsoft.Rtc.Internal.Collaboration.MessageForwardingTestSettings settings);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfigurePlatformForTestMessageForwarding(class Microsoft.Rtc.Collaboration.CollaborationPlatform platform, class Microsoft.Rtc.Internal.Collaboration.MessageForwardingTestSettings settings) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.ConfigurePlatformForTestMessageForwarding(Microsoft.Rtc.Collaboration.CollaborationPlatform,Microsoft.Rtc.Internal.Collaboration.MessageForwardingTestSettings)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConfigurePlatformForTestMessageForwarding (platform As CollaborationPlatform, settings As MessageForwardingTestSettings)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ConfigurePlatformForTestMessageForwarding(Microsoft::Rtc::Collaboration::CollaborationPlatform ^ platform, Microsoft::Rtc::Internal::Collaboration::MessageForwardingTestSettings ^ settings);" />
        <MemberSignature Language="F#" Value="static member ConfigurePlatformForTestMessageForwarding : Microsoft.Rtc.Collaboration.CollaborationPlatform * Microsoft.Rtc.Internal.Collaboration.MessageForwardingTestSettings -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.ConfigurePlatformForTestMessageForwarding (platform, settings)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="Microsoft.Rtc.Collaboration.CollaborationPlatform" RefType="this" />
          <Parameter Name="settings" Type="Microsoft.Rtc.Internal.Collaboration.MessageForwardingTestSettings" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <param name="settings">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.ConfigurePlatformForTestMessageForwarding(Microsoft.Rtc.Collaboration.CollaborationPlatform,Microsoft.Rtc.Internal.Collaboration.MessageForwardingTestSettings)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CollaborationPlatform" />
      </Targets>
      <Member MemberName="EnableClientDraining">
        <MemberSignature Language="C#" Value="public static void EnableClientDraining (this Microsoft.Rtc.Collaboration.CollaborationPlatform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableClientDraining(class Microsoft.Rtc.Collaboration.CollaborationPlatform platform) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.EnableClientDraining(Microsoft.Rtc.Collaboration.CollaborationPlatform)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub EnableClientDraining (platform As CollaborationPlatform)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EnableClientDraining(Microsoft::Rtc::Collaboration::CollaborationPlatform ^ platform);" />
        <MemberSignature Language="F#" Value="static member EnableClientDraining : Microsoft.Rtc.Collaboration.CollaborationPlatform -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.EnableClientDraining platform" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="Microsoft.Rtc.Collaboration.CollaborationPlatform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.EnableClientDraining(Microsoft.Rtc.Collaboration.CollaborationPlatform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CollaborationPlatform" />
      </Targets>
      <Member MemberName="EndChangeCertificateTls">
        <MemberSignature Language="C#" Value="public static void EndChangeCertificateTls (this Microsoft.Rtc.Collaboration.CollaborationPlatform platform, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndChangeCertificateTls(class Microsoft.Rtc.Collaboration.CollaborationPlatform platform, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.EndChangeCertificateTls(Microsoft.Rtc.Collaboration.CollaborationPlatform,System.IAsyncResult)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub EndChangeCertificateTls (platform As CollaborationPlatform, result As IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EndChangeCertificateTls(Microsoft::Rtc::Collaboration::CollaborationPlatform ^ platform, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndChangeCertificateTls : Microsoft.Rtc.Collaboration.CollaborationPlatform * IAsyncResult -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.EndChangeCertificateTls (platform, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="Microsoft.Rtc.Collaboration.CollaborationPlatform" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.EndChangeCertificateTls(Microsoft.Rtc.Collaboration.CollaborationPlatform,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CollaborationPlatform" />
      </Targets>
      <Member MemberName="EndDrain">
        <MemberSignature Language="C#" Value="public static void EndDrain (this Microsoft.Rtc.Collaboration.CollaborationPlatform collaborationPlatform, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndDrain(class Microsoft.Rtc.Collaboration.CollaborationPlatform collaborationPlatform, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.EndDrain(Microsoft.Rtc.Collaboration.CollaborationPlatform,System.IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EndDrain(Microsoft::Rtc::Collaboration::CollaborationPlatform ^ collaborationPlatform, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndDrain : Microsoft.Rtc.Collaboration.CollaborationPlatform * IAsyncResult -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.EndDrain (collaborationPlatform, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="collaborationPlatform" Type="Microsoft.Rtc.Collaboration.CollaborationPlatform" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="collaborationPlatform">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.EndDrain(Microsoft.Rtc.Collaboration.CollaborationPlatform,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.CollaborationPlatform" />
      </Targets>
      <Member MemberName="RegisterMessageForwarder">
        <MemberSignature Language="C#" Value="public static void RegisterMessageForwarder (this Microsoft.Rtc.Collaboration.CollaborationPlatform platform, Microsoft.Rtc.Internal.Collaboration.MessageForwarder messageForwarder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterMessageForwarder(class Microsoft.Rtc.Collaboration.CollaborationPlatform platform, class Microsoft.Rtc.Internal.Collaboration.MessageForwarder messageForwarder) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.RegisterMessageForwarder(Microsoft.Rtc.Collaboration.CollaborationPlatform,Microsoft.Rtc.Internal.Collaboration.MessageForwarder)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void RegisterMessageForwarder(Microsoft::Rtc::Collaboration::CollaborationPlatform ^ platform, Microsoft::Rtc::Internal::Collaboration::MessageForwarder ^ messageForwarder);" />
        <MemberSignature Language="F#" Value="static member RegisterMessageForwarder : Microsoft.Rtc.Collaboration.CollaborationPlatform * Microsoft.Rtc.Internal.Collaboration.MessageForwarder -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.RegisterMessageForwarder (platform, messageForwarder)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="Microsoft.Rtc.Collaboration.CollaborationPlatform" RefType="this" />
          <Parameter Name="messageForwarder" Type="Microsoft.Rtc.Internal.Collaboration.MessageForwarder" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <param name="messageForwarder">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.CollaborationPlatformExtensions.RegisterMessageForwarder(Microsoft.Rtc.Collaboration.CollaborationPlatform,Microsoft.Rtc.Internal.Collaboration.MessageForwarder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs" />
      </Targets>
      <Member MemberName="GetHistoryInfoContext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.HistoryInfoContext GetHistoryInfoContext (this Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs eventArgs);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Collaboration.HistoryInfoContext GetHistoryInfoContext(class Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs eventArgs) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ComponentModel.InviteReceivedEventArgsExtensions.GetHistoryInfoContext(Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHistoryInfoContext (eventArgs As InviteReceivedEventArgs) As HistoryInfoContext" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::HistoryInfoContext ^ GetHistoryInfoContext(Microsoft::Rtc::Collaboration::ComponentModel::InviteReceivedEventArgs ^ eventArgs);" />
        <MemberSignature Language="F#" Value="static member GetHistoryInfoContext : Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs -&gt; Microsoft.Rtc.Internal.Collaboration.HistoryInfoContext" Usage="Microsoft.Rtc.Internal.Collaboration.ComponentModel.InviteReceivedEventArgsExtensions.GetHistoryInfoContext eventArgs" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.HistoryInfoContext</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="eventArgs" Type="Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="eventArgs">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ComponentModel.InviteReceivedEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ComponentModel.InviteReceivedEventArgsExtensions.GetHistoryInfoContext(Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs" />
      </Targets>
      <Member MemberName="GetRefferedByDisplayName">
        <MemberSignature Language="C#" Value="public static string GetRefferedByDisplayName (this Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs eventArgs);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRefferedByDisplayName(class Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs eventArgs) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ComponentModel.InviteReceivedEventArgsExtensions.GetRefferedByDisplayName(Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRefferedByDisplayName (eventArgs As InviteReceivedEventArgs) As String" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetRefferedByDisplayName(Microsoft::Rtc::Collaboration::ComponentModel::InviteReceivedEventArgs ^ eventArgs);" />
        <MemberSignature Language="F#" Value="static member GetRefferedByDisplayName : Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs -&gt; string" Usage="Microsoft.Rtc.Internal.Collaboration.ComponentModel.InviteReceivedEventArgsExtensions.GetRefferedByDisplayName eventArgs" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="eventArgs" Type="Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="eventArgs">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ComponentModel.InviteReceivedEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ComponentModel.InviteReceivedEventArgsExtensions.GetRefferedByDisplayName(Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs" />
      </Targets>
      <Member MemberName="IsPrivateLineCall">
        <MemberSignature Language="C#" Value="public static bool IsPrivateLineCall (this Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs eventArgs);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPrivateLineCall(class Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs eventArgs) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ComponentModel.InviteReceivedEventArgsExtensions.IsPrivateLineCall(Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsPrivateLineCall (eventArgs As InviteReceivedEventArgs) As Boolean" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsPrivateLineCall(Microsoft::Rtc::Collaboration::ComponentModel::InviteReceivedEventArgs ^ eventArgs);" />
        <MemberSignature Language="F#" Value="static member IsPrivateLineCall : Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.ComponentModel.InviteReceivedEventArgsExtensions.IsPrivateLineCall eventArgs" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="eventArgs" Type="Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="eventArgs">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ComponentModel.InviteReceivedEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ComponentModel.InviteReceivedEventArgsExtensions.IsPrivateLineCall(Microsoft.Rtc.Collaboration.ComponentModel.InviteReceivedEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Conference" />
      </Targets>
      <Member MemberName="GetConferenceUri">
        <MemberSignature Language="C#" Value="public static string GetConferenceUri (this Microsoft.Rtc.Collaboration.Conference conference, string purpose);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetConferenceUri(class Microsoft.Rtc.Collaboration.Conference conference, string purpose) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions.GetConferenceUri(Microsoft.Rtc.Collaboration.Conference,System.String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetConferenceUri(Microsoft::Rtc::Collaboration::Conference ^ conference, System::String ^ purpose);" />
        <MemberSignature Language="F#" Value="static member GetConferenceUri : Microsoft.Rtc.Collaboration.Conference * string -&gt; string" Usage="Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions.GetConferenceUri (conference, purpose)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conference" Type="Microsoft.Rtc.Collaboration.Conference" RefType="this" />
          <Parameter Name="purpose" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="conference">To be added.</param>
          <param name="purpose">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions.GetConferenceUri(Microsoft.Rtc.Collaboration.Conference,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Conference" />
      </Targets>
      <Member MemberName="GetConferenceUris">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;string,string&gt; GetConferenceUris (this Microsoft.Rtc.Collaboration.Conference conference);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;string, string&gt; GetConferenceUris(class Microsoft.Rtc.Collaboration.Conference conference) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions.GetConferenceUris(Microsoft.Rtc.Collaboration.Conference)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^ GetConferenceUris(Microsoft::Rtc::Collaboration::Conference ^ conference);" />
        <MemberSignature Language="F#" Value="static member GetConferenceUris : Microsoft.Rtc.Collaboration.Conference -&gt; System.Collections.Generic.Dictionary&lt;string, string&gt;" Usage="Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions.GetConferenceUris conference" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conference" Type="Microsoft.Rtc.Collaboration.Conference" RefType="this" />
        </Parameters>
        <Docs>
          <param name="conference">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions.GetConferenceUris(Microsoft.Rtc.Collaboration.Conference)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Conference" />
      </Targets>
      <Member MemberName="GetServiceUris">
        <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Internal.Collaboration.ServiceUri&gt; GetServiceUris (this Microsoft.Rtc.Collaboration.Conference conference);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Rtc.Internal.Collaboration.ServiceUri&gt; GetServiceUris(class Microsoft.Rtc.Collaboration.Conference conference) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions.GetServiceUris(Microsoft.Rtc.Collaboration.Conference)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::ObjectModel::Collection&lt;Microsoft::Rtc::Internal::Collaboration::ServiceUri ^&gt; ^ GetServiceUris(Microsoft::Rtc::Collaboration::Conference ^ conference);" />
        <MemberSignature Language="F#" Value="static member GetServiceUris : Microsoft.Rtc.Collaboration.Conference -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Internal.Collaboration.ServiceUri&gt;" Usage="Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions.GetServiceUris conference" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Internal.Collaboration.ServiceUri&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conference" Type="Microsoft.Rtc.Collaboration.Conference" RefType="this" />
        </Parameters>
        <Docs>
          <param name="conference">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions.GetServiceUris(Microsoft.Rtc.Collaboration.Conference)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Conference" />
      </Targets>
      <Member MemberName="GetVersion">
        <MemberSignature Language="C#" Value="public static long GetVersion (this Microsoft.Rtc.Collaboration.Conference conference);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetVersion(class Microsoft.Rtc.Collaboration.Conference conference) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions.GetVersion(Microsoft.Rtc.Collaboration.Conference)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long GetVersion(Microsoft::Rtc::Collaboration::Conference ^ conference);" />
        <MemberSignature Language="F#" Value="static member GetVersion : Microsoft.Rtc.Collaboration.Conference -&gt; int64" Usage="Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions.GetVersion conference" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conference" Type="Microsoft.Rtc.Collaboration.Conference" RefType="this" />
        </Parameters>
        <Docs>
          <param name="conference">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConferenceExtensions.GetVersion(Microsoft.Rtc.Collaboration.Conference)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceInvitationDialOutOptions" />
      </Targets>
      <Member MemberName="SetPartcipantEndpointId">
        <MemberSignature Language="C#" Value="public static void SetPartcipantEndpointId (this Microsoft.Rtc.Collaboration.ConferenceInvitationDialOutOptions dialOutOptions, string participantEndpointId);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPartcipantEndpointId(class Microsoft.Rtc.Collaboration.ConferenceInvitationDialOutOptions dialOutOptions, string participantEndpointId) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationDialOutOptionsExtensions.SetPartcipantEndpointId(Microsoft.Rtc.Collaboration.ConferenceInvitationDialOutOptions,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetPartcipantEndpointId (dialOutOptions As ConferenceInvitationDialOutOptions, participantEndpointId As String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetPartcipantEndpointId(Microsoft::Rtc::Collaboration::ConferenceInvitationDialOutOptions ^ dialOutOptions, System::String ^ participantEndpointId);" />
        <MemberSignature Language="F#" Value="static member SetPartcipantEndpointId : Microsoft.Rtc.Collaboration.ConferenceInvitationDialOutOptions * string -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationDialOutOptionsExtensions.SetPartcipantEndpointId (dialOutOptions, participantEndpointId)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="dialOutOptions" Type="Microsoft.Rtc.Collaboration.ConferenceInvitationDialOutOptions" RefType="this" />
          <Parameter Name="participantEndpointId" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="dialOutOptions">To be added.</param>
          <param name="participantEndpointId">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationDialOutOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationDialOutOptionsExtensions.SetPartcipantEndpointId(Microsoft.Rtc.Collaboration.ConferenceInvitationDialOutOptions,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceInvitation" />
      </Targets>
      <Member MemberName="GetIfInviteFromVerifiedSource">
        <MemberSignature Language="C#" Value="public static bool GetIfInviteFromVerifiedSource (this Microsoft.Rtc.Collaboration.ConferenceInvitation invitation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIfInviteFromVerifiedSource(class Microsoft.Rtc.Collaboration.ConferenceInvitation invitation) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationExtensions.GetIfInviteFromVerifiedSource(Microsoft.Rtc.Collaboration.ConferenceInvitation)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIfInviteFromVerifiedSource (invitation As ConferenceInvitation) As Boolean" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool GetIfInviteFromVerifiedSource(Microsoft::Rtc::Collaboration::ConferenceInvitation ^ invitation);" />
        <MemberSignature Language="F#" Value="static member GetIfInviteFromVerifiedSource : Microsoft.Rtc.Collaboration.ConferenceInvitation -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationExtensions.GetIfInviteFromVerifiedSource invitation" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="invitation" Type="Microsoft.Rtc.Collaboration.ConferenceInvitation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="invitation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationExtensions.GetIfInviteFromVerifiedSource(Microsoft.Rtc.Collaboration.ConferenceInvitation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceInvitationStateChangedEventArgs" />
      </Targets>
      <Member MemberName="GetTransitionSubreason">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationStateTransitionReasonSubreason GetTransitionSubreason (this Microsoft.Rtc.Collaboration.ConferenceInvitationStateChangedEventArgs e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationStateTransitionReasonSubreason GetTransitionSubreason(class Microsoft.Rtc.Collaboration.ConferenceInvitationStateChangedEventArgs e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationExtensions.GetTransitionSubreason(Microsoft.Rtc.Collaboration.ConferenceInvitationStateChangedEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTransitionSubreason (e As ConferenceInvitationStateChangedEventArgs) As ConferenceInvitationStateTransitionReasonSubreason" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::ConferenceInvitationStateTransitionReasonSubreason GetTransitionSubreason(Microsoft::Rtc::Collaboration::ConferenceInvitationStateChangedEventArgs ^ e);" />
        <MemberSignature Language="F#" Value="static member GetTransitionSubreason : Microsoft.Rtc.Collaboration.ConferenceInvitationStateChangedEventArgs -&gt; Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationStateTransitionReasonSubreason" Usage="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationExtensions.GetTransitionSubreason e" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationStateTransitionReasonSubreason</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="Microsoft.Rtc.Collaboration.ConferenceInvitationStateChangedEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationExtensions.GetTransitionSubreason(Microsoft.Rtc.Collaboration.ConferenceInvitationStateChangedEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceInvitation" />
      </Targets>
      <Member MemberName="Redeliver">
        <MemberSignature Language="C#" Value="public static void Redeliver (this Microsoft.Rtc.Collaboration.ConferenceInvitation invitation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Redeliver(class Microsoft.Rtc.Collaboration.ConferenceInvitation invitation) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationExtensions.Redeliver(Microsoft.Rtc.Collaboration.ConferenceInvitation)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Redeliver (invitation As ConferenceInvitation)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Redeliver(Microsoft::Rtc::Collaboration::ConferenceInvitation ^ invitation);" />
        <MemberSignature Language="F#" Value="static member Redeliver : Microsoft.Rtc.Collaboration.ConferenceInvitation -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationExtensions.Redeliver invitation" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="invitation" Type="Microsoft.Rtc.Collaboration.ConferenceInvitation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="invitation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationExtensions.Redeliver(Microsoft.Rtc.Collaboration.ConferenceInvitation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs" />
      </Targets>
      <Member MemberName="DisableRingBack">
        <MemberSignature Language="C#" Value="public static void DisableRingBack (this Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs eventArgs);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableRingBack(class Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs eventArgs) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationReceivedEventArgsExtensions.DisableRingBack(Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DisableRingBack (eventArgs As ConferenceInvitationReceivedEventArgs)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void DisableRingBack(Microsoft::Rtc::Collaboration::ConferenceInvitationReceivedEventArgs ^ eventArgs);" />
        <MemberSignature Language="F#" Value="static member DisableRingBack : Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationReceivedEventArgsExtensions.DisableRingBack eventArgs" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="eventArgs" Type="Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="eventArgs">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationReceivedEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationReceivedEventArgsExtensions.DisableRingBack(Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs" />
      </Targets>
      <Member MemberName="IsRingBackDisabled">
        <MemberSignature Language="C#" Value="public static bool IsRingBackDisabled (this Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs eventArgs);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRingBackDisabled(class Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs eventArgs) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationReceivedEventArgsExtensions.IsRingBackDisabled(Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsRingBackDisabled (eventArgs As ConferenceInvitationReceivedEventArgs) As Boolean" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsRingBackDisabled(Microsoft::Rtc::Collaboration::ConferenceInvitationReceivedEventArgs ^ eventArgs);" />
        <MemberSignature Language="F#" Value="static member IsRingBackDisabled : Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationReceivedEventArgsExtensions.IsRingBackDisabled eventArgs" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="eventArgs" Type="Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="eventArgs">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationReceivedEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationReceivedEventArgsExtensions.IsRingBackDisabled(Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs" />
      </Targets>
      <Member MemberName="SendRingingResponse">
        <MemberSignature Language="C#" Value="public static void SendRingingResponse (this Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs eventArgs);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendRingingResponse(class Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs eventArgs) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationReceivedEventArgsExtensions.SendRingingResponse(Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SendRingingResponse (eventArgs As ConferenceInvitationReceivedEventArgs)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SendRingingResponse(Microsoft::Rtc::Collaboration::ConferenceInvitationReceivedEventArgs ^ eventArgs);" />
        <MemberSignature Language="F#" Value="static member SendRingingResponse : Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationReceivedEventArgsExtensions.SendRingingResponse eventArgs" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="eventArgs" Type="Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="eventArgs">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationReceivedEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConferenceInvitationReceivedEventArgsExtensions.SendRingingResponse(Microsoft.Rtc.Collaboration.ConferenceInvitationReceivedEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceServices" />
      </Targets>
      <Member MemberName="BeginGetConference">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetConference (this Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceServices services, string conferenceId, Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.GetConferenceOptions options, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetConference(class Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceServices services, string conferenceId, class Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.GetConferenceOptions options, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.ConferenceServicesExtensions.BeginGetConference(Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceServices,System.String,Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.GetConferenceOptions,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginGetConference (services As ConferenceServices, conferenceId As String, options As GetConferenceOptions, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginGetConference(Microsoft::Rtc::Collaboration::ConferenceManagement::ConferenceServices ^ services, System::String ^ conferenceId, Microsoft::Rtc::Internal::Collaboration::ConferenceManagement::GetConferenceOptions ^ options, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginGetConference : Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceServices * string * Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.GetConferenceOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.ConferenceServicesExtensions.BeginGetConference (services, conferenceId, options, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="services" Type="Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceServices" RefType="this" />
          <Parameter Name="conferenceId" Type="System.String" />
          <Parameter Name="options" Type="Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.GetConferenceOptions" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="services">To be added.</param>
          <param name="conferenceId">To be added.</param>
          <param name="options">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.ConferenceServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.ConferenceServicesExtensions.BeginGetConference(Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceServices,System.String,Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.GetConferenceOptions,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceScheduleInformation" />
      </Targets>
      <Member MemberName="EnableW13CompatibilityMode">
        <MemberSignature Language="C#" Value="public static void EnableW13CompatibilityMode (this Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceScheduleInformation information);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableW13CompatibilityMode(class Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceScheduleInformation information) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.InternalConferenceScheduleInformationExtensions.EnableW13CompatibilityMode(Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceScheduleInformation)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub EnableW13CompatibilityMode (information As ConferenceScheduleInformation)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EnableW13CompatibilityMode(Microsoft::Rtc::Collaboration::ConferenceManagement::ConferenceScheduleInformation ^ information);" />
        <MemberSignature Language="F#" Value="static member EnableW13CompatibilityMode : Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceScheduleInformation -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.InternalConferenceScheduleInformationExtensions.EnableW13CompatibilityMode information" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="information" Type="Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceScheduleInformation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="information">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.InternalConferenceScheduleInformationExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConferenceManagement.InternalConferenceScheduleInformationExtensions.EnableW13CompatibilityMode(Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceScheduleInformation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.McuSession" />
      </Targets>
      <Member MemberName="BeginSendCommand">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginSendCommand (this Microsoft.Rtc.Collaboration.McuSession mcuSession, Microsoft.Rtc.Internal.Collaboration.Conferencing.Commands.ConferenceCommand command, Microsoft.Rtc.Collaboration.ConferenceCommandOptions options, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginSendCommand(class Microsoft.Rtc.Collaboration.McuSession mcuSession, class Microsoft.Rtc.Internal.Collaboration.Conferencing.Commands.ConferenceCommand command, class Microsoft.Rtc.Collaboration.ConferenceCommandOptions options, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.BeginSendCommand(Microsoft.Rtc.Collaboration.McuSession,Microsoft.Rtc.Internal.Collaboration.Conferencing.Commands.ConferenceCommand,Microsoft.Rtc.Collaboration.ConferenceCommandOptions,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginSendCommand(Microsoft::Rtc::Collaboration::McuSession ^ mcuSession, Microsoft::Rtc::Internal::Collaboration::Conferencing::Commands::ConferenceCommand ^ command, Microsoft::Rtc::Collaboration::ConferenceCommandOptions ^ options, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginSendCommand : Microsoft.Rtc.Collaboration.McuSession * Microsoft.Rtc.Internal.Collaboration.Conferencing.Commands.ConferenceCommand * Microsoft.Rtc.Collaboration.ConferenceCommandOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.BeginSendCommand (mcuSession, command, options, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="mcuSession" Type="Microsoft.Rtc.Collaboration.McuSession" RefType="this" />
          <Parameter Name="command" Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.Commands.ConferenceCommand" />
          <Parameter Name="options" Type="Microsoft.Rtc.Collaboration.ConferenceCommandOptions" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="mcuSession">To be added.</param>
          <param name="command">To be added.</param>
          <param name="options">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.BeginSendCommand(Microsoft.Rtc.Collaboration.McuSession,Microsoft.Rtc.Internal.Collaboration.Conferencing.Commands.ConferenceCommand,Microsoft.Rtc.Collaboration.ConferenceCommandOptions,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceSession" />
      </Targets>
      <Member MemberName="BeginSetEndpointRecording">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginSetEndpointRecording (this Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession, bool isRecording, Microsoft.Rtc.Collaboration.ParticipantEndpoint endpoint, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginSetEndpointRecording(class Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession, bool isRecording, class Microsoft.Rtc.Collaboration.ParticipantEndpoint endpoint, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.BeginSetEndpointRecording(Microsoft.Rtc.Collaboration.ConferenceSession,System.Boolean,Microsoft.Rtc.Collaboration.ParticipantEndpoint,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginSetEndpointRecording(Microsoft::Rtc::Collaboration::ConferenceSession ^ conferenceSession, bool isRecording, Microsoft::Rtc::Collaboration::ParticipantEndpoint ^ endpoint, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginSetEndpointRecording : Microsoft.Rtc.Collaboration.ConferenceSession * bool * Microsoft.Rtc.Collaboration.ParticipantEndpoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.BeginSetEndpointRecording (conferenceSession, isRecording, endpoint, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conferenceSession" Type="Microsoft.Rtc.Collaboration.ConferenceSession" RefType="this" />
          <Parameter Name="isRecording" Type="System.Boolean" />
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.ParticipantEndpoint" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="conferenceSession">To be added.</param>
          <param name="isRecording">To be added.</param>
          <param name="endpoint">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.BeginSetEndpointRecording(Microsoft.Rtc.Collaboration.ConferenceSession,System.Boolean,Microsoft.Rtc.Collaboration.ParticipantEndpoint,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.McuSession" />
      </Targets>
      <Member MemberName="EndSendCommand">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Collaboration.ConferenceCommandResponse EndSendCommand (this Microsoft.Rtc.Collaboration.McuSession mcuSession, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Collaboration.ConferenceCommandResponse EndSendCommand(class Microsoft.Rtc.Collaboration.McuSession mcuSession, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.EndSendCommand(Microsoft.Rtc.Collaboration.McuSession,System.IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Collaboration::ConferenceCommandResponse ^ EndSendCommand(Microsoft::Rtc::Collaboration::McuSession ^ mcuSession, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndSendCommand : Microsoft.Rtc.Collaboration.McuSession * IAsyncResult -&gt; Microsoft.Rtc.Collaboration.ConferenceCommandResponse" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.EndSendCommand (mcuSession, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Collaboration.ConferenceCommandResponse</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="mcuSession" Type="Microsoft.Rtc.Collaboration.McuSession" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="mcuSession">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.EndSendCommand(Microsoft.Rtc.Collaboration.McuSession,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceSession" />
      </Targets>
      <Member MemberName="EndSetEndpointRecording">
        <MemberSignature Language="C#" Value="public static void EndSetEndpointRecording (this Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndSetEndpointRecording(class Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.EndSetEndpointRecording(Microsoft.Rtc.Collaboration.ConferenceSession,System.IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EndSetEndpointRecording(Microsoft::Rtc::Collaboration::ConferenceSession ^ conferenceSession, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndSetEndpointRecording : Microsoft.Rtc.Collaboration.ConferenceSession * IAsyncResult -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.EndSetEndpointRecording (conferenceSession, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conferenceSession" Type="Microsoft.Rtc.Collaboration.ConferenceSession" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="conferenceSession">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.EndSetEndpointRecording(Microsoft.Rtc.Collaboration.ConferenceSession,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceSession" />
      </Targets>
      <Member MemberName="GetCccpAdmissionPolicy">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Collaboration.ConferenceAccessLevel GetCccpAdmissionPolicy (this Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Rtc.Collaboration.ConferenceAccessLevel GetCccpAdmissionPolicy(class Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetCccpAdmissionPolicy(Microsoft.Rtc.Collaboration.ConferenceSession)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Collaboration::ConferenceAccessLevel GetCccpAdmissionPolicy(Microsoft::Rtc::Collaboration::ConferenceSession ^ conferenceSession);" />
        <MemberSignature Language="F#" Value="static member GetCccpAdmissionPolicy : Microsoft.Rtc.Collaboration.ConferenceSession -&gt; Microsoft.Rtc.Collaboration.ConferenceAccessLevel" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetCccpAdmissionPolicy conferenceSession" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Collaboration.ConferenceAccessLevel</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conferenceSession" Type="Microsoft.Rtc.Collaboration.ConferenceSession" RefType="this" />
        </Parameters>
        <Docs>
          <param name="conferenceSession">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetCccpAdmissionPolicy(Microsoft.Rtc.Collaboration.ConferenceSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceSession" />
      </Targets>
      <Member MemberName="GetConferenceAttendanceType">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.Conferencing.ConferenceAttendanceType GetConferenceAttendanceType (this Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Rtc.Internal.Collaboration.Conferencing.ConferenceAttendanceType GetConferenceAttendanceType(class Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetConferenceAttendanceType(Microsoft.Rtc.Collaboration.ConferenceSession)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::Conferencing::ConferenceAttendanceType GetConferenceAttendanceType(Microsoft::Rtc::Collaboration::ConferenceSession ^ conferenceSession);" />
        <MemberSignature Language="F#" Value="static member GetConferenceAttendanceType : Microsoft.Rtc.Collaboration.ConferenceSession -&gt; Microsoft.Rtc.Internal.Collaboration.Conferencing.ConferenceAttendanceType" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetConferenceAttendanceType conferenceSession" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.Conferencing.ConferenceAttendanceType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conferenceSession" Type="Microsoft.Rtc.Collaboration.ConferenceSession" RefType="this" />
        </Parameters>
        <Docs>
          <param name="conferenceSession">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetConferenceAttendanceType(Microsoft.Rtc.Collaboration.ConferenceSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceSession" />
      </Targets>
      <Member MemberName="GetDialogContext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Signaling.DialogContext GetDialogContext (this Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Signaling.DialogContext GetDialogContext(class Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetDialogContext(Microsoft.Rtc.Collaboration.ConferenceSession)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Signaling::DialogContext ^ GetDialogContext(Microsoft::Rtc::Collaboration::ConferenceSession ^ conferenceSession);" />
        <MemberSignature Language="F#" Value="static member GetDialogContext : Microsoft.Rtc.Collaboration.ConferenceSession -&gt; Microsoft.Rtc.Signaling.DialogContext" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetDialogContext conferenceSession" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Signaling.DialogContext</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conferenceSession" Type="Microsoft.Rtc.Collaboration.ConferenceSession" RefType="this" />
        </Parameters>
        <Docs>
          <param name="conferenceSession">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetDialogContext(Microsoft.Rtc.Collaboration.ConferenceSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceSession" />
      </Targets>
      <Member MemberName="GetIsAnonymousDialOutAllowed">
        <MemberSignature Language="C#" Value="public static bool GetIsAnonymousDialOutAllowed (this Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsAnonymousDialOutAllowed(class Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetIsAnonymousDialOutAllowed(Microsoft.Rtc.Collaboration.ConferenceSession)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool GetIsAnonymousDialOutAllowed(Microsoft::Rtc::Collaboration::ConferenceSession ^ conferenceSession);" />
        <MemberSignature Language="F#" Value="static member GetIsAnonymousDialOutAllowed : Microsoft.Rtc.Collaboration.ConferenceSession -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetIsAnonymousDialOutAllowed conferenceSession" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conferenceSession" Type="Microsoft.Rtc.Collaboration.ConferenceSession" RefType="this" />
        </Parameters>
        <Docs>
          <param name="conferenceSession">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetIsAnonymousDialOutAllowed(Microsoft.Rtc.Collaboration.ConferenceSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceSession" />
      </Targets>
      <Member MemberName="GetJoinUrl">
        <MemberSignature Language="C#" Value="public static string GetJoinUrl (this Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetJoinUrl(class Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetJoinUrl(Microsoft.Rtc.Collaboration.ConferenceSession)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetJoinUrl(Microsoft::Rtc::Collaboration::ConferenceSession ^ conferenceSession);" />
        <MemberSignature Language="F#" Value="static member GetJoinUrl : Microsoft.Rtc.Collaboration.ConferenceSession -&gt; string" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetJoinUrl conferenceSession" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conferenceSession" Type="Microsoft.Rtc.Collaboration.ConferenceSession" RefType="this" />
        </Parameters>
        <Docs>
          <param name="conferenceSession">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetJoinUrl(Microsoft.Rtc.Collaboration.ConferenceSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceSession" />
      </Targets>
      <Member MemberName="GetLocalCaaUri">
        <MemberSignature Language="C#" Value="public static string GetLocalCaaUri (this Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLocalCaaUri(class Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetLocalCaaUri(Microsoft.Rtc.Collaboration.ConferenceSession)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetLocalCaaUri(Microsoft::Rtc::Collaboration::ConferenceSession ^ conferenceSession);" />
        <MemberSignature Language="F#" Value="static member GetLocalCaaUri : Microsoft.Rtc.Collaboration.ConferenceSession -&gt; string" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetLocalCaaUri conferenceSession" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conferenceSession" Type="Microsoft.Rtc.Collaboration.ConferenceSession" RefType="this" />
        </Parameters>
        <Docs>
          <param name="conferenceSession">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetLocalCaaUri(Microsoft.Rtc.Collaboration.ConferenceSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceSession" />
      </Targets>
      <Member MemberName="GetServerMode">
        <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; GetServerMode (this Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; GetServerMode(class Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetServerMode(Microsoft.Rtc.Collaboration.ConferenceSession)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; GetServerMode(Microsoft::Rtc::Collaboration::ConferenceSession ^ conferenceSession);" />
        <MemberSignature Language="F#" Value="static member GetServerMode : Microsoft.Rtc.Collaboration.ConferenceSession -&gt; Nullable&lt;int64&gt;" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetServerMode conferenceSession" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conferenceSession" Type="Microsoft.Rtc.Collaboration.ConferenceSession" RefType="this" />
        </Parameters>
        <Docs>
          <param name="conferenceSession">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetServerMode(Microsoft.Rtc.Collaboration.ConferenceSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceSession" />
      </Targets>
      <Member MemberName="GetTelemetryId">
        <MemberSignature Language="C#" Value="public static string GetTelemetryId (this Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTelemetryId(class Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetTelemetryId(Microsoft.Rtc.Collaboration.ConferenceSession)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetTelemetryId(Microsoft::Rtc::Collaboration::ConferenceSession ^ conferenceSession);" />
        <MemberSignature Language="F#" Value="static member GetTelemetryId : Microsoft.Rtc.Collaboration.ConferenceSession -&gt; string" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetTelemetryId conferenceSession" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conferenceSession" Type="Microsoft.Rtc.Collaboration.ConferenceSession" RefType="this" />
        </Parameters>
        <Docs>
          <param name="conferenceSession">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.GetTelemetryId(Microsoft.Rtc.Collaboration.ConferenceSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceSession" />
      </Targets>
      <Member MemberName="SetAcpMcuSessionSupport">
        <MemberSignature Language="C#" Value="public static void SetAcpMcuSessionSupport (this Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession, bool isSupported);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAcpMcuSessionSupport(class Microsoft.Rtc.Collaboration.ConferenceSession conferenceSession, bool isSupported) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.SetAcpMcuSessionSupport(Microsoft.Rtc.Collaboration.ConferenceSession,System.Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetAcpMcuSessionSupport(Microsoft::Rtc::Collaboration::ConferenceSession ^ conferenceSession, bool isSupported);" />
        <MemberSignature Language="F#" Value="static member SetAcpMcuSessionSupport : Microsoft.Rtc.Collaboration.ConferenceSession * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.SetAcpMcuSessionSupport (conferenceSession, isSupported)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conferenceSession" Type="Microsoft.Rtc.Collaboration.ConferenceSession" RefType="this" />
          <Parameter Name="isSupported" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="conferenceSession">To be added.</param>
          <param name="isSupported">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.SetAcpMcuSessionSupport(Microsoft.Rtc.Collaboration.ConferenceSession,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConferenceJoinOptions" />
      </Targets>
      <Member MemberName="SetEndpointRecording">
        <MemberSignature Language="C#" Value="public static void SetEndpointRecording (this Microsoft.Rtc.Collaboration.ConferenceJoinOptions options, bool isRecording);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEndpointRecording(class Microsoft.Rtc.Collaboration.ConferenceJoinOptions options, bool isRecording) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.SetEndpointRecording(Microsoft.Rtc.Collaboration.ConferenceJoinOptions,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetEndpointRecording (options As ConferenceJoinOptions, isRecording As Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetEndpointRecording(Microsoft::Rtc::Collaboration::ConferenceJoinOptions ^ options, bool isRecording);" />
        <MemberSignature Language="F#" Value="static member SetEndpointRecording : Microsoft.Rtc.Collaboration.ConferenceJoinOptions * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.SetEndpointRecording (options, isRecording)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="options" Type="Microsoft.Rtc.Collaboration.ConferenceJoinOptions" RefType="this" />
          <Parameter Name="isRecording" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="options">To be added.</param>
          <param name="isRecording">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Conferencing.InternalConferencingExtensions.SetEndpointRecording(Microsoft.Rtc.Collaboration.ConferenceJoinOptions,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.ContactCard" />
      </Targets>
      <Member MemberName="IsAllowedToShowPhotoPropertySpecified">
        <MemberSignature Language="C#" Value="public static bool IsAllowedToShowPhotoPropertySpecified (this Microsoft.Rtc.Collaboration.Presence.ContactCard card);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAllowedToShowPhotoPropertySpecified(class Microsoft.Rtc.Collaboration.Presence.ContactCard card) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactCardExtensions.IsAllowedToShowPhotoPropertySpecified(Microsoft.Rtc.Collaboration.Presence.ContactCard)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsAllowedToShowPhotoPropertySpecified (card As ContactCard) As Boolean" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsAllowedToShowPhotoPropertySpecified(Microsoft::Rtc::Collaboration::Presence::ContactCard ^ card);" />
        <MemberSignature Language="F#" Value="static member IsAllowedToShowPhotoPropertySpecified : Microsoft.Rtc.Collaboration.Presence.ContactCard -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.ContactCardExtensions.IsAllowedToShowPhotoPropertySpecified card" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="card" Type="Microsoft.Rtc.Collaboration.Presence.ContactCard" RefType="this" />
        </Parameters>
        <Docs>
          <param name="card">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactCardExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactCardExtensions.IsAllowedToShowPhotoPropertySpecified(Microsoft.Rtc.Collaboration.Presence.ContactCard)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ContactsGroups.ContactAddOptions" />
      </Targets>
      <Member MemberName="SetIsSubscribed">
        <MemberSignature Language="C#" Value="public static void SetIsSubscribed (this Microsoft.Rtc.Collaboration.ContactsGroups.ContactAddOptions addOptions, bool isSubscribed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsSubscribed(class Microsoft.Rtc.Collaboration.ContactsGroups.ContactAddOptions addOptions, bool isSubscribed) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactAddOptionsExtensions.SetIsSubscribed(Microsoft.Rtc.Collaboration.ContactsGroups.ContactAddOptions,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsSubscribed (addOptions As ContactAddOptions, isSubscribed As Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetIsSubscribed(Microsoft::Rtc::Collaboration::ContactsGroups::ContactAddOptions ^ addOptions, bool isSubscribed);" />
        <MemberSignature Language="F#" Value="static member SetIsSubscribed : Microsoft.Rtc.Collaboration.ContactsGroups.ContactAddOptions * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactAddOptionsExtensions.SetIsSubscribed (addOptions, isSubscribed)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="addOptions" Type="Microsoft.Rtc.Collaboration.ContactsGroups.ContactAddOptions" RefType="this" />
          <Parameter Name="isSubscribed" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="addOptions">To be added.</param>
          <param name="isSubscribed">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactAddOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactAddOptionsExtensions.SetIsSubscribed(Microsoft.Rtc.Collaboration.ContactsGroups.ContactAddOptions,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ContactsGroups.Contact" />
      </Targets>
      <Member MemberName="GetIsSubscribed">
        <MemberSignature Language="C#" Value="public static bool GetIsSubscribed (this Microsoft.Rtc.Collaboration.ContactsGroups.Contact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsSubscribed(class Microsoft.Rtc.Collaboration.ContactsGroups.Contact contact) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactExtensions.GetIsSubscribed(Microsoft.Rtc.Collaboration.ContactsGroups.Contact)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool GetIsSubscribed(Microsoft::Rtc::Collaboration::ContactsGroups::Contact ^ contact);" />
        <MemberSignature Language="F#" Value="static member GetIsSubscribed : Microsoft.Rtc.Collaboration.ContactsGroups.Contact -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactExtensions.GetIsSubscribed contact" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="contact" Type="Microsoft.Rtc.Collaboration.ContactsGroups.Contact" RefType="this" />
        </Parameters>
        <Docs>
          <param name="contact">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactExtensions.GetIsSubscribed(Microsoft.Rtc.Collaboration.ContactsGroups.Contact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ContactsGroups.Contact" />
      </Targets>
      <Member MemberName="SetIsSubscribed">
        <MemberSignature Language="C#" Value="public static void SetIsSubscribed (this Microsoft.Rtc.Collaboration.ContactsGroups.Contact contact, bool isSubscribed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsSubscribed(class Microsoft.Rtc.Collaboration.ContactsGroups.Contact contact, bool isSubscribed) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactExtensions.SetIsSubscribed(Microsoft.Rtc.Collaboration.ContactsGroups.Contact,System.Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetIsSubscribed(Microsoft::Rtc::Collaboration::ContactsGroups::Contact ^ contact, bool isSubscribed);" />
        <MemberSignature Language="F#" Value="static member SetIsSubscribed : Microsoft.Rtc.Collaboration.ContactsGroups.Contact * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactExtensions.SetIsSubscribed (contact, isSubscribed)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="contact" Type="Microsoft.Rtc.Collaboration.ContactsGroups.Contact" RefType="this" />
          <Parameter Name="isSubscribed" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="contact">To be added.</param>
          <param name="isSubscribed">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactExtensions.SetIsSubscribed(Microsoft.Rtc.Collaboration.ContactsGroups.Contact,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" />
      </Targets>
      <Member MemberName="AddContactStoreMigrationHandler">
        <MemberSignature Language="C#" Value="public static void AddContactStoreMigrationHandler (this Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatusChangedEventArgs&gt; handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddContactStoreMigrationHandler(class Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, class System.EventHandler`1&lt;class Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatusChangedEventArgs&gt; handler) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.AddContactStoreMigrationHandler(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.EventHandler{Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatusChangedEventArgs})" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddContactStoreMigrationHandler(Microsoft::Rtc::Collaboration::ContactsGroups::ContactGroupServices ^ contactGroupServices, EventHandler&lt;Microsoft::Rtc::Internal::Collaboration::ContactsGroups::ContactStoreMigrationStatusChangedEventArgs ^&gt; ^ handler);" />
        <MemberSignature Language="F#" Value="static member AddContactStoreMigrationHandler : Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices * EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatusChangedEventArgs&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.AddContactStoreMigrationHandler (contactGroupServices, handler)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="contactGroupServices" Type="Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" RefType="this" />
          <Parameter Name="handler" Type="System.EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatusChangedEventArgs&gt;" />
        </Parameters>
        <Docs>
          <param name="contactGroupServices">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.AddContactStoreMigrationHandler(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.EventHandler{Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatusChangedEventArgs})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" />
      </Targets>
      <Member MemberName="BeginGetAllContacts">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetAllContacts (this Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetAllContacts(class Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.BeginGetAllContacts(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginGetAllContacts(Microsoft::Rtc::Collaboration::ContactsGroups::ContactGroupServices ^ contactGroupServices, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginGetAllContacts : Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.BeginGetAllContacts (contactGroupServices, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="contactGroupServices" Type="Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" RefType="this" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="contactGroupServices">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.BeginGetAllContacts(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" />
      </Targets>
      <Member MemberName="BeginGetAllContactsOfAGroup">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetAllContactsOfAGroup (this Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, int groupId, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetAllContactsOfAGroup(class Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, int32 groupId, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.BeginGetAllContactsOfAGroup(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.Int32,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginGetAllContactsOfAGroup(Microsoft::Rtc::Collaboration::ContactsGroups::ContactGroupServices ^ contactGroupServices, int groupId, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginGetAllContactsOfAGroup : Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.BeginGetAllContactsOfAGroup (contactGroupServices, groupId, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="contactGroupServices" Type="Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" RefType="this" />
          <Parameter Name="groupId" Type="System.Int32" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="contactGroupServices">To be added.</param>
          <param name="groupId">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.BeginGetAllContactsOfAGroup(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.Int32,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" />
      </Targets>
      <Member MemberName="BeginGetAllGroups">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetAllGroups (this Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetAllGroups(class Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.BeginGetAllGroups(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginGetAllGroups(Microsoft::Rtc::Collaboration::ContactsGroups::ContactGroupServices ^ contactGroupServices, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginGetAllGroups : Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.BeginGetAllGroups (contactGroupServices, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="contactGroupServices" Type="Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" RefType="this" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="contactGroupServices">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.BeginGetAllGroups(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" />
      </Targets>
      <Member MemberName="EndGetAllContacts">
        <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Collaboration.ContactsGroups.Contact&gt; EndGetAllContacts (this Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Rtc.Collaboration.ContactsGroups.Contact&gt; EndGetAllContacts(class Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.EndGetAllContacts(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::ObjectModel::Collection&lt;Microsoft::Rtc::Collaboration::ContactsGroups::Contact ^&gt; ^ EndGetAllContacts(Microsoft::Rtc::Collaboration::ContactsGroups::ContactGroupServices ^ contactGroupServices, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndGetAllContacts : Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices * IAsyncResult -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Collaboration.ContactsGroups.Contact&gt;" Usage="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.EndGetAllContacts (contactGroupServices, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Collaboration.ContactsGroups.Contact&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="contactGroupServices" Type="Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="contactGroupServices">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.EndGetAllContacts(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" />
      </Targets>
      <Member MemberName="EndGetAllContactsOfAGroup">
        <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Collaboration.ContactsGroups.Contact&gt; EndGetAllContactsOfAGroup (this Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Rtc.Collaboration.ContactsGroups.Contact&gt; EndGetAllContactsOfAGroup(class Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.EndGetAllContactsOfAGroup(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::ObjectModel::Collection&lt;Microsoft::Rtc::Collaboration::ContactsGroups::Contact ^&gt; ^ EndGetAllContactsOfAGroup(Microsoft::Rtc::Collaboration::ContactsGroups::ContactGroupServices ^ contactGroupServices, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndGetAllContactsOfAGroup : Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices * IAsyncResult -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Collaboration.ContactsGroups.Contact&gt;" Usage="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.EndGetAllContactsOfAGroup (contactGroupServices, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Collaboration.ContactsGroups.Contact&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="contactGroupServices" Type="Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="contactGroupServices">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.EndGetAllContactsOfAGroup(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" />
      </Targets>
      <Member MemberName="EndGetAllGroups">
        <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Collaboration.ContactsGroups.Group&gt; EndGetAllGroups (this Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Rtc.Collaboration.ContactsGroups.Group&gt; EndGetAllGroups(class Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.EndGetAllGroups(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::ObjectModel::Collection&lt;Microsoft::Rtc::Collaboration::ContactsGroups::Group ^&gt; ^ EndGetAllGroups(Microsoft::Rtc::Collaboration::ContactsGroups::ContactGroupServices ^ contactGroupServices, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndGetAllGroups : Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices * IAsyncResult -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Collaboration.ContactsGroups.Group&gt;" Usage="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.EndGetAllGroups (contactGroupServices, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Collaboration.ContactsGroups.Group&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="contactGroupServices" Type="Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="contactGroupServices">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.EndGetAllGroups(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" />
      </Targets>
      <Member MemberName="GetContactStoreMigrationStatus">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatus GetContactStoreMigrationStatus (this Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatus GetContactStoreMigrationStatus(class Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.GetContactStoreMigrationStatus(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::ContactsGroups::ContactStoreMigrationStatus GetContactStoreMigrationStatus(Microsoft::Rtc::Collaboration::ContactsGroups::ContactGroupServices ^ contactGroupServices);" />
        <MemberSignature Language="F#" Value="static member GetContactStoreMigrationStatus : Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices -&gt; Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatus" Usage="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.GetContactStoreMigrationStatus contactGroupServices" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatus</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="contactGroupServices" Type="Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" RefType="this" />
        </Parameters>
        <Docs>
          <param name="contactGroupServices">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.GetContactStoreMigrationStatus(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" />
      </Targets>
      <Member MemberName="RemoveContactStoreMigrationHandler">
        <MemberSignature Language="C#" Value="public static void RemoveContactStoreMigrationHandler (this Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatusChangedEventArgs&gt; handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveContactStoreMigrationHandler(class Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, class System.EventHandler`1&lt;class Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatusChangedEventArgs&gt; handler) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.RemoveContactStoreMigrationHandler(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.EventHandler{Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatusChangedEventArgs})" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void RemoveContactStoreMigrationHandler(Microsoft::Rtc::Collaboration::ContactsGroups::ContactGroupServices ^ contactGroupServices, EventHandler&lt;Microsoft::Rtc::Internal::Collaboration::ContactsGroups::ContactStoreMigrationStatusChangedEventArgs ^&gt; ^ handler);" />
        <MemberSignature Language="F#" Value="static member RemoveContactStoreMigrationHandler : Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices * EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatusChangedEventArgs&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.RemoveContactStoreMigrationHandler (contactGroupServices, handler)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="contactGroupServices" Type="Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" RefType="this" />
          <Parameter Name="handler" Type="System.EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatusChangedEventArgs&gt;" />
        </Parameters>
        <Docs>
          <param name="contactGroupServices">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.RemoveContactStoreMigrationHandler(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.EventHandler{Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactStoreMigrationStatusChangedEventArgs})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" />
      </Targets>
      <Member MemberName="SetRetryOnInitialSubscriptionDisabled">
        <MemberSignature Language="C#" Value="public static void SetRetryOnInitialSubscriptionDisabled (this Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, bool value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRetryOnInitialSubscriptionDisabled(class Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices contactGroupServices, bool value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.SetRetryOnInitialSubscriptionDisabled(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetRetryOnInitialSubscriptionDisabled(Microsoft::Rtc::Collaboration::ContactsGroups::ContactGroupServices ^ contactGroupServices, bool value);" />
        <MemberSignature Language="F#" Value="static member SetRetryOnInitialSubscriptionDisabled : Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.SetRetryOnInitialSubscriptionDisabled (contactGroupServices, value)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="contactGroupServices" Type="Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices" RefType="this" />
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="contactGroupServices">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ContactsGroups.ContactGroupServicesExtensions.SetRetryOnInitialSubscriptionDisabled(Microsoft.Rtc.Collaboration.ContactsGroups.ContactGroupServices,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Conversation" />
      </Targets>
      <Member MemberName="BeginRestore">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginRestore (this Microsoft.Rtc.Collaboration.Conversation conversation, Microsoft.Rtc.Internal.Collaboration.ConversationRestoreOptions options, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginRestore(class Microsoft.Rtc.Collaboration.Conversation conversation, class Microsoft.Rtc.Internal.Collaboration.ConversationRestoreOptions options, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.BeginRestore(Microsoft.Rtc.Collaboration.Conversation,Microsoft.Rtc.Internal.Collaboration.ConversationRestoreOptions,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginRestore(Microsoft::Rtc::Collaboration::Conversation ^ conversation, Microsoft::Rtc::Internal::Collaboration::ConversationRestoreOptions ^ options, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginRestore : Microsoft.Rtc.Collaboration.Conversation * Microsoft.Rtc.Internal.Collaboration.ConversationRestoreOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.BeginRestore (conversation, options, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conversation" Type="Microsoft.Rtc.Collaboration.Conversation" RefType="this" />
          <Parameter Name="options" Type="Microsoft.Rtc.Internal.Collaboration.ConversationRestoreOptions" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="conversation">To be added.</param>
          <param name="options">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConversationExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.BeginRestore(Microsoft.Rtc.Collaboration.Conversation,Microsoft.Rtc.Internal.Collaboration.ConversationRestoreOptions,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Conversation" />
      </Targets>
      <Member MemberName="BindReplicationHandler">
        <MemberSignature Language="C#" Value="public static void BindReplicationHandler (this Microsoft.Rtc.Collaboration.Conversation conversation, Microsoft.Rtc.Internal.Collaboration.ConversationReplicationHandler handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BindReplicationHandler(class Microsoft.Rtc.Collaboration.Conversation conversation, class Microsoft.Rtc.Internal.Collaboration.ConversationReplicationHandler handler) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.BindReplicationHandler(Microsoft.Rtc.Collaboration.Conversation,Microsoft.Rtc.Internal.Collaboration.ConversationReplicationHandler)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void BindReplicationHandler(Microsoft::Rtc::Collaboration::Conversation ^ conversation, Microsoft::Rtc::Internal::Collaboration::ConversationReplicationHandler ^ handler);" />
        <MemberSignature Language="F#" Value="static member BindReplicationHandler : Microsoft.Rtc.Collaboration.Conversation * Microsoft.Rtc.Internal.Collaboration.ConversationReplicationHandler -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.BindReplicationHandler (conversation, handler)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conversation" Type="Microsoft.Rtc.Collaboration.Conversation" RefType="this" />
          <Parameter Name="handler" Type="Microsoft.Rtc.Internal.Collaboration.ConversationReplicationHandler" />
        </Parameters>
        <Docs>
          <param name="conversation">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConversationExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.BindReplicationHandler(Microsoft.Rtc.Collaboration.Conversation,Microsoft.Rtc.Internal.Collaboration.ConversationReplicationHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Conversation" />
      </Targets>
      <Member MemberName="EnablePeerToPeerRecording">
        <MemberSignature Language="C#" Value="public static void EnablePeerToPeerRecording (this Microsoft.Rtc.Collaboration.Conversation conversation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnablePeerToPeerRecording(class Microsoft.Rtc.Collaboration.Conversation conversation) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.EnablePeerToPeerRecording(Microsoft.Rtc.Collaboration.Conversation)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EnablePeerToPeerRecording(Microsoft::Rtc::Collaboration::Conversation ^ conversation);" />
        <MemberSignature Language="F#" Value="static member EnablePeerToPeerRecording : Microsoft.Rtc.Collaboration.Conversation -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.EnablePeerToPeerRecording conversation" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conversation" Type="Microsoft.Rtc.Collaboration.Conversation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="conversation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConversationExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.EnablePeerToPeerRecording(Microsoft.Rtc.Collaboration.Conversation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Conversation" />
      </Targets>
      <Member MemberName="EndRestore">
        <MemberSignature Language="C#" Value="public static void EndRestore (this Microsoft.Rtc.Collaboration.Conversation conversation, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndRestore(class Microsoft.Rtc.Collaboration.Conversation conversation, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.EndRestore(Microsoft.Rtc.Collaboration.Conversation,System.IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EndRestore(Microsoft::Rtc::Collaboration::Conversation ^ conversation, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndRestore : Microsoft.Rtc.Collaboration.Conversation * IAsyncResult -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.EndRestore (conversation, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conversation" Type="Microsoft.Rtc.Collaboration.Conversation" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="conversation">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConversationExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.EndRestore(Microsoft.Rtc.Collaboration.Conversation,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Conversation" />
      </Targets>
      <Member MemberName="GetDerivedConversationId">
        <MemberSignature Language="C#" Value="public static string GetDerivedConversationId (this Microsoft.Rtc.Collaboration.Conversation conversation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDerivedConversationId(class Microsoft.Rtc.Collaboration.Conversation conversation) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.GetDerivedConversationId(Microsoft.Rtc.Collaboration.Conversation)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetDerivedConversationId(Microsoft::Rtc::Collaboration::Conversation ^ conversation);" />
        <MemberSignature Language="F#" Value="static member GetDerivedConversationId : Microsoft.Rtc.Collaboration.Conversation -&gt; string" Usage="Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.GetDerivedConversationId conversation" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="conversation" Type="Microsoft.Rtc.Collaboration.Conversation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="conversation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConversationExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConversationExtensions.GetDerivedConversationId(Microsoft.Rtc.Collaboration.Conversation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConversationParticipant" />
      </Targets>
      <Member MemberName="GetApplicationContext">
        <MemberSignature Language="C#" Value="public static object GetApplicationContext (this Microsoft.Rtc.Collaboration.ConversationParticipant participant);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetApplicationContext(class Microsoft.Rtc.Collaboration.ConversationParticipant participant) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.GetApplicationContext(Microsoft.Rtc.Collaboration.ConversationParticipant)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApplicationContext (participant As ConversationParticipant) As Object" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ GetApplicationContext(Microsoft::Rtc::Collaboration::ConversationParticipant ^ participant);" />
        <MemberSignature Language="F#" Value="static member GetApplicationContext : Microsoft.Rtc.Collaboration.ConversationParticipant -&gt; obj" Usage="Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.GetApplicationContext participant" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Object</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="participant" Type="Microsoft.Rtc.Collaboration.ConversationParticipant" RefType="this" />
        </Parameters>
        <Docs>
          <param name="participant">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.GetApplicationContext(Microsoft.Rtc.Collaboration.ConversationParticipant)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConversationParticipant" />
      </Targets>
      <Member MemberName="GetUri">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Signaling.RealTimeAddress GetUri (this Microsoft.Rtc.Collaboration.ConversationParticipant participant);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Signaling.RealTimeAddress GetUri(class Microsoft.Rtc.Collaboration.ConversationParticipant participant) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.GetUri(Microsoft.Rtc.Collaboration.ConversationParticipant)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUri (participant As ConversationParticipant) As RealTimeAddress" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Signaling::RealTimeAddress ^ GetUri(Microsoft::Rtc::Collaboration::ConversationParticipant ^ participant);" />
        <MemberSignature Language="F#" Value="static member GetUri : Microsoft.Rtc.Collaboration.ConversationParticipant -&gt; Microsoft.Rtc.Signaling.RealTimeAddress" Usage="Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.GetUri participant" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Signaling.RealTimeAddress</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="participant" Type="Microsoft.Rtc.Collaboration.ConversationParticipant" RefType="this" />
        </Parameters>
        <Docs>
          <param name="participant">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.GetUri(Microsoft.Rtc.Collaboration.ConversationParticipant)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConversationParticipant" />
      </Targets>
      <Member MemberName="IsLobbyParticipant">
        <MemberSignature Language="C#" Value="public static bool IsLobbyParticipant (this Microsoft.Rtc.Collaboration.ConversationParticipant participant);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLobbyParticipant(class Microsoft.Rtc.Collaboration.ConversationParticipant participant) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.IsLobbyParticipant(Microsoft.Rtc.Collaboration.ConversationParticipant)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsLobbyParticipant (participant As ConversationParticipant) As Boolean" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsLobbyParticipant(Microsoft::Rtc::Collaboration::ConversationParticipant ^ participant);" />
        <MemberSignature Language="F#" Value="static member IsLobbyParticipant : Microsoft.Rtc.Collaboration.ConversationParticipant -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.IsLobbyParticipant participant" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="participant" Type="Microsoft.Rtc.Collaboration.ConversationParticipant" RefType="this" />
        </Parameters>
        <Docs>
          <param name="participant">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.IsLobbyParticipant(Microsoft.Rtc.Collaboration.ConversationParticipant)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConversationParticipant" />
      </Targets>
      <Member MemberName="IsPhoneParticipant">
        <MemberSignature Language="C#" Value="public static bool IsPhoneParticipant (this Microsoft.Rtc.Collaboration.ConversationParticipant participant);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPhoneParticipant(class Microsoft.Rtc.Collaboration.ConversationParticipant participant) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.IsPhoneParticipant(Microsoft.Rtc.Collaboration.ConversationParticipant)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsPhoneParticipant (participant As ConversationParticipant) As Boolean" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsPhoneParticipant(Microsoft::Rtc::Collaboration::ConversationParticipant ^ participant);" />
        <MemberSignature Language="F#" Value="static member IsPhoneParticipant : Microsoft.Rtc.Collaboration.ConversationParticipant -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.IsPhoneParticipant participant" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="participant" Type="Microsoft.Rtc.Collaboration.ConversationParticipant" RefType="this" />
        </Parameters>
        <Docs>
          <param name="participant">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.IsPhoneParticipant(Microsoft.Rtc.Collaboration.ConversationParticipant)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConversationParticipant" />
      </Targets>
      <Member MemberName="SetApplicationContext">
        <MemberSignature Language="C#" Value="public static void SetApplicationContext (this Microsoft.Rtc.Collaboration.ConversationParticipant participant, object applicationContext);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetApplicationContext(class Microsoft.Rtc.Collaboration.ConversationParticipant participant, object applicationContext) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.SetApplicationContext(Microsoft.Rtc.Collaboration.ConversationParticipant,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetApplicationContext (participant As ConversationParticipant, applicationContext As Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetApplicationContext(Microsoft::Rtc::Collaboration::ConversationParticipant ^ participant, System::Object ^ applicationContext);" />
        <MemberSignature Language="F#" Value="static member SetApplicationContext : Microsoft.Rtc.Collaboration.ConversationParticipant * obj -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.SetApplicationContext (participant, applicationContext)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="participant" Type="Microsoft.Rtc.Collaboration.ConversationParticipant" RefType="this" />
          <Parameter Name="applicationContext" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="participant">To be added.</param>
          <param name="applicationContext">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.SetApplicationContext(Microsoft.Rtc.Collaboration.ConversationParticipant,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConversationParticipant" />
      </Targets>
      <Member MemberName="SetDisplayName">
        <MemberSignature Language="C#" Value="public static void SetDisplayName (this Microsoft.Rtc.Collaboration.ConversationParticipant participant, string displayName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDisplayName(class Microsoft.Rtc.Collaboration.ConversationParticipant participant, string displayName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.SetDisplayName(Microsoft.Rtc.Collaboration.ConversationParticipant,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDisplayName (participant As ConversationParticipant, displayName As String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetDisplayName(Microsoft::Rtc::Collaboration::ConversationParticipant ^ participant, System::String ^ displayName);" />
        <MemberSignature Language="F#" Value="static member SetDisplayName : Microsoft.Rtc.Collaboration.ConversationParticipant * string -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.SetDisplayName (participant, displayName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="participant" Type="Microsoft.Rtc.Collaboration.ConversationParticipant" RefType="this" />
          <Parameter Name="displayName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="participant">To be added.</param>
          <param name="displayName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConversationParticipantExtensions.SetDisplayName(Microsoft.Rtc.Collaboration.ConversationParticipant,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ConversationTerminateOptions" />
      </Targets>
      <Member MemberName="SetIsMissedConversation">
        <MemberSignature Language="C#" Value="public static void SetIsMissedConversation (this Microsoft.Rtc.Collaboration.ConversationTerminateOptions options, bool isMissedConversation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsMissedConversation(class Microsoft.Rtc.Collaboration.ConversationTerminateOptions options, bool isMissedConversation) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ConversationTerminateOptionsExtensions.SetIsMissedConversation(Microsoft.Rtc.Collaboration.ConversationTerminateOptions,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsMissedConversation (options As ConversationTerminateOptions, isMissedConversation As Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetIsMissedConversation(Microsoft::Rtc::Collaboration::ConversationTerminateOptions ^ options, bool isMissedConversation);" />
        <MemberSignature Language="F#" Value="static member SetIsMissedConversation : Microsoft.Rtc.Collaboration.ConversationTerminateOptions * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ConversationTerminateOptionsExtensions.SetIsMissedConversation (options, isMissedConversation)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="options" Type="Microsoft.Rtc.Collaboration.ConversationTerminateOptions" RefType="this" />
          <Parameter Name="isMissedConversation" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="options">To be added.</param>
          <param name="isMissedConversation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ConversationTerminateOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ConversationTerminateOptionsExtensions.SetIsMissedConversation(Microsoft.Rtc.Collaboration.ConversationTerminateOptions,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.DiversionContext" />
      </Targets>
      <Member MemberName="GetFirstDivertedDestination">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Collaboration.DivertedDestination GetFirstDivertedDestination (this Microsoft.Rtc.Collaboration.DiversionContext diversionContext);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Collaboration.DivertedDestination GetFirstDivertedDestination(class Microsoft.Rtc.Collaboration.DiversionContext diversionContext) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.DiversionContextExtensions.GetFirstDivertedDestination(Microsoft.Rtc.Collaboration.DiversionContext)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Collaboration::DivertedDestination ^ GetFirstDivertedDestination(Microsoft::Rtc::Collaboration::DiversionContext ^ diversionContext);" />
        <MemberSignature Language="F#" Value="static member GetFirstDivertedDestination : Microsoft.Rtc.Collaboration.DiversionContext -&gt; Microsoft.Rtc.Collaboration.DivertedDestination" Usage="Microsoft.Rtc.Internal.Collaboration.DiversionContextExtensions.GetFirstDivertedDestination diversionContext" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Collaboration.DivertedDestination</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="diversionContext" Type="Microsoft.Rtc.Collaboration.DiversionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="diversionContext">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.DiversionContextExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.DiversionContextExtensions.GetFirstDivertedDestination(Microsoft.Rtc.Collaboration.DiversionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.DiversionContext" />
      </Targets>
      <Member MemberName="GetLastDivertedDestination">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Collaboration.DivertedDestination GetLastDivertedDestination (this Microsoft.Rtc.Collaboration.DiversionContext diversionContext);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Collaboration.DivertedDestination GetLastDivertedDestination(class Microsoft.Rtc.Collaboration.DiversionContext diversionContext) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.DiversionContextExtensions.GetLastDivertedDestination(Microsoft.Rtc.Collaboration.DiversionContext)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Collaboration::DivertedDestination ^ GetLastDivertedDestination(Microsoft::Rtc::Collaboration::DiversionContext ^ diversionContext);" />
        <MemberSignature Language="F#" Value="static member GetLastDivertedDestination : Microsoft.Rtc.Collaboration.DiversionContext -&gt; Microsoft.Rtc.Collaboration.DivertedDestination" Usage="Microsoft.Rtc.Internal.Collaboration.DiversionContextExtensions.GetLastDivertedDestination diversionContext" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Collaboration.DivertedDestination</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="diversionContext" Type="Microsoft.Rtc.Collaboration.DiversionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="diversionContext">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.DiversionContextExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.DiversionContextExtensions.GetLastDivertedDestination(Microsoft.Rtc.Collaboration.DiversionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.DivertedDestination" />
      </Targets>
      <Member MemberName="GetRetargetReason">
        <MemberSignature Language="C#" Value="public static string GetRetargetReason (this Microsoft.Rtc.Collaboration.DivertedDestination divertedDestination);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRetargetReason(class Microsoft.Rtc.Collaboration.DivertedDestination divertedDestination) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.DivertedDestinationExtensions.GetRetargetReason(Microsoft.Rtc.Collaboration.DivertedDestination)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetRetargetReason(Microsoft::Rtc::Collaboration::DivertedDestination ^ divertedDestination);" />
        <MemberSignature Language="F#" Value="static member GetRetargetReason : Microsoft.Rtc.Collaboration.DivertedDestination -&gt; string" Usage="Microsoft.Rtc.Internal.Collaboration.DivertedDestinationExtensions.GetRetargetReason divertedDestination" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="divertedDestination" Type="Microsoft.Rtc.Collaboration.DivertedDestination" RefType="this" />
        </Parameters>
        <Docs>
          <param name="divertedDestination">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.DivertedDestinationExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.DivertedDestinationExtensions.GetRetargetReason(Microsoft.Rtc.Collaboration.DivertedDestination)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.InstantMessagingFlow" />
      </Targets>
      <Member MemberName="BeginSendFailureDeliveryNotification">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginSendFailureDeliveryNotification (this Microsoft.Rtc.Collaboration.InstantMessagingFlow imFlow, Microsoft.Rtc.Collaboration.InstantMessageId messageId, int responseCode, Microsoft.Rtc.Internal.Collaboration.SendFailureDeliveryNotificationOptions options, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginSendFailureDeliveryNotification(class Microsoft.Rtc.Collaboration.InstantMessagingFlow imFlow, class Microsoft.Rtc.Collaboration.InstantMessageId messageId, int32 responseCode, class Microsoft.Rtc.Internal.Collaboration.SendFailureDeliveryNotificationOptions options, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowExtensions.BeginSendFailureDeliveryNotification(Microsoft.Rtc.Collaboration.InstantMessagingFlow,Microsoft.Rtc.Collaboration.InstantMessageId,System.Int32,Microsoft.Rtc.Internal.Collaboration.SendFailureDeliveryNotificationOptions,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginSendFailureDeliveryNotification (imFlow As InstantMessagingFlow, messageId As InstantMessageId, responseCode As Integer, options As SendFailureDeliveryNotificationOptions, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginSendFailureDeliveryNotification(Microsoft::Rtc::Collaboration::InstantMessagingFlow ^ imFlow, Microsoft::Rtc::Collaboration::InstantMessageId ^ messageId, int responseCode, Microsoft::Rtc::Internal::Collaboration::SendFailureDeliveryNotificationOptions ^ options, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginSendFailureDeliveryNotification : Microsoft.Rtc.Collaboration.InstantMessagingFlow * Microsoft.Rtc.Collaboration.InstantMessageId * int * Microsoft.Rtc.Internal.Collaboration.SendFailureDeliveryNotificationOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowExtensions.BeginSendFailureDeliveryNotification (imFlow, messageId, responseCode, options, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="imFlow" Type="Microsoft.Rtc.Collaboration.InstantMessagingFlow" RefType="this" />
          <Parameter Name="messageId" Type="Microsoft.Rtc.Collaboration.InstantMessageId" />
          <Parameter Name="responseCode" Type="System.Int32" />
          <Parameter Name="options" Type="Microsoft.Rtc.Internal.Collaboration.SendFailureDeliveryNotificationOptions" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="imFlow">To be added.</param>
          <param name="messageId">To be added.</param>
          <param name="responseCode">To be added.</param>
          <param name="options">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowExtensions.BeginSendFailureDeliveryNotification(Microsoft.Rtc.Collaboration.InstantMessagingFlow,Microsoft.Rtc.Collaboration.InstantMessageId,System.Int32,Microsoft.Rtc.Internal.Collaboration.SendFailureDeliveryNotificationOptions,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.InstantMessagingFlow" />
      </Targets>
      <Member MemberName="BeginSendInstantMessage">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginSendInstantMessage (this Microsoft.Rtc.Collaboration.InstantMessagingFlow imFlow, System.Net.Mime.ContentType contentType, byte[] body, Microsoft.Rtc.Internal.Collaboration.SendInstantMessageOptions options, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginSendInstantMessage(class Microsoft.Rtc.Collaboration.InstantMessagingFlow imFlow, class System.Net.Mime.ContentType contentType, unsigned int8[] body, class Microsoft.Rtc.Internal.Collaboration.SendInstantMessageOptions options, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowExtensions.BeginSendInstantMessage(Microsoft.Rtc.Collaboration.InstantMessagingFlow,System.Net.Mime.ContentType,System.Byte[],Microsoft.Rtc.Internal.Collaboration.SendInstantMessageOptions,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginSendInstantMessage(Microsoft::Rtc::Collaboration::InstantMessagingFlow ^ imFlow, System::Net::Mime::ContentType ^ contentType, cli::array &lt;System::Byte&gt; ^ body, Microsoft::Rtc::Internal::Collaboration::SendInstantMessageOptions ^ options, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginSendInstantMessage : Microsoft.Rtc.Collaboration.InstantMessagingFlow * System.Net.Mime.ContentType * byte[] * Microsoft.Rtc.Internal.Collaboration.SendInstantMessageOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowExtensions.BeginSendInstantMessage (imFlow, contentType, body, options, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="imFlow" Type="Microsoft.Rtc.Collaboration.InstantMessagingFlow" RefType="this" />
          <Parameter Name="contentType" Type="System.Net.Mime.ContentType" />
          <Parameter Name="body" Type="System.Byte[]" />
          <Parameter Name="options" Type="Microsoft.Rtc.Internal.Collaboration.SendInstantMessageOptions" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="imFlow">To be added.</param>
          <param name="contentType">To be added.</param>
          <param name="body">To be added.</param>
          <param name="options">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowExtensions.BeginSendInstantMessage(Microsoft.Rtc.Collaboration.InstantMessagingFlow,System.Net.Mime.ContentType,System.Byte[],Microsoft.Rtc.Internal.Collaboration.SendInstantMessageOptions,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.InstantMessagingFlow" />
      </Targets>
      <Member MemberName="BeginSendSuccessDeliveryNotification">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginSendSuccessDeliveryNotification (this Microsoft.Rtc.Collaboration.InstantMessagingFlow imFlow, Microsoft.Rtc.Collaboration.InstantMessageId messageId, Microsoft.Rtc.Internal.Collaboration.SendSuccessDeliveryNotificationOptions options, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginSendSuccessDeliveryNotification(class Microsoft.Rtc.Collaboration.InstantMessagingFlow imFlow, class Microsoft.Rtc.Collaboration.InstantMessageId messageId, class Microsoft.Rtc.Internal.Collaboration.SendSuccessDeliveryNotificationOptions options, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowExtensions.BeginSendSuccessDeliveryNotification(Microsoft.Rtc.Collaboration.InstantMessagingFlow,Microsoft.Rtc.Collaboration.InstantMessageId,Microsoft.Rtc.Internal.Collaboration.SendSuccessDeliveryNotificationOptions,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginSendSuccessDeliveryNotification (imFlow As InstantMessagingFlow, messageId As InstantMessageId, options As SendSuccessDeliveryNotificationOptions, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginSendSuccessDeliveryNotification(Microsoft::Rtc::Collaboration::InstantMessagingFlow ^ imFlow, Microsoft::Rtc::Collaboration::InstantMessageId ^ messageId, Microsoft::Rtc::Internal::Collaboration::SendSuccessDeliveryNotificationOptions ^ options, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginSendSuccessDeliveryNotification : Microsoft.Rtc.Collaboration.InstantMessagingFlow * Microsoft.Rtc.Collaboration.InstantMessageId * Microsoft.Rtc.Internal.Collaboration.SendSuccessDeliveryNotificationOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowExtensions.BeginSendSuccessDeliveryNotification (imFlow, messageId, options, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="imFlow" Type="Microsoft.Rtc.Collaboration.InstantMessagingFlow" RefType="this" />
          <Parameter Name="messageId" Type="Microsoft.Rtc.Collaboration.InstantMessageId" />
          <Parameter Name="options" Type="Microsoft.Rtc.Internal.Collaboration.SendSuccessDeliveryNotificationOptions" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="imFlow">To be added.</param>
          <param name="messageId">To be added.</param>
          <param name="options">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowExtensions.BeginSendSuccessDeliveryNotification(Microsoft.Rtc.Collaboration.InstantMessagingFlow,Microsoft.Rtc.Collaboration.InstantMessageId,Microsoft.Rtc.Internal.Collaboration.SendSuccessDeliveryNotificationOptions,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.InstantMessagingFlowTemplate" />
      </Targets>
      <Member MemberName="SetMessageLimit">
        <MemberSignature Language="C#" Value="public static void SetMessageLimit (this Microsoft.Rtc.Collaboration.InstantMessagingFlowTemplate template, int messageLimitKb);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMessageLimit(class Microsoft.Rtc.Collaboration.InstantMessagingFlowTemplate template, int32 messageLimitKb) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowTemplateExtensions.SetMessageLimit(Microsoft.Rtc.Collaboration.InstantMessagingFlowTemplate,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetMessageLimit (template As InstantMessagingFlowTemplate, messageLimitKb As Integer)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetMessageLimit(Microsoft::Rtc::Collaboration::InstantMessagingFlowTemplate ^ template, int messageLimitKb);" />
        <MemberSignature Language="F#" Value="static member SetMessageLimit : Microsoft.Rtc.Collaboration.InstantMessagingFlowTemplate * int -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowTemplateExtensions.SetMessageLimit (template, messageLimitKb)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="template" Type="Microsoft.Rtc.Collaboration.InstantMessagingFlowTemplate" RefType="this" />
          <Parameter Name="messageLimitKb" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="template">To be added.</param>
          <param name="messageLimitKb">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowTemplateExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.InstantMessagingFlowTemplateExtensions.SetMessageLimit(Microsoft.Rtc.Collaboration.InstantMessagingFlowTemplate,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.LocalEndpoint" />
      </Targets>
      <Member MemberName="BeginDrain">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginDrain (this Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, Microsoft.Rtc.Internal.Collaboration.LocalEndpointDrainOptions options, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDrain(class Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, class Microsoft.Rtc.Internal.Collaboration.LocalEndpointDrainOptions options, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.BeginDrain(Microsoft.Rtc.Collaboration.LocalEndpoint,Microsoft.Rtc.Internal.Collaboration.LocalEndpointDrainOptions,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginDrain (endpoint As LocalEndpoint, options As LocalEndpointDrainOptions, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginDrain(Microsoft::Rtc::Collaboration::LocalEndpoint ^ endpoint, Microsoft::Rtc::Internal::Collaboration::LocalEndpointDrainOptions ^ options, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginDrain : Microsoft.Rtc.Collaboration.LocalEndpoint * Microsoft.Rtc.Internal.Collaboration.LocalEndpointDrainOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.BeginDrain (endpoint, options, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.LocalEndpoint" RefType="this" />
          <Parameter Name="options" Type="Microsoft.Rtc.Internal.Collaboration.LocalEndpointDrainOptions" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="options">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.BeginDrain(Microsoft.Rtc.Collaboration.LocalEndpoint,Microsoft.Rtc.Internal.Collaboration.LocalEndpointDrainOptions,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.LocalEndpoint" />
      </Targets>
      <Member MemberName="BeginGetMediaRelayToken">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetMediaRelayToken (this Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, bool forceRefresh, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetMediaRelayToken(class Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, bool forceRefresh, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.BeginGetMediaRelayToken(Microsoft.Rtc.Collaboration.LocalEndpoint,System.Boolean,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginGetMediaRelayToken (endpoint As LocalEndpoint, forceRefresh As Boolean, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginGetMediaRelayToken(Microsoft::Rtc::Collaboration::LocalEndpoint ^ endpoint, bool forceRefresh, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginGetMediaRelayToken : Microsoft.Rtc.Collaboration.LocalEndpoint * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.BeginGetMediaRelayToken (endpoint, forceRefresh, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.LocalEndpoint" RefType="this" />
          <Parameter Name="forceRefresh" Type="System.Boolean" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="forceRefresh">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.BeginGetMediaRelayToken(Microsoft.Rtc.Collaboration.LocalEndpoint,System.Boolean,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.LocalEndpoint" />
      </Targets>
      <Member MemberName="BeginGetProvisioningData">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetProvisioningData (this Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, string localIdentityUri, string localIdentityDisplayName, string[] groups, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetProvisioningData(class Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, string localIdentityUri, string localIdentityDisplayName, string[] groups, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.BeginGetProvisioningData(Microsoft.Rtc.Collaboration.LocalEndpoint,System.String,System.String,System.String[],System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginGetProvisioningData (endpoint As LocalEndpoint, localIdentityUri As String, localIdentityDisplayName As String, groups As String(), userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginGetProvisioningData(Microsoft::Rtc::Collaboration::LocalEndpoint ^ endpoint, System::String ^ localIdentityUri, System::String ^ localIdentityDisplayName, cli::array &lt;System::String ^&gt; ^ groups, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginGetProvisioningData : Microsoft.Rtc.Collaboration.LocalEndpoint * string * string * string[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.BeginGetProvisioningData (endpoint, localIdentityUri, localIdentityDisplayName, groups, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.LocalEndpoint" RefType="this" />
          <Parameter Name="localIdentityUri" Type="System.String" />
          <Parameter Name="localIdentityDisplayName" Type="System.String" />
          <Parameter Name="groups" Type="System.String[]" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="localIdentityUri">To be added.</param>
          <param name="localIdentityDisplayName">To be added.</param>
          <param name="groups">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.BeginGetProvisioningData(Microsoft.Rtc.Collaboration.LocalEndpoint,System.String,System.String,System.String[],System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.LocalEndpoint" />
      </Targets>
      <Member MemberName="BeginTerminate">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginTerminate (this Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, Microsoft.Rtc.Internal.Collaboration.LocalEndpointTerminationOptions options, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginTerminate(class Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, class Microsoft.Rtc.Internal.Collaboration.LocalEndpointTerminationOptions options, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.BeginTerminate(Microsoft.Rtc.Collaboration.LocalEndpoint,Microsoft.Rtc.Internal.Collaboration.LocalEndpointTerminationOptions,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginTerminate (endpoint As LocalEndpoint, options As LocalEndpointTerminationOptions, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginTerminate(Microsoft::Rtc::Collaboration::LocalEndpoint ^ endpoint, Microsoft::Rtc::Internal::Collaboration::LocalEndpointTerminationOptions ^ options, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginTerminate : Microsoft.Rtc.Collaboration.LocalEndpoint * Microsoft.Rtc.Internal.Collaboration.LocalEndpointTerminationOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.BeginTerminate (endpoint, options, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.LocalEndpoint" RefType="this" />
          <Parameter Name="options" Type="Microsoft.Rtc.Internal.Collaboration.LocalEndpointTerminationOptions" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="options">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.BeginTerminate(Microsoft.Rtc.Collaboration.LocalEndpoint,Microsoft.Rtc.Internal.Collaboration.LocalEndpointTerminationOptions,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.LocalEndpoint" />
      </Targets>
      <Member MemberName="EndGetMediaRelayToken">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.MediaRelayToken EndGetMediaRelayToken (this Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Collaboration.MediaRelayToken EndGetMediaRelayToken(class Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.EndGetMediaRelayToken(Microsoft.Rtc.Collaboration.LocalEndpoint,System.IAsyncResult)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndGetMediaRelayToken (endpoint As LocalEndpoint, result As IAsyncResult) As MediaRelayToken" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::MediaRelayToken ^ EndGetMediaRelayToken(Microsoft::Rtc::Collaboration::LocalEndpoint ^ endpoint, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndGetMediaRelayToken : Microsoft.Rtc.Collaboration.LocalEndpoint * IAsyncResult -&gt; Microsoft.Rtc.Internal.Collaboration.MediaRelayToken" Usage="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.EndGetMediaRelayToken (endpoint, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.MediaRelayToken</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.LocalEndpoint" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.EndGetMediaRelayToken(Microsoft.Rtc.Collaboration.LocalEndpoint,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.LocalEndpoint" />
      </Targets>
      <Member MemberName="GetCachedProvisioningData">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.CachedCompressedProvisioningData GetCachedProvisioningData (this Microsoft.Rtc.Collaboration.LocalEndpoint endpoint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Collaboration.CachedCompressedProvisioningData GetCachedProvisioningData(class Microsoft.Rtc.Collaboration.LocalEndpoint endpoint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.GetCachedProvisioningData(Microsoft.Rtc.Collaboration.LocalEndpoint)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCachedProvisioningData (endpoint As LocalEndpoint) As CachedCompressedProvisioningData" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::CachedCompressedProvisioningData ^ GetCachedProvisioningData(Microsoft::Rtc::Collaboration::LocalEndpoint ^ endpoint);" />
        <MemberSignature Language="F#" Value="static member GetCachedProvisioningData : Microsoft.Rtc.Collaboration.LocalEndpoint -&gt; Microsoft.Rtc.Internal.Collaboration.CachedCompressedProvisioningData" Usage="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.GetCachedProvisioningData endpoint" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.CachedCompressedProvisioningData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.LocalEndpoint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.GetCachedProvisioningData(Microsoft.Rtc.Collaboration.LocalEndpoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.LocalEndpoint" />
      </Targets>
      <Member MemberName="GetConferenceServices">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceServices GetConferenceServices (this Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, string localIdentityUri, string localIdentityDisplayName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceServices GetConferenceServices(class Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, string localIdentityUri, string localIdentityDisplayName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.GetConferenceServices(Microsoft.Rtc.Collaboration.LocalEndpoint,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConferenceServices (endpoint As LocalEndpoint, localIdentityUri As String, localIdentityDisplayName As String) As ConferenceServices" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Collaboration::ConferenceManagement::ConferenceServices ^ GetConferenceServices(Microsoft::Rtc::Collaboration::LocalEndpoint ^ endpoint, System::String ^ localIdentityUri, System::String ^ localIdentityDisplayName);" />
        <MemberSignature Language="F#" Value="static member GetConferenceServices : Microsoft.Rtc.Collaboration.LocalEndpoint * string * string -&gt; Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceServices" Usage="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.GetConferenceServices (endpoint, localIdentityUri, localIdentityDisplayName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Collaboration.ConferenceManagement.ConferenceServices</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.LocalEndpoint" RefType="this" />
          <Parameter Name="localIdentityUri" Type="System.String" />
          <Parameter Name="localIdentityDisplayName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="localIdentityUri">To be added.</param>
          <param name="localIdentityDisplayName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.GetConferenceServices(Microsoft.Rtc.Collaboration.LocalEndpoint,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.LocalEndpoint" />
      </Targets>
      <Member MemberName="TriggerRegistrationRefresh">
        <MemberSignature Language="C#" Value="public static void TriggerRegistrationRefresh (this Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, TimeSpan refreshDelay);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TriggerRegistrationRefresh(class Microsoft.Rtc.Collaboration.LocalEndpoint endpoint, valuetype System.TimeSpan refreshDelay) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.TriggerRegistrationRefresh(Microsoft.Rtc.Collaboration.LocalEndpoint,System.TimeSpan)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TriggerRegistrationRefresh (endpoint As LocalEndpoint, refreshDelay As TimeSpan)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TriggerRegistrationRefresh(Microsoft::Rtc::Collaboration::LocalEndpoint ^ endpoint, TimeSpan refreshDelay);" />
        <MemberSignature Language="F#" Value="static member TriggerRegistrationRefresh : Microsoft.Rtc.Collaboration.LocalEndpoint * TimeSpan -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.TriggerRegistrationRefresh (endpoint, refreshDelay)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.LocalEndpoint" RefType="this" />
          <Parameter Name="refreshDelay" Type="System.TimeSpan" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="refreshDelay">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointExtensions.TriggerRegistrationRefresh(Microsoft.Rtc.Collaboration.LocalEndpoint,System.TimeSpan)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices" />
      </Targets>
      <Member MemberName="BeginEnhancedPresenceQuery">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginEnhancedPresenceQuery (this Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices presenceServices, System.Collections.Generic.IEnumerable&lt;string&gt; targets, string[] categories, EventHandler&lt;Microsoft.Rtc.Collaboration.Presence.RemotePresentitiesNotificationEventArgs&gt; queryResultHandler, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginEnhancedPresenceQuery(class Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices presenceServices, class System.Collections.Generic.IEnumerable`1&lt;string&gt; targets, string[] categories, class System.EventHandler`1&lt;class Microsoft.Rtc.Collaboration.Presence.RemotePresentitiesNotificationEventArgs&gt; queryResultHandler, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointPresenceServicesExtensions.BeginEnhancedPresenceQuery(Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices,System.Collections.Generic.IEnumerable{System.String},System.String[],System.EventHandler{Microsoft.Rtc.Collaboration.Presence.RemotePresentitiesNotificationEventArgs},System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginEnhancedPresenceQuery (presenceServices As LocalEndpointPresenceServices, targets As IEnumerable(Of String), categories As String(), queryResultHandler As EventHandler(Of RemotePresentitiesNotificationEventArgs), userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginEnhancedPresenceQuery(Microsoft::Rtc::Collaboration::LocalEndpointPresenceServices ^ presenceServices, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ targets, cli::array &lt;System::String ^&gt; ^ categories, EventHandler&lt;Microsoft::Rtc::Collaboration::Presence::RemotePresentitiesNotificationEventArgs ^&gt; ^ queryResultHandler, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginEnhancedPresenceQuery : Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices * seq&lt;string&gt; * string[] * EventHandler&lt;Microsoft.Rtc.Collaboration.Presence.RemotePresentitiesNotificationEventArgs&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.LocalEndpointPresenceServicesExtensions.BeginEnhancedPresenceQuery (presenceServices, targets, categories, queryResultHandler, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="presenceServices" Type="Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices" RefType="this" />
          <Parameter Name="targets" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
          <Parameter Name="categories" Type="System.String[]" />
          <Parameter Name="queryResultHandler" Type="System.EventHandler&lt;Microsoft.Rtc.Collaboration.Presence.RemotePresentitiesNotificationEventArgs&gt;" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="presenceServices">To be added.</param>
          <param name="targets">To be added.</param>
          <param name="categories">To be added.</param>
          <param name="queryResultHandler">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalEndpointPresenceServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointPresenceServicesExtensions.BeginEnhancedPresenceQuery(Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices,System.Collections.Generic.IEnumerable{System.String},System.String[],System.EventHandler{Microsoft.Rtc.Collaboration.Presence.RemotePresentitiesNotificationEventArgs},System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices" />
      </Targets>
      <Member MemberName="EndEnhancedPresenceQuery">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Rtc.Collaboration.Presence.RemotePresentityNotification&gt; EndEnhancedPresenceQuery (this Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices presenceServices, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Rtc.Collaboration.Presence.RemotePresentityNotification&gt; EndEnhancedPresenceQuery(class Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices presenceServices, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointPresenceServicesExtensions.EndEnhancedPresenceQuery(Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices,System.IAsyncResult)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndEnhancedPresenceQuery (presenceServices As LocalEndpointPresenceServices, result As IAsyncResult) As IEnumerable(Of RemotePresentityNotification)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Microsoft::Rtc::Collaboration::Presence::RemotePresentityNotification ^&gt; ^ EndEnhancedPresenceQuery(Microsoft::Rtc::Collaboration::LocalEndpointPresenceServices ^ presenceServices, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndEnhancedPresenceQuery : Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices * IAsyncResult -&gt; seq&lt;Microsoft.Rtc.Collaboration.Presence.RemotePresentityNotification&gt;" Usage="Microsoft.Rtc.Internal.Collaboration.LocalEndpointPresenceServicesExtensions.EndEnhancedPresenceQuery (presenceServices, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Rtc.Collaboration.Presence.RemotePresentityNotification&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="presenceServices" Type="Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="presenceServices">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalEndpointPresenceServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalEndpointPresenceServicesExtensions.EndEnhancedPresenceQuery(Microsoft.Rtc.Collaboration.LocalEndpointPresenceServices,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" />
      </Targets>
      <Member MemberName="GetEndpointCapabilities">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.Device GetEndpointCapabilities (this Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Collaboration.Device GetEndpointCapabilities(class Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetEndpointCapabilities(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEndpointCapabilities (e As LocalPresentityNotificationEventArgs) As Device" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::Device ^ GetEndpointCapabilities(Microsoft::Rtc::Collaboration::Presence::LocalPresentityNotificationEventArgs ^ e);" />
        <MemberSignature Language="F#" Value="static member GetEndpointCapabilities : Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs -&gt; Microsoft.Rtc.Internal.Collaboration.Device" Usage="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetEndpointCapabilities e" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.Device</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetEndpointCapabilities(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" />
      </Targets>
      <Member MemberName="GetEndpointCapabilities">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.Device GetEndpointCapabilities (this Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e, string gruu);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Collaboration.Device GetEndpointCapabilities(class Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e, string gruu) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetEndpointCapabilities(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEndpointCapabilities (e As LocalPresentityNotificationEventArgs, gruu As String) As Device" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::Device ^ GetEndpointCapabilities(Microsoft::Rtc::Collaboration::Presence::LocalPresentityNotificationEventArgs ^ e, System::String ^ gruu);" />
        <MemberSignature Language="F#" Value="static member GetEndpointCapabilities : Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs * string -&gt; Microsoft.Rtc.Internal.Collaboration.Device" Usage="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetEndpointCapabilities (e, gruu)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.Device</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" RefType="this" />
          <Parameter Name="gruu" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="gruu">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetEndpointCapabilities(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" />
      </Targets>
      <Member MemberName="GetEndpointState">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Collaboration.Presence.PresenceState GetEndpointState (this Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e, string gruu);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Collaboration.Presence.PresenceState GetEndpointState(class Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e, string gruu) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetEndpointState(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEndpointState (e As LocalPresentityNotificationEventArgs, gruu As String) As PresenceState" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Collaboration::Presence::PresenceState ^ GetEndpointState(Microsoft::Rtc::Collaboration::Presence::LocalPresentityNotificationEventArgs ^ e, System::String ^ gruu);" />
        <MemberSignature Language="F#" Value="static member GetEndpointState : Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs * string -&gt; Microsoft.Rtc.Collaboration.Presence.PresenceState" Usage="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetEndpointState (e, gruu)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Collaboration.Presence.PresenceState</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" RefType="this" />
          <Parameter Name="gruu" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="gruu">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetEndpointState(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" />
      </Targets>
      <Member MemberName="GetIfMostActiveEndpoint">
        <MemberSignature Language="C#" Value="public static bool GetIfMostActiveEndpoint (this Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e, string epid);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIfMostActiveEndpoint(class Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e, string epid) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetIfMostActiveEndpoint(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIfMostActiveEndpoint (e As LocalPresentityNotificationEventArgs, epid As String) As Boolean" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool GetIfMostActiveEndpoint(Microsoft::Rtc::Collaboration::Presence::LocalPresentityNotificationEventArgs ^ e, System::String ^ epid);" />
        <MemberSignature Language="F#" Value="static member GetIfMostActiveEndpoint : Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs * string -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetIfMostActiveEndpoint (e, epid)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" RefType="this" />
          <Parameter Name="epid" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="epid">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetIfMostActiveEndpoint(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" />
      </Targets>
      <Member MemberName="GetIsPreferredEndpointForPrivacyMigration">
        <MemberSignature Language="C#" Value="public static bool GetIsPreferredEndpointForPrivacyMigration (this Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e, string id);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsPreferredEndpointForPrivacyMigration(class Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e, string id) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetIsPreferredEndpointForPrivacyMigration(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIsPreferredEndpointForPrivacyMigration (e As LocalPresentityNotificationEventArgs, id As String) As Boolean" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool GetIsPreferredEndpointForPrivacyMigration(Microsoft::Rtc::Collaboration::Presence::LocalPresentityNotificationEventArgs ^ e, System::String ^ id);" />
        <MemberSignature Language="F#" Value="static member GetIsPreferredEndpointForPrivacyMigration : Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs * string -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetIsPreferredEndpointForPrivacyMigration (e, id)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" RefType="this" />
          <Parameter Name="id" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <param name="id">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetIsPreferredEndpointForPrivacyMigration(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" />
      </Targets>
      <Member MemberName="GetMissedMessages">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.MessageWaitingIndicator GetMissedMessages (this Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Collaboration.MessageWaitingIndicator GetMissedMessages(class Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetMissedMessages(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMissedMessages (e As LocalPresentityNotificationEventArgs) As MessageWaitingIndicator" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::MessageWaitingIndicator ^ GetMissedMessages(Microsoft::Rtc::Collaboration::Presence::LocalPresentityNotificationEventArgs ^ e);" />
        <MemberSignature Language="F#" Value="static member GetMissedMessages : Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs -&gt; Microsoft.Rtc.Internal.Collaboration.MessageWaitingIndicator" Usage="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetMissedMessages e" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.MessageWaitingIndicator</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.GetMissedMessages(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" />
      </Targets>
      <Member MemberName="IsMostActiveEndpoint">
        <MemberSignature Language="C#" Value="public static bool IsMostActiveEndpoint (this Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMostActiveEndpoint(class Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.IsMostActiveEndpoint(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsMostActiveEndpoint (e As LocalPresentityNotificationEventArgs) As Boolean" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsMostActiveEndpoint(Microsoft::Rtc::Collaboration::Presence::LocalPresentityNotificationEventArgs ^ e);" />
        <MemberSignature Language="F#" Value="static member IsMostActiveEndpoint : Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.IsMostActiveEndpoint e" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="e" Type="Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.LocalPresentityNotificationEventArgsExtensions.IsMostActiveEndpoint(Microsoft.Rtc.Collaboration.Presence.LocalPresentityNotificationEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.MimePartContentDescription" />
      </Targets>
      <Member MemberName="UpdateContentDispositionType">
        <MemberSignature Language="C#" Value="public static void UpdateContentDispositionType (this Microsoft.Rtc.Collaboration.MimePartContentDescription multiPart, string contentDispositionType, bool isHandlingRequired);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateContentDispositionType(class Microsoft.Rtc.Collaboration.MimePartContentDescription multiPart, string contentDispositionType, bool isHandlingRequired) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.MimePartContentDescriptionExtensions.UpdateContentDispositionType(Microsoft.Rtc.Collaboration.MimePartContentDescription,System.String,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub UpdateContentDispositionType (multiPart As MimePartContentDescription, contentDispositionType As String, isHandlingRequired As Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void UpdateContentDispositionType(Microsoft::Rtc::Collaboration::MimePartContentDescription ^ multiPart, System::String ^ contentDispositionType, bool isHandlingRequired);" />
        <MemberSignature Language="F#" Value="static member UpdateContentDispositionType : Microsoft.Rtc.Collaboration.MimePartContentDescription * string * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.MimePartContentDescriptionExtensions.UpdateContentDispositionType (multiPart, contentDispositionType, isHandlingRequired)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="multiPart" Type="Microsoft.Rtc.Collaboration.MimePartContentDescription" RefType="this" />
          <Parameter Name="contentDispositionType" Type="System.String" />
          <Parameter Name="isHandlingRequired" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="multiPart">To be added.</param>
          <param name="contentDispositionType">To be added.</param>
          <param name="isHandlingRequired">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.MimePartContentDescriptionExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.MimePartContentDescriptionExtensions.UpdateContentDispositionType(Microsoft.Rtc.Collaboration.MimePartContentDescription,System.String,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.Note" />
      </Targets>
      <Member MemberName="GetPublishTime">
        <MemberSignature Language="C#" Value="public static DateTime GetPublishTime (this Microsoft.Rtc.Collaboration.Presence.Note note);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime GetPublishTime(class Microsoft.Rtc.Collaboration.Presence.Note note) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.NoteExtensionMethods.GetPublishTime(Microsoft.Rtc.Collaboration.Presence.Note)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static DateTime GetPublishTime(Microsoft::Rtc::Collaboration::Presence::Note ^ note);" />
        <MemberSignature Language="F#" Value="static member GetPublishTime : Microsoft.Rtc.Collaboration.Presence.Note -&gt; DateTime" Usage="Microsoft.Rtc.Internal.Collaboration.NoteExtensionMethods.GetPublishTime note" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.DateTime</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="note" Type="Microsoft.Rtc.Collaboration.Presence.Note" RefType="this" />
        </Parameters>
        <Docs>
          <param name="note">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.NoteExtensionMethods" Member="M:Microsoft.Rtc.Internal.Collaboration.NoteExtensionMethods.GetPublishTime(Microsoft.Rtc.Collaboration.Presence.Note)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" />
      </Targets>
      <Member MemberName="AddPrivacyModeChangedHandler">
        <MemberSignature Language="C#" Value="public static void AddPrivacyModeChangedHandler (this Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.Presence.PrivacyModeChangedEventArgs&gt; handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPrivacyModeChangedHandler(class Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, class System.EventHandler`1&lt;class Microsoft.Rtc.Internal.Collaboration.Presence.PrivacyModeChangedEventArgs&gt; handler) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.AddPrivacyModeChangedHandler(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.EventHandler{Microsoft.Rtc.Internal.Collaboration.Presence.PrivacyModeChangedEventArgs})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddPrivacyModeChangedHandler (lop As LocalOwnerPresence, handler As EventHandler(Of PrivacyModeChangedEventArgs))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddPrivacyModeChangedHandler(Microsoft::Rtc::Collaboration::Presence::LocalOwnerPresence ^ lop, EventHandler&lt;Microsoft::Rtc::Internal::Collaboration::Presence::PrivacyModeChangedEventArgs ^&gt; ^ handler);" />
        <MemberSignature Language="F#" Value="static member AddPrivacyModeChangedHandler : Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence * EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.Presence.PrivacyModeChangedEventArgs&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.AddPrivacyModeChangedHandler (lop, handler)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="lop" Type="Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" RefType="this" />
          <Parameter Name="handler" Type="System.EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.Presence.PrivacyModeChangedEventArgs&gt;" />
        </Parameters>
        <Docs>
          <param name="lop">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.AddPrivacyModeChangedHandler(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.EventHandler{Microsoft.Rtc.Internal.Collaboration.Presence.PrivacyModeChangedEventArgs})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" />
      </Targets>
      <Member MemberName="BeginAddUserACE">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginAddUserACE (this Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence localOwnerPresence, string contactUri, int containerId, Microsoft.Rtc.Collaboration.SourceNetwork sourceNetwork, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginAddUserACE(class Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence localOwnerPresence, string contactUri, int32 containerId, valuetype Microsoft.Rtc.Collaboration.SourceNetwork sourceNetwork, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.BeginAddUserACE(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.String,System.Int32,Microsoft.Rtc.Collaboration.SourceNetwork,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginAddUserACE(Microsoft::Rtc::Collaboration::Presence::LocalOwnerPresence ^ localOwnerPresence, System::String ^ contactUri, int containerId, Microsoft::Rtc::Collaboration::SourceNetwork sourceNetwork, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginAddUserACE : Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence * string * int * Microsoft.Rtc.Collaboration.SourceNetwork * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.BeginAddUserACE (localOwnerPresence, contactUri, containerId, sourceNetwork, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="localOwnerPresence" Type="Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" RefType="this" />
          <Parameter Name="contactUri" Type="System.String" />
          <Parameter Name="containerId" Type="System.Int32" />
          <Parameter Name="sourceNetwork" Type="Microsoft.Rtc.Collaboration.SourceNetwork" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="localOwnerPresence">To be added.</param>
          <param name="contactUri">To be added.</param>
          <param name="containerId">To be added.</param>
          <param name="sourceNetwork">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.BeginAddUserACE(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.String,System.Int32,Microsoft.Rtc.Collaboration.SourceNetwork,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" />
      </Targets>
      <Member MemberName="BeginDeletePresence">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeletePresence (this Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, System.Collections.Generic.ICollection&lt;Microsoft.Rtc.Collaboration.Presence.PresenceCategory&gt; categoryItems, string publisherGruu, string publisherEpid, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeletePresence(class Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, class System.Collections.Generic.ICollection`1&lt;class Microsoft.Rtc.Collaboration.Presence.PresenceCategory&gt; categoryItems, string publisherGruu, string publisherEpid, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.BeginDeletePresence(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.Collections.Generic.ICollection{Microsoft.Rtc.Collaboration.Presence.PresenceCategory},System.String,System.String,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginDeletePresence (lop As LocalOwnerPresence, categoryItems As ICollection(Of PresenceCategory), publisherGruu As String, publisherEpid As String, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginDeletePresence(Microsoft::Rtc::Collaboration::Presence::LocalOwnerPresence ^ lop, System::Collections::Generic::ICollection&lt;Microsoft::Rtc::Collaboration::Presence::PresenceCategory ^&gt; ^ categoryItems, System::String ^ publisherGruu, System::String ^ publisherEpid, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginDeletePresence : Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence * System.Collections.Generic.ICollection&lt;Microsoft.Rtc.Collaboration.Presence.PresenceCategory&gt; * string * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.BeginDeletePresence (lop, categoryItems, publisherGruu, publisherEpid, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="lop" Type="Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" RefType="this" />
          <Parameter Name="categoryItems" Type="System.Collections.Generic.ICollection&lt;Microsoft.Rtc.Collaboration.Presence.PresenceCategory&gt;" />
          <Parameter Name="publisherGruu" Type="System.String" />
          <Parameter Name="publisherEpid" Type="System.String" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="lop">To be added.</param>
          <param name="categoryItems">To be added.</param>
          <param name="publisherGruu">To be added.</param>
          <param name="publisherEpid">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.BeginDeletePresence(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.Collections.Generic.ICollection{Microsoft.Rtc.Collaboration.Presence.PresenceCategory},System.String,System.String,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" />
      </Targets>
      <Member MemberName="BeginDeleteUserACE">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteUserACE (this Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence localOwnerPresence, string contactUri, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteUserACE(class Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence localOwnerPresence, string contactUri, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.BeginDeleteUserACE(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.String,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginDeleteUserACE(Microsoft::Rtc::Collaboration::Presence::LocalOwnerPresence ^ localOwnerPresence, System::String ^ contactUri, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginDeleteUserACE : Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.BeginDeleteUserACE (localOwnerPresence, contactUri, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="localOwnerPresence" Type="Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" RefType="this" />
          <Parameter Name="contactUri" Type="System.String" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="localOwnerPresence">To be added.</param>
          <param name="contactUri">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.BeginDeleteUserACE(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.String,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" />
      </Targets>
      <Member MemberName="BeginPublishPresence">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginPublishPresence (this Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, System.Collections.Generic.ICollection&lt;Microsoft.Rtc.Collaboration.Presence.PresenceCategory&gt; categoryItems, string publisherGruu, string publisherEpid, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginPublishPresence(class Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, class System.Collections.Generic.ICollection`1&lt;class Microsoft.Rtc.Collaboration.Presence.PresenceCategory&gt; categoryItems, string publisherGruu, string publisherEpid, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.BeginPublishPresence(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.Collections.Generic.ICollection{Microsoft.Rtc.Collaboration.Presence.PresenceCategory},System.String,System.String,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginPublishPresence (lop As LocalOwnerPresence, categoryItems As ICollection(Of PresenceCategory), publisherGruu As String, publisherEpid As String, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginPublishPresence(Microsoft::Rtc::Collaboration::Presence::LocalOwnerPresence ^ lop, System::Collections::Generic::ICollection&lt;Microsoft::Rtc::Collaboration::Presence::PresenceCategory ^&gt; ^ categoryItems, System::String ^ publisherGruu, System::String ^ publisherEpid, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginPublishPresence : Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence * System.Collections.Generic.ICollection&lt;Microsoft.Rtc.Collaboration.Presence.PresenceCategory&gt; * string * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.BeginPublishPresence (lop, categoryItems, publisherGruu, publisherEpid, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="lop" Type="Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" RefType="this" />
          <Parameter Name="categoryItems" Type="System.Collections.Generic.ICollection&lt;Microsoft.Rtc.Collaboration.Presence.PresenceCategory&gt;" />
          <Parameter Name="publisherGruu" Type="System.String" />
          <Parameter Name="publisherEpid" Type="System.String" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="lop">To be added.</param>
          <param name="categoryItems">To be added.</param>
          <param name="publisherGruu">To be added.</param>
          <param name="publisherEpid">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.BeginPublishPresence(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.Collections.Generic.ICollection{Microsoft.Rtc.Collaboration.Presence.PresenceCategory},System.String,System.String,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" />
      </Targets>
      <Member MemberName="EndAddUserACE">
        <MemberSignature Language="C#" Value="public static void EndAddUserACE (this Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence localOwnerPresence, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndAddUserACE(class Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence localOwnerPresence, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.EndAddUserACE(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EndAddUserACE(Microsoft::Rtc::Collaboration::Presence::LocalOwnerPresence ^ localOwnerPresence, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndAddUserACE : Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence * IAsyncResult -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.EndAddUserACE (localOwnerPresence, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="localOwnerPresence" Type="Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="localOwnerPresence">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.EndAddUserACE(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" />
      </Targets>
      <Member MemberName="EndDeleteUserACE">
        <MemberSignature Language="C#" Value="public static void EndDeleteUserACE (this Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence localOwnerPresence, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndDeleteUserACE(class Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence localOwnerPresence, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.EndDeleteUserACE(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EndDeleteUserACE(Microsoft::Rtc::Collaboration::Presence::LocalOwnerPresence ^ localOwnerPresence, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndDeleteUserACE : Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence * IAsyncResult -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.EndDeleteUserACE (localOwnerPresence, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="localOwnerPresence" Type="Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="localOwnerPresence">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.EndDeleteUserACE(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" />
      </Targets>
      <Member MemberName="GetAllAcesForUser">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;int&gt; GetAllAcesForUser (this Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, Microsoft.Rtc.Signaling.RealTimeAddress contactUri);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;int32&gt; GetAllAcesForUser(class Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, class Microsoft.Rtc.Signaling.RealTimeAddress contactUri) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.GetAllAcesForUser(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,Microsoft.Rtc.Signaling.RealTimeAddress)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAllAcesForUser (lop As LocalOwnerPresence, contactUri As RealTimeAddress) As List(Of Integer)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::List&lt;int&gt; ^ GetAllAcesForUser(Microsoft::Rtc::Collaboration::Presence::LocalOwnerPresence ^ lop, Microsoft::Rtc::Signaling::RealTimeAddress ^ contactUri);" />
        <MemberSignature Language="F#" Value="static member GetAllAcesForUser : Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence * Microsoft.Rtc.Signaling.RealTimeAddress -&gt; System.Collections.Generic.List&lt;int&gt;" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.GetAllAcesForUser (lop, contactUri)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.List&lt;System.Int32&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="lop" Type="Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" RefType="this" />
          <Parameter Name="contactUri" Type="Microsoft.Rtc.Signaling.RealTimeAddress" />
        </Parameters>
        <Docs>
          <param name="lop">To be added.</param>
          <param name="contactUri">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.GetAllAcesForUser(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,Microsoft.Rtc.Signaling.RealTimeAddress)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" />
      </Targets>
      <Member MemberName="GetDefaultRelationshipLevelBasedOnContainerManifest">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Collaboration.Presence.PresenceRelationshipLevel GetDefaultRelationshipLevelBasedOnContainerManifest (this Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, Microsoft.Rtc.Collaboration.SourceNetwork sourceNetwork);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Rtc.Collaboration.Presence.PresenceRelationshipLevel GetDefaultRelationshipLevelBasedOnContainerManifest(class Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, valuetype Microsoft.Rtc.Collaboration.SourceNetwork sourceNetwork) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.GetDefaultRelationshipLevelBasedOnContainerManifest(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,Microsoft.Rtc.Collaboration.SourceNetwork)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Collaboration::Presence::PresenceRelationshipLevel GetDefaultRelationshipLevelBasedOnContainerManifest(Microsoft::Rtc::Collaboration::Presence::LocalOwnerPresence ^ lop, Microsoft::Rtc::Collaboration::SourceNetwork sourceNetwork);" />
        <MemberSignature Language="F#" Value="static member GetDefaultRelationshipLevelBasedOnContainerManifest : Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence * Microsoft.Rtc.Collaboration.SourceNetwork -&gt; Microsoft.Rtc.Collaboration.Presence.PresenceRelationshipLevel" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.GetDefaultRelationshipLevelBasedOnContainerManifest (lop, sourceNetwork)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Collaboration.Presence.PresenceRelationshipLevel</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="lop" Type="Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" RefType="this" />
          <Parameter Name="sourceNetwork" Type="Microsoft.Rtc.Collaboration.SourceNetwork" />
        </Parameters>
        <Docs>
          <param name="lop">To be added.</param>
          <param name="sourceNetwork">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.GetDefaultRelationshipLevelBasedOnContainerManifest(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,Microsoft.Rtc.Collaboration.SourceNetwork)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" />
      </Targets>
      <Member MemberName="GetPresenceRelationshipLevel">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Collaboration.Presence.PresenceRelationshipLevel GetPresenceRelationshipLevel (this Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, Microsoft.Rtc.Signaling.RealTimeAddress uri, Microsoft.Rtc.Collaboration.SourceNetwork sourceNetwork);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Rtc.Collaboration.Presence.PresenceRelationshipLevel GetPresenceRelationshipLevel(class Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, class Microsoft.Rtc.Signaling.RealTimeAddress uri, valuetype Microsoft.Rtc.Collaboration.SourceNetwork sourceNetwork) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.GetPresenceRelationshipLevel(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,Microsoft.Rtc.Signaling.RealTimeAddress,Microsoft.Rtc.Collaboration.SourceNetwork)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Collaboration::Presence::PresenceRelationshipLevel GetPresenceRelationshipLevel(Microsoft::Rtc::Collaboration::Presence::LocalOwnerPresence ^ lop, Microsoft::Rtc::Signaling::RealTimeAddress ^ uri, Microsoft::Rtc::Collaboration::SourceNetwork sourceNetwork);" />
        <MemberSignature Language="F#" Value="static member GetPresenceRelationshipLevel : Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence * Microsoft.Rtc.Signaling.RealTimeAddress * Microsoft.Rtc.Collaboration.SourceNetwork -&gt; Microsoft.Rtc.Collaboration.Presence.PresenceRelationshipLevel" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.GetPresenceRelationshipLevel (lop, uri, sourceNetwork)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Collaboration.Presence.PresenceRelationshipLevel</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="lop" Type="Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" RefType="this" />
          <Parameter Name="uri" Type="Microsoft.Rtc.Signaling.RealTimeAddress" />
          <Parameter Name="sourceNetwork" Type="Microsoft.Rtc.Collaboration.SourceNetwork" />
        </Parameters>
        <Docs>
          <param name="lop">To be added.</param>
          <param name="uri">To be added.</param>
          <param name="sourceNetwork">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.GetPresenceRelationshipLevel(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,Microsoft.Rtc.Signaling.RealTimeAddress,Microsoft.Rtc.Collaboration.SourceNetwork)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" />
      </Targets>
      <Member MemberName="RemovePrivacyModeChangedHandler">
        <MemberSignature Language="C#" Value="public static void RemovePrivacyModeChangedHandler (this Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.Presence.PrivacyModeChangedEventArgs&gt; handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePrivacyModeChangedHandler(class Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence lop, class System.EventHandler`1&lt;class Microsoft.Rtc.Internal.Collaboration.Presence.PrivacyModeChangedEventArgs&gt; handler) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.RemovePrivacyModeChangedHandler(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.EventHandler{Microsoft.Rtc.Internal.Collaboration.Presence.PrivacyModeChangedEventArgs})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RemovePrivacyModeChangedHandler (lop As LocalOwnerPresence, handler As EventHandler(Of PrivacyModeChangedEventArgs))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void RemovePrivacyModeChangedHandler(Microsoft::Rtc::Collaboration::Presence::LocalOwnerPresence ^ lop, EventHandler&lt;Microsoft::Rtc::Internal::Collaboration::Presence::PrivacyModeChangedEventArgs ^&gt; ^ handler);" />
        <MemberSignature Language="F#" Value="static member RemovePrivacyModeChangedHandler : Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence * EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.Presence.PrivacyModeChangedEventArgs&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.RemovePrivacyModeChangedHandler (lop, handler)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="lop" Type="Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence" RefType="this" />
          <Parameter Name="handler" Type="System.EventHandler&lt;Microsoft.Rtc.Internal.Collaboration.Presence.PrivacyModeChangedEventArgs&gt;" />
        </Parameters>
        <Docs>
          <param name="lop">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.LocalOwnerPresenceExtensions.RemovePrivacyModeChangedHandler(Microsoft.Rtc.Collaboration.Presence.LocalOwnerPresence,System.EventHandler{Microsoft.Rtc.Internal.Collaboration.Presence.PrivacyModeChangedEventArgs})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.NormalizationRule" />
      </Targets>
      <Member MemberName="GetOtherElements">
        <MemberSignature Language="C#" Value="public static System.Xml.XmlElement[] GetOtherElements (this Microsoft.Rtc.Collaboration.Presence.NormalizationRule rule);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlElement[] GetOtherElements(class Microsoft.Rtc.Collaboration.Presence.NormalizationRule rule) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.NormalizationRuleExtensions.GetOtherElements(Microsoft.Rtc.Collaboration.Presence.NormalizationRule)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOtherElements (rule As NormalizationRule) As XmlElement()" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;System::Xml::XmlElement ^&gt; ^ GetOtherElements(Microsoft::Rtc::Collaboration::Presence::NormalizationRule ^ rule);" />
        <MemberSignature Language="F#" Value="static member GetOtherElements : Microsoft.Rtc.Collaboration.Presence.NormalizationRule -&gt; System.Xml.XmlElement[]" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.NormalizationRuleExtensions.GetOtherElements rule" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Xml.XmlElement[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rule" Type="Microsoft.Rtc.Collaboration.Presence.NormalizationRule" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rule">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.NormalizationRuleExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.NormalizationRuleExtensions.GetOtherElements(Microsoft.Rtc.Collaboration.Presence.NormalizationRule)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.PresenceState" />
      </Targets>
      <Member MemberName="SetGruu">
        <MemberSignature Language="C#" Value="public static void SetGruu (this Microsoft.Rtc.Collaboration.Presence.PresenceState presenceState, string gruu);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetGruu(class Microsoft.Rtc.Collaboration.Presence.PresenceState presenceState, string gruu) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.PresenceStateExtensions.SetGruu(Microsoft.Rtc.Collaboration.Presence.PresenceState,System.String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetGruu(Microsoft::Rtc::Collaboration::Presence::PresenceState ^ presenceState, System::String ^ gruu);" />
        <MemberSignature Language="F#" Value="static member SetGruu : Microsoft.Rtc.Collaboration.Presence.PresenceState * string -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.PresenceStateExtensions.SetGruu (presenceState, gruu)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="presenceState" Type="Microsoft.Rtc.Collaboration.Presence.PresenceState" RefType="this" />
          <Parameter Name="gruu" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="presenceState">To be added.</param>
          <param name="gruu">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.PresenceStateExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.PresenceStateExtensions.SetGruu(Microsoft.Rtc.Collaboration.Presence.PresenceState,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.RemotePresenceView" />
      </Targets>
      <Member MemberName="GetPresentitiesAddresses">
        <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Signaling.RealTimeAddress&gt; GetPresentitiesAddresses (this Microsoft.Rtc.Collaboration.Presence.RemotePresenceView remotePresenceView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Rtc.Signaling.RealTimeAddress&gt; GetPresentitiesAddresses(class Microsoft.Rtc.Collaboration.Presence.RemotePresenceView remotePresenceView) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.RemotePresenceViewExtensions.GetPresentitiesAddresses(Microsoft.Rtc.Collaboration.Presence.RemotePresenceView)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::ObjectModel::Collection&lt;Microsoft::Rtc::Signaling::RealTimeAddress ^&gt; ^ GetPresentitiesAddresses(Microsoft::Rtc::Collaboration::Presence::RemotePresenceView ^ remotePresenceView);" />
        <MemberSignature Language="F#" Value="static member GetPresentitiesAddresses : Microsoft.Rtc.Collaboration.Presence.RemotePresenceView -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Signaling.RealTimeAddress&gt;" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.RemotePresenceViewExtensions.GetPresentitiesAddresses remotePresenceView" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Signaling.RealTimeAddress&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="remotePresenceView" Type="Microsoft.Rtc.Collaboration.Presence.RemotePresenceView" RefType="this" />
        </Parameters>
        <Docs>
          <param name="remotePresenceView">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.RemotePresenceViewExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.RemotePresenceViewExtensions.GetPresentitiesAddresses(Microsoft.Rtc.Collaboration.Presence.RemotePresenceView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.RemotePresenceView" />
      </Targets>
      <Member MemberName="GetPresentityCount">
        <MemberSignature Language="C#" Value="public static int GetPresentityCount (this Microsoft.Rtc.Collaboration.Presence.RemotePresenceView remotePresenceView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetPresentityCount(class Microsoft.Rtc.Collaboration.Presence.RemotePresenceView remotePresenceView) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.RemotePresenceViewExtensions.GetPresentityCount(Microsoft.Rtc.Collaboration.Presence.RemotePresenceView)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int GetPresentityCount(Microsoft::Rtc::Collaboration::Presence::RemotePresenceView ^ remotePresenceView);" />
        <MemberSignature Language="F#" Value="static member GetPresentityCount : Microsoft.Rtc.Collaboration.Presence.RemotePresenceView -&gt; int" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.RemotePresenceViewExtensions.GetPresentityCount remotePresenceView" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="remotePresenceView" Type="Microsoft.Rtc.Collaboration.Presence.RemotePresenceView" RefType="this" />
        </Parameters>
        <Docs>
          <param name="remotePresenceView">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.RemotePresenceViewExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.RemotePresenceViewExtensions.GetPresentityCount(Microsoft.Rtc.Collaboration.Presence.RemotePresenceView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.Services" />
      </Targets>
      <Member MemberName="IsPreferredEndpointForPrivacyMigration">
        <MemberSignature Language="C#" Value="public static bool IsPreferredEndpointForPrivacyMigration (this Microsoft.Rtc.Collaboration.Presence.Services services, string endpointGruu);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPreferredEndpointForPrivacyMigration(class Microsoft.Rtc.Collaboration.Presence.Services services, string endpointGruu) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Presence.ServiceExtensions.IsPreferredEndpointForPrivacyMigration(Microsoft.Rtc.Collaboration.Presence.Services,System.String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsPreferredEndpointForPrivacyMigration(Microsoft::Rtc::Collaboration::Presence::Services ^ services, System::String ^ endpointGruu);" />
        <MemberSignature Language="F#" Value="static member IsPreferredEndpointForPrivacyMigration : Microsoft.Rtc.Collaboration.Presence.Services * string -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.Presence.ServiceExtensions.IsPreferredEndpointForPrivacyMigration (services, endpointGruu)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="services" Type="Microsoft.Rtc.Collaboration.Presence.Services" RefType="this" />
          <Parameter Name="endpointGruu" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="services">To be added.</param>
          <param name="endpointGruu">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Presence.ServiceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Presence.ServiceExtensions.IsPreferredEndpointForPrivacyMigration(Microsoft.Rtc.Collaboration.Presence.Services,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.PresenceSubscriptionStateChangedEventArgs" />
      </Targets>
      <Member MemberName="GetTransitionStateSubReason">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.SubscriptionStateTransitionSubReason GetTransitionStateSubReason (this Microsoft.Rtc.Collaboration.Presence.PresenceSubscriptionStateChangedEventArgs eventArgs);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Rtc.Internal.Collaboration.SubscriptionStateTransitionSubReason GetTransitionStateSubReason(class Microsoft.Rtc.Collaboration.Presence.PresenceSubscriptionStateChangedEventArgs eventArgs) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.PresenceSubscriptionStateChangedEventArgsExtensions.GetTransitionStateSubReason(Microsoft.Rtc.Collaboration.Presence.PresenceSubscriptionStateChangedEventArgs)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTransitionStateSubReason (eventArgs As PresenceSubscriptionStateChangedEventArgs) As SubscriptionStateTransitionSubReason" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::SubscriptionStateTransitionSubReason GetTransitionStateSubReason(Microsoft::Rtc::Collaboration::Presence::PresenceSubscriptionStateChangedEventArgs ^ eventArgs);" />
        <MemberSignature Language="F#" Value="static member GetTransitionStateSubReason : Microsoft.Rtc.Collaboration.Presence.PresenceSubscriptionStateChangedEventArgs -&gt; Microsoft.Rtc.Internal.Collaboration.SubscriptionStateTransitionSubReason" Usage="Microsoft.Rtc.Internal.Collaboration.PresenceSubscriptionStateChangedEventArgsExtensions.GetTransitionStateSubReason eventArgs" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.SubscriptionStateTransitionSubReason</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="eventArgs" Type="Microsoft.Rtc.Collaboration.Presence.PresenceSubscriptionStateChangedEventArgs" RefType="this" />
        </Parameters>
        <Docs>
          <param name="eventArgs">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.PresenceSubscriptionStateChangedEventArgsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.PresenceSubscriptionStateChangedEventArgsExtensions.GetTransitionStateSubReason(Microsoft.Rtc.Collaboration.Presence.PresenceSubscriptionStateChangedEventArgs)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings" />
      </Targets>
      <Member MemberName="EnableBackup">
        <MemberSignature Language="C#" Value="public static void EnableBackup (this Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings settings);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableBackup(class Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings settings) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions.EnableBackup(Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub EnableBackup (settings As ProvisionedApplicationPlatformSettings)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EnableBackup(Microsoft::Rtc::Collaboration::ProvisionedApplicationPlatformSettings ^ settings);" />
        <MemberSignature Language="F#" Value="static member EnableBackup : Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions.EnableBackup settings" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="settings" Type="Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings" RefType="this" />
        </Parameters>
        <Docs>
          <param name="settings">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions.EnableBackup(Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings" />
      </Targets>
      <Member MemberName="SetDeploymentRole">
        <MemberSignature Language="C#" Value="public static void SetDeploymentRole (this Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings settings, Microsoft.Rtc.Internal.Collaboration.DeploymentRole role);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDeploymentRole(class Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings settings, valuetype Microsoft.Rtc.Internal.Collaboration.DeploymentRole role) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions.SetDeploymentRole(Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings,Microsoft.Rtc.Internal.Collaboration.DeploymentRole)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDeploymentRole (settings As ProvisionedApplicationPlatformSettings, role As DeploymentRole)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetDeploymentRole(Microsoft::Rtc::Collaboration::ProvisionedApplicationPlatformSettings ^ settings, Microsoft::Rtc::Internal::Collaboration::DeploymentRole role);" />
        <MemberSignature Language="F#" Value="static member SetDeploymentRole : Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings * Microsoft.Rtc.Internal.Collaboration.DeploymentRole -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions.SetDeploymentRole (settings, role)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="settings" Type="Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings" RefType="this" />
          <Parameter Name="role" Type="Microsoft.Rtc.Internal.Collaboration.DeploymentRole" />
        </Parameters>
        <Docs>
          <param name="settings">To be added.</param>
          <param name="role">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions.SetDeploymentRole(Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings,Microsoft.Rtc.Internal.Collaboration.DeploymentRole)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings" />
      </Targets>
      <Member MemberName="SetTraceFilterConfiguration">
        <MemberSignature Language="C#" Value="public static void SetTraceFilterConfiguration (this Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings settings, Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration traceFilterConguration);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTraceFilterConfiguration(class Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings settings, class Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration traceFilterConguration) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions.SetTraceFilterConfiguration(Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings,Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetTraceFilterConfiguration (settings As ProvisionedApplicationPlatformSettings, traceFilterConguration As ITraceFilterConfiguration)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetTraceFilterConfiguration(Microsoft::Rtc::Collaboration::ProvisionedApplicationPlatformSettings ^ settings, Microsoft::Rtc::Internal::Signaling::ITraceFilterConfiguration ^ traceFilterConguration);" />
        <MemberSignature Language="F#" Value="static member SetTraceFilterConfiguration : Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings * Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions.SetTraceFilterConfiguration (settings, traceFilterConguration)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="settings" Type="Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings" RefType="this" />
          <Parameter Name="traceFilterConguration" Type="Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration" />
        </Parameters>
        <Docs>
          <param name="settings">To be added.</param>
          <param name="traceFilterConguration">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions.SetTraceFilterConfiguration(Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings,Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings" />
      </Targets>
      <Member MemberName="SetUseLocalRegistrar">
        <MemberSignature Language="C#" Value="public static void SetUseLocalRegistrar (this Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings settings, bool useLocalRegistrar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetUseLocalRegistrar(class Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings settings, bool useLocalRegistrar) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions.SetUseLocalRegistrar(Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetUseLocalRegistrar (settings As ProvisionedApplicationPlatformSettings, useLocalRegistrar As Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetUseLocalRegistrar(Microsoft::Rtc::Collaboration::ProvisionedApplicationPlatformSettings ^ settings, bool useLocalRegistrar);" />
        <MemberSignature Language="F#" Value="static member SetUseLocalRegistrar : Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions.SetUseLocalRegistrar (settings, useLocalRegistrar)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="settings" Type="Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings" RefType="this" />
          <Parameter Name="useLocalRegistrar" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="settings">To be added.</param>
          <param name="useLocalRegistrar">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ProvisionedApplicationPlatformSettingsExtensions.SetUseLocalRegistrar(Microsoft.Rtc.Collaboration.ProvisionedApplicationPlatformSettings,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.Presence.ProvisioningData" />
      </Targets>
      <Member MemberName="GetIfPrivacyModeEnabled">
        <MemberSignature Language="C#" Value="public static bool GetIfPrivacyModeEnabled (this Microsoft.Rtc.Collaboration.Presence.ProvisioningData provisioningData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIfPrivacyModeEnabled(class Microsoft.Rtc.Collaboration.Presence.ProvisioningData provisioningData) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ProvisioningDataExtensions.GetIfPrivacyModeEnabled(Microsoft.Rtc.Collaboration.Presence.ProvisioningData)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool GetIfPrivacyModeEnabled(Microsoft::Rtc::Collaboration::Presence::ProvisioningData ^ provisioningData);" />
        <MemberSignature Language="F#" Value="static member GetIfPrivacyModeEnabled : Microsoft.Rtc.Collaboration.Presence.ProvisioningData -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.ProvisioningDataExtensions.GetIfPrivacyModeEnabled provisioningData" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="provisioningData" Type="Microsoft.Rtc.Collaboration.Presence.ProvisioningData" RefType="this" />
        </Parameters>
        <Docs>
          <param name="provisioningData">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ProvisioningDataExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ProvisioningDataExtensions.GetIfPrivacyModeEnabled(Microsoft.Rtc.Collaboration.Presence.ProvisioningData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.SendInstantMessageResult" />
      </Targets>
      <Member MemberName="GetDiagnosticHeader">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Signaling.DiagnosticHeader GetDiagnosticHeader (this Microsoft.Rtc.Collaboration.SendInstantMessageResult sendImMessageResult);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Signaling.DiagnosticHeader GetDiagnosticHeader(class Microsoft.Rtc.Collaboration.SendInstantMessageResult sendImMessageResult) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.SendInstantMessageResultExtensions.GetDiagnosticHeader(Microsoft.Rtc.Collaboration.SendInstantMessageResult)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiagnosticHeader (sendImMessageResult As SendInstantMessageResult) As DiagnosticHeader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Signaling::DiagnosticHeader ^ GetDiagnosticHeader(Microsoft::Rtc::Collaboration::SendInstantMessageResult ^ sendImMessageResult);" />
        <MemberSignature Language="F#" Value="static member GetDiagnosticHeader : Microsoft.Rtc.Collaboration.SendInstantMessageResult -&gt; Microsoft.Rtc.Signaling.DiagnosticHeader" Usage="Microsoft.Rtc.Internal.Collaboration.SendInstantMessageResultExtensions.GetDiagnosticHeader sendImMessageResult" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Signaling.DiagnosticHeader</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="sendImMessageResult" Type="Microsoft.Rtc.Collaboration.SendInstantMessageResult" RefType="this" />
        </Parameters>
        <Docs>
          <param name="sendImMessageResult">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.SendInstantMessageResultExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.SendInstantMessageResultExtensions.GetDiagnosticHeader(Microsoft.Rtc.Collaboration.SendInstantMessageResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ServerPlatformSettings" />
      </Targets>
      <Member MemberName="EnableHighAvailability">
        <MemberSignature Language="C#" Value="public static void EnableHighAvailability (this Microsoft.Rtc.Collaboration.ServerPlatformSettings settings);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableHighAvailability(class Microsoft.Rtc.Collaboration.ServerPlatformSettings settings) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions.EnableHighAvailability(Microsoft.Rtc.Collaboration.ServerPlatformSettings)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub EnableHighAvailability (settings As ServerPlatformSettings)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EnableHighAvailability(Microsoft::Rtc::Collaboration::ServerPlatformSettings ^ settings);" />
        <MemberSignature Language="F#" Value="static member EnableHighAvailability : Microsoft.Rtc.Collaboration.ServerPlatformSettings -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions.EnableHighAvailability settings" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="settings" Type="Microsoft.Rtc.Collaboration.ServerPlatformSettings" RefType="this" />
        </Parameters>
        <Docs>
          <param name="settings">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions.EnableHighAvailability(Microsoft.Rtc.Collaboration.ServerPlatformSettings)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ServerPlatformSettings" />
      </Targets>
      <Member MemberName="SetDomainsForAlternateCallScreening">
        <MemberSignature Language="C#" Value="public static void SetDomainsForAlternateCallScreening (this Microsoft.Rtc.Collaboration.ServerPlatformSettings platformSettings, System.Collections.Generic.IEnumerable&lt;string&gt; allowedDomains);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDomainsForAlternateCallScreening(class Microsoft.Rtc.Collaboration.ServerPlatformSettings platformSettings, class System.Collections.Generic.IEnumerable`1&lt;string&gt; allowedDomains) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions.SetDomainsForAlternateCallScreening(Microsoft.Rtc.Collaboration.ServerPlatformSettings,System.Collections.Generic.IEnumerable{System.String})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDomainsForAlternateCallScreening (platformSettings As ServerPlatformSettings, allowedDomains As IEnumerable(Of String))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetDomainsForAlternateCallScreening(Microsoft::Rtc::Collaboration::ServerPlatformSettings ^ platformSettings, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ allowedDomains);" />
        <MemberSignature Language="F#" Value="static member SetDomainsForAlternateCallScreening : Microsoft.Rtc.Collaboration.ServerPlatformSettings * seq&lt;string&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions.SetDomainsForAlternateCallScreening (platformSettings, allowedDomains)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platformSettings" Type="Microsoft.Rtc.Collaboration.ServerPlatformSettings" RefType="this" />
          <Parameter Name="allowedDomains" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        </Parameters>
        <Docs>
          <param name="platformSettings">To be added.</param>
          <param name="allowedDomains">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions.SetDomainsForAlternateCallScreening(Microsoft.Rtc.Collaboration.ServerPlatformSettings,System.Collections.Generic.IEnumerable{System.String})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ServerPlatformSettings" />
      </Targets>
      <Member MemberName="SetTraceFilterConfiguration">
        <MemberSignature Language="C#" Value="public static void SetTraceFilterConfiguration (this Microsoft.Rtc.Collaboration.ServerPlatformSettings settings, Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration traceFilterConguration);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTraceFilterConfiguration(class Microsoft.Rtc.Collaboration.ServerPlatformSettings settings, class Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration traceFilterConguration) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions.SetTraceFilterConfiguration(Microsoft.Rtc.Collaboration.ServerPlatformSettings,Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetTraceFilterConfiguration (settings As ServerPlatformSettings, traceFilterConguration As ITraceFilterConfiguration)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetTraceFilterConfiguration(Microsoft::Rtc::Collaboration::ServerPlatformSettings ^ settings, Microsoft::Rtc::Internal::Signaling::ITraceFilterConfiguration ^ traceFilterConguration);" />
        <MemberSignature Language="F#" Value="static member SetTraceFilterConfiguration : Microsoft.Rtc.Collaboration.ServerPlatformSettings * Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions.SetTraceFilterConfiguration (settings, traceFilterConguration)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="settings" Type="Microsoft.Rtc.Collaboration.ServerPlatformSettings" RefType="this" />
          <Parameter Name="traceFilterConguration" Type="Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration" />
        </Parameters>
        <Docs>
          <param name="settings">To be added.</param>
          <param name="traceFilterConguration">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions.SetTraceFilterConfiguration(Microsoft.Rtc.Collaboration.ServerPlatformSettings,Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.ServerPlatformSettings" />
      </Targets>
      <Member MemberName="SetTrustedDomainModeForTls">
        <MemberSignature Language="C#" Value="public static void SetTrustedDomainModeForTls (this Microsoft.Rtc.Collaboration.ServerPlatformSettings settings, Microsoft.Rtc.Collaboration.TrustedDomainMode trustedDomainMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTrustedDomainModeForTls(class Microsoft.Rtc.Collaboration.ServerPlatformSettings settings, valuetype Microsoft.Rtc.Collaboration.TrustedDomainMode trustedDomainMode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions.SetTrustedDomainModeForTls(Microsoft.Rtc.Collaboration.ServerPlatformSettings,Microsoft.Rtc.Collaboration.TrustedDomainMode)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetTrustedDomainModeForTls(Microsoft::Rtc::Collaboration::ServerPlatformSettings ^ settings, Microsoft::Rtc::Collaboration::TrustedDomainMode trustedDomainMode);" />
        <MemberSignature Language="F#" Value="static member SetTrustedDomainModeForTls : Microsoft.Rtc.Collaboration.ServerPlatformSettings * Microsoft.Rtc.Collaboration.TrustedDomainMode -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions.SetTrustedDomainModeForTls (settings, trustedDomainMode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="settings" Type="Microsoft.Rtc.Collaboration.ServerPlatformSettings" RefType="this" />
          <Parameter Name="trustedDomainMode" Type="Microsoft.Rtc.Collaboration.TrustedDomainMode" />
        </Parameters>
        <Docs>
          <param name="settings">To be added.</param>
          <param name="trustedDomainMode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.ServerPlatformSettingsExtensions.SetTrustedDomainModeForTls(Microsoft.Rtc.Collaboration.ServerPlatformSettings,Microsoft.Rtc.Collaboration.TrustedDomainMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="System.Threading.Tasks.TaskCompletionSource`1" />
      </Targets>
      <Member MemberName="CompleteFromTask">
        <MemberSignature Language="C#" Value="public static void CompleteFromTask (this System.Threading.Tasks.TaskCompletionSource&lt;object&gt; tcs, System.Threading.Tasks.Task task);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompleteFromTask(class System.Threading.Tasks.TaskCompletionSource`1&lt;object&gt; tcs, class System.Threading.Tasks.Task task) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Tasks.TaskCompletionSourceExtensions.CompleteFromTask(System.Threading.Tasks.TaskCompletionSource{System.Object},System.Threading.Tasks.Task)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CompleteFromTask(System::Threading::Tasks::TaskCompletionSource&lt;System::Object ^&gt; ^ tcs, System::Threading::Tasks::Task ^ task);" />
        <MemberSignature Language="F#" Value="static member CompleteFromTask : System.Threading.Tasks.TaskCompletionSource&lt;obj&gt; * System.Threading.Tasks.Task -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.Tasks.TaskCompletionSourceExtensions.CompleteFromTask (tcs, task)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="tcs" Type="System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;" RefType="this" />
          <Parameter Name="task" Type="System.Threading.Tasks.Task" />
        </Parameters>
        <Docs>
          <param name="tcs">To be added.</param>
          <param name="task">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Tasks.TaskCompletionSourceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Tasks.TaskCompletionSourceExtensions.CompleteFromTask(System.Threading.Tasks.TaskCompletionSource{System.Object},System.Threading.Tasks.Task)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="System.Threading.Tasks.TaskCompletionSource`1" />
      </Targets>
      <Member MemberName="CompleteFromTask&lt;TResult&gt;">
        <MemberSignature Language="C#" Value="public static void CompleteFromTask&lt;TResult&gt; (this System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt; tcs, System.Threading.Tasks.Task&lt;TResult&gt; task);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompleteFromTask&lt;TResult&gt;(class System.Threading.Tasks.TaskCompletionSource`1&lt;!!TResult&gt; tcs, class System.Threading.Tasks.Task`1&lt;!!TResult&gt; task) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Tasks.TaskCompletionSourceExtensions.CompleteFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task{``0})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CompleteFromTask(Of TResult) (tcs As TaskCompletionSource(Of TResult), task As Task(Of TResult))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CompleteFromTask(System::Threading::Tasks::TaskCompletionSource&lt;TResult&gt; ^ tcs, System::Threading::Tasks::Task&lt;TResult&gt; ^ task);" />
        <MemberSignature Language="F#" Value="static member CompleteFromTask : System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; * System.Threading.Tasks.Task&lt;'Result&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.Tasks.TaskCompletionSourceExtensions.CompleteFromTask (tcs, task)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TResult" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="tcs" Type="System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;" RefType="this" />
          <Parameter Name="task" Type="System.Threading.Tasks.Task&lt;TResult&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TResult">To be added.</typeparam>
          <param name="tcs">To be added.</param>
          <param name="task">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Tasks.TaskCompletionSourceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Tasks.TaskCompletionSourceExtensions.CompleteFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="System.Threading.Tasks.TaskCompletionSource`1" />
      </Targets>
      <Member MemberName="CompleteFromTask&lt;TResult,UResult&gt;">
        <MemberSignature Language="C#" Value="public static void CompleteFromTask&lt;TResult,UResult&gt; (this System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt; tcs, System.Threading.Tasks.Task&lt;UResult&gt; task, Func&lt;UResult,TResult&gt; resultConversionDelegate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompleteFromTask&lt;TResult, UResult&gt;(class System.Threading.Tasks.TaskCompletionSource`1&lt;!!TResult&gt; tcs, class System.Threading.Tasks.Task`1&lt;!!UResult&gt; task, class System.Func`2&lt;!!UResult, !!TResult&gt; resultConversionDelegate) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Tasks.TaskCompletionSourceExtensions.CompleteFromTask``2(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task{``1},System.Func{``1,``0})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CompleteFromTask(Of TResult, UResult) (tcs As TaskCompletionSource(Of TResult), task As Task(Of UResult), resultConversionDelegate As Func(Of UResult, TResult))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename UResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CompleteFromTask(System::Threading::Tasks::TaskCompletionSource&lt;TResult&gt; ^ tcs, System::Threading::Tasks::Task&lt;UResult&gt; ^ task, Func&lt;UResult, TResult&gt; ^ resultConversionDelegate);" />
        <MemberSignature Language="F#" Value="static member CompleteFromTask : System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; * System.Threading.Tasks.Task&lt;'UResult&gt; * Func&lt;'UResult, 'Result&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.Tasks.TaskCompletionSourceExtensions.CompleteFromTask (tcs, task, resultConversionDelegate)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TResult" />
          <TypeParameter Name="UResult" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="tcs" Type="System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;" RefType="this" />
          <Parameter Name="task" Type="System.Threading.Tasks.Task&lt;UResult&gt;" />
          <Parameter Name="resultConversionDelegate" Type="System.Func&lt;UResult,TResult&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TResult">To be added.</typeparam>
          <typeparam name="UResult">To be added.</typeparam>
          <param name="tcs">To be added.</param>
          <param name="task">To be added.</param>
          <param name="resultConversionDelegate">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Tasks.TaskCompletionSourceExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Tasks.TaskCompletionSourceExtensions.CompleteFromTask``2(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task{``1},System.Func{``1,``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Threading.Tasks.Task" />
      </Targets>
      <Member MemberName="AsAsyncResult">
        <MemberSignature Language="C#" Value="public static IAsyncResult AsAsyncResult (this System.Threading.Tasks.Task task, AsyncCallback callback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult AsAsyncResult(class System.Threading.Tasks.Task task, class System.AsyncCallback callback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Tasks.TaskExtensions.AsAsyncResult(System.Threading.Tasks.Task,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ AsAsyncResult(System::Threading::Tasks::Task ^ task, AsyncCallback ^ callback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member AsAsyncResult : System.Threading.Tasks.Task * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.Tasks.TaskExtensions.AsAsyncResult (task, callback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="task" Type="System.Threading.Tasks.Task" RefType="this" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="task">To be added.</param>
          <param name="callback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Tasks.TaskExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Tasks.TaskExtensions.AsAsyncResult(System.Threading.Tasks.Task,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Threading.Tasks.Task`1" />
      </Targets>
      <Member MemberName="AsAsyncResult&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static IAsyncResult AsAsyncResult&lt;T&gt; (this System.Threading.Tasks.Task&lt;T&gt; task, AsyncCallback callback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult AsAsyncResult&lt;T&gt;(class System.Threading.Tasks.Task`1&lt;!!T&gt; task, class System.AsyncCallback callback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.Tasks.TaskExtensions.AsAsyncResult``1(System.Threading.Tasks.Task{``0},System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsAsyncResult(Of T) (task As Task(Of T), callback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ AsAsyncResult(System::Threading::Tasks::Task&lt;T&gt; ^ task, AsyncCallback ^ callback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member AsAsyncResult : System.Threading.Tasks.Task&lt;'T&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.Tasks.TaskExtensions.AsAsyncResult (task, callback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="task" Type="System.Threading.Tasks.Task&lt;T&gt;" RefType="this" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="task">To be added.</param>
          <param name="callback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.Tasks.TaskExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.Tasks.TaskExtensions.AsAsyncResult``1(System.Threading.Tasks.Task{``0},System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.UserEndpoint" />
      </Targets>
      <Member MemberName="DisableServerSideConversationHistory">
        <MemberSignature Language="C#" Value="public static void DisableServerSideConversationHistory (this Microsoft.Rtc.Collaboration.UserEndpoint endpoint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableServerSideConversationHistory(class Microsoft.Rtc.Collaboration.UserEndpoint endpoint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.DisableServerSideConversationHistory(Microsoft.Rtc.Collaboration.UserEndpoint)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DisableServerSideConversationHistory (endpoint As UserEndpoint)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void DisableServerSideConversationHistory(Microsoft::Rtc::Collaboration::UserEndpoint ^ endpoint);" />
        <MemberSignature Language="F#" Value="static member DisableServerSideConversationHistory : Microsoft.Rtc.Collaboration.UserEndpoint -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.DisableServerSideConversationHistory endpoint" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.UserEndpoint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.DisableServerSideConversationHistory(Microsoft.Rtc.Collaboration.UserEndpoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.UserEndpoint" />
      </Targets>
      <Member MemberName="EnableServerSideConversationHistory">
        <MemberSignature Language="C#" Value="public static void EnableServerSideConversationHistory (this Microsoft.Rtc.Collaboration.UserEndpoint endpoint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableServerSideConversationHistory(class Microsoft.Rtc.Collaboration.UserEndpoint endpoint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.EnableServerSideConversationHistory(Microsoft.Rtc.Collaboration.UserEndpoint)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub EnableServerSideConversationHistory (endpoint As UserEndpoint)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EnableServerSideConversationHistory(Microsoft::Rtc::Collaboration::UserEndpoint ^ endpoint);" />
        <MemberSignature Language="F#" Value="static member EnableServerSideConversationHistory : Microsoft.Rtc.Collaboration.UserEndpoint -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.EnableServerSideConversationHistory endpoint" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.UserEndpoint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.EnableServerSideConversationHistory(Microsoft.Rtc.Collaboration.UserEndpoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.UserEndpoint" />
      </Targets>
      <Member MemberName="GetAcpInformation">
        <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Internal.Collaboration.AcpInformation&gt; GetAcpInformation (this Microsoft.Rtc.Collaboration.UserEndpoint endpoint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Rtc.Internal.Collaboration.AcpInformation&gt; GetAcpInformation(class Microsoft.Rtc.Collaboration.UserEndpoint endpoint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetAcpInformation(Microsoft.Rtc.Collaboration.UserEndpoint)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAcpInformation (endpoint As UserEndpoint) As Collection(Of AcpInformation)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::ObjectModel::Collection&lt;Microsoft::Rtc::Internal::Collaboration::AcpInformation ^&gt; ^ GetAcpInformation(Microsoft::Rtc::Collaboration::UserEndpoint ^ endpoint);" />
        <MemberSignature Language="F#" Value="static member GetAcpInformation : Microsoft.Rtc.Collaboration.UserEndpoint -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Internal.Collaboration.AcpInformation&gt;" Usage="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetAcpInformation endpoint" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Internal.Collaboration.AcpInformation&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.UserEndpoint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetAcpInformation(Microsoft.Rtc.Collaboration.UserEndpoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.UserEndpoint" />
      </Targets>
      <Member MemberName="GetDefaultAcpInformation">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.AcpInformation GetDefaultAcpInformation (this Microsoft.Rtc.Collaboration.UserEndpoint endpoint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Collaboration.AcpInformation GetDefaultAcpInformation(class Microsoft.Rtc.Collaboration.UserEndpoint endpoint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetDefaultAcpInformation(Microsoft.Rtc.Collaboration.UserEndpoint)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultAcpInformation (endpoint As UserEndpoint) As AcpInformation" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::AcpInformation ^ GetDefaultAcpInformation(Microsoft::Rtc::Collaboration::UserEndpoint ^ endpoint);" />
        <MemberSignature Language="F#" Value="static member GetDefaultAcpInformation : Microsoft.Rtc.Collaboration.UserEndpoint -&gt; Microsoft.Rtc.Internal.Collaboration.AcpInformation" Usage="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetDefaultAcpInformation endpoint" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.AcpInformation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.UserEndpoint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetDefaultAcpInformation(Microsoft.Rtc.Collaboration.UserEndpoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.UserEndpoint" />
      </Targets>
      <Member MemberName="GetLastRegistrationTime">
        <MemberSignature Language="C#" Value="public static DateTime GetLastRegistrationTime (this Microsoft.Rtc.Collaboration.UserEndpoint endpoint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime GetLastRegistrationTime(class Microsoft.Rtc.Collaboration.UserEndpoint endpoint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetLastRegistrationTime(Microsoft.Rtc.Collaboration.UserEndpoint)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLastRegistrationTime (endpoint As UserEndpoint) As DateTime" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static DateTime GetLastRegistrationTime(Microsoft::Rtc::Collaboration::UserEndpoint ^ endpoint);" />
        <MemberSignature Language="F#" Value="static member GetLastRegistrationTime : Microsoft.Rtc.Collaboration.UserEndpoint -&gt; DateTime" Usage="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetLastRegistrationTime endpoint" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.DateTime</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.UserEndpoint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetLastRegistrationTime(Microsoft.Rtc.Collaboration.UserEndpoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.UserEndpoint" />
      </Targets>
      <Member MemberName="GetServerSideConversationHistory">
        <MemberSignature Language="C#" Value="public static bool GetServerSideConversationHistory (this Microsoft.Rtc.Collaboration.UserEndpoint endpoint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetServerSideConversationHistory(class Microsoft.Rtc.Collaboration.UserEndpoint endpoint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetServerSideConversationHistory(Microsoft.Rtc.Collaboration.UserEndpoint)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServerSideConversationHistory (endpoint As UserEndpoint) As Boolean" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool GetServerSideConversationHistory(Microsoft::Rtc::Collaboration::UserEndpoint ^ endpoint);" />
        <MemberSignature Language="F#" Value="static member GetServerSideConversationHistory : Microsoft.Rtc.Collaboration.UserEndpoint -&gt; bool" Usage="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetServerSideConversationHistory endpoint" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.UserEndpoint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetServerSideConversationHistory(Microsoft.Rtc.Collaboration.UserEndpoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.UserEndpoint" />
      </Targets>
      <Member MemberName="GetVoiceDeploymentMode">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Collaboration.VoiceDeploymentMode GetVoiceDeploymentMode (this Microsoft.Rtc.Collaboration.UserEndpoint endpoint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Rtc.Internal.Collaboration.VoiceDeploymentMode GetVoiceDeploymentMode(class Microsoft.Rtc.Collaboration.UserEndpoint endpoint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetVoiceDeploymentMode(Microsoft.Rtc.Collaboration.UserEndpoint)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVoiceDeploymentMode (endpoint As UserEndpoint) As VoiceDeploymentMode" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Collaboration::VoiceDeploymentMode GetVoiceDeploymentMode(Microsoft::Rtc::Collaboration::UserEndpoint ^ endpoint);" />
        <MemberSignature Language="F#" Value="static member GetVoiceDeploymentMode : Microsoft.Rtc.Collaboration.UserEndpoint -&gt; Microsoft.Rtc.Internal.Collaboration.VoiceDeploymentMode" Usage="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetVoiceDeploymentMode endpoint" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Collaboration.VoiceDeploymentMode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.UserEndpoint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.GetVoiceDeploymentMode(Microsoft.Rtc.Collaboration.UserEndpoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.UserEndpoint" />
      </Targets>
      <Member MemberName="StartMigrationOfLocalOwnerIfApplicable">
        <MemberSignature Language="C#" Value="public static void StartMigrationOfLocalOwnerIfApplicable (this Microsoft.Rtc.Collaboration.UserEndpoint endpoint, bool skipPreferredEndpoint = false);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartMigrationOfLocalOwnerIfApplicable(class Microsoft.Rtc.Collaboration.UserEndpoint endpoint, bool skipPreferredEndpoint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.StartMigrationOfLocalOwnerIfApplicable(Microsoft.Rtc.Collaboration.UserEndpoint,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StartMigrationOfLocalOwnerIfApplicable (endpoint As UserEndpoint, Optional skipPreferredEndpoint As Boolean = false)" />
        <MemberSignature Language="F#" Value="static member StartMigrationOfLocalOwnerIfApplicable : Microsoft.Rtc.Collaboration.UserEndpoint * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.StartMigrationOfLocalOwnerIfApplicable (endpoint, skipPreferredEndpoint)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Collaboration.UserEndpoint" RefType="this" />
          <Parameter Name="skipPreferredEndpoint" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="skipPreferredEndpoint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointExtensions.StartMigrationOfLocalOwnerIfApplicable(Microsoft.Rtc.Collaboration.UserEndpoint,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.UserEndpointPresenceServices" />
      </Targets>
      <Member MemberName="BeginUpdateEndpointCapabilities">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginUpdateEndpointCapabilities (this Microsoft.Rtc.Collaboration.UserEndpointPresenceServices presenceServices, Microsoft.Rtc.Collaboration.PreferredServiceCapabilities preferredCapabilities, bool autoAcceptForTextSupported, string publisherGruu, string publisherEpid, AsyncCallback callback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginUpdateEndpointCapabilities(class Microsoft.Rtc.Collaboration.UserEndpointPresenceServices presenceServices, class Microsoft.Rtc.Collaboration.PreferredServiceCapabilities preferredCapabilities, bool autoAcceptForTextSupported, string publisherGruu, string publisherEpid, class System.AsyncCallback callback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointPresenceServicesExtensions.BeginUpdateEndpointCapabilities(Microsoft.Rtc.Collaboration.UserEndpointPresenceServices,Microsoft.Rtc.Collaboration.PreferredServiceCapabilities,System.Boolean,System.String,System.String,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginUpdateEndpointCapabilities (presenceServices As UserEndpointPresenceServices, preferredCapabilities As PreferredServiceCapabilities, autoAcceptForTextSupported As Boolean, publisherGruu As String, publisherEpid As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginUpdateEndpointCapabilities(Microsoft::Rtc::Collaboration::UserEndpointPresenceServices ^ presenceServices, Microsoft::Rtc::Collaboration::PreferredServiceCapabilities ^ preferredCapabilities, bool autoAcceptForTextSupported, System::String ^ publisherGruu, System::String ^ publisherEpid, AsyncCallback ^ callback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginUpdateEndpointCapabilities : Microsoft.Rtc.Collaboration.UserEndpointPresenceServices * Microsoft.Rtc.Collaboration.PreferredServiceCapabilities * bool * string * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Collaboration.UserEndpointPresenceServicesExtensions.BeginUpdateEndpointCapabilities (presenceServices, preferredCapabilities, autoAcceptForTextSupported, publisherGruu, publisherEpid, callback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="presenceServices" Type="Microsoft.Rtc.Collaboration.UserEndpointPresenceServices" RefType="this" />
          <Parameter Name="preferredCapabilities" Type="Microsoft.Rtc.Collaboration.PreferredServiceCapabilities" />
          <Parameter Name="autoAcceptForTextSupported" Type="System.Boolean" />
          <Parameter Name="publisherGruu" Type="System.String" />
          <Parameter Name="publisherEpid" Type="System.String" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="presenceServices">To be added.</param>
          <param name="preferredCapabilities">To be added.</param>
          <param name="autoAcceptForTextSupported">To be added.</param>
          <param name="publisherGruu">To be added.</param>
          <param name="publisherEpid">To be added.</param>
          <param name="callback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.UserEndpointPresenceServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointPresenceServicesExtensions.BeginUpdateEndpointCapabilities(Microsoft.Rtc.Collaboration.UserEndpointPresenceServices,Microsoft.Rtc.Collaboration.PreferredServiceCapabilities,System.Boolean,System.String,System.String,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Collaboration.UserEndpointPresenceServices" />
      </Targets>
      <Member MemberName="EndUpdateEndpointCapabilities">
        <MemberSignature Language="C#" Value="public static void EndUpdateEndpointCapabilities (this Microsoft.Rtc.Collaboration.UserEndpointPresenceServices presenceServices, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndUpdateEndpointCapabilities(class Microsoft.Rtc.Collaboration.UserEndpointPresenceServices presenceServices, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointPresenceServicesExtensions.EndUpdateEndpointCapabilities(Microsoft.Rtc.Collaboration.UserEndpointPresenceServices,System.IAsyncResult)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub EndUpdateEndpointCapabilities (presenceServices As UserEndpointPresenceServices, result As IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EndUpdateEndpointCapabilities(Microsoft::Rtc::Collaboration::UserEndpointPresenceServices ^ presenceServices, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndUpdateEndpointCapabilities : Microsoft.Rtc.Collaboration.UserEndpointPresenceServices * IAsyncResult -&gt; unit" Usage="Microsoft.Rtc.Internal.Collaboration.UserEndpointPresenceServicesExtensions.EndUpdateEndpointCapabilities (presenceServices, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="presenceServices" Type="Microsoft.Rtc.Collaboration.UserEndpointPresenceServices" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="presenceServices">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Collaboration.UserEndpointPresenceServicesExtensions" Member="M:Microsoft.Rtc.Internal.Collaboration.UserEndpointPresenceServicesExtensions.EndUpdateEndpointCapabilities(Microsoft.Rtc.Collaboration.UserEndpointPresenceServices,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.ConnectionContext" />
      </Targets>
      <Member MemberName="SetTlsTarget">
        <MemberSignature Language="C#" Value="public static void SetTlsTarget (this Microsoft.Rtc.Signaling.ConnectionContext context, string tlsTarget);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTlsTarget(class Microsoft.Rtc.Signaling.ConnectionContext context, string tlsTarget) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.ConnectionContextExtensions.SetTlsTarget(Microsoft.Rtc.Signaling.ConnectionContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetTlsTarget (context As ConnectionContext, tlsTarget As String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetTlsTarget(Microsoft::Rtc::Signaling::ConnectionContext ^ context, System::String ^ tlsTarget);" />
        <MemberSignature Language="F#" Value="static member SetTlsTarget : Microsoft.Rtc.Signaling.ConnectionContext * string -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.ConnectionContextExtensions.SetTlsTarget (context, tlsTarget)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="context" Type="Microsoft.Rtc.Signaling.ConnectionContext" RefType="this" />
          <Parameter Name="tlsTarget" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="context">To be added.</param>
          <param name="tlsTarget">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.ConnectionContextExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.ConnectionContextExtensions.SetTlsTarget(Microsoft.Rtc.Signaling.ConnectionContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.SignalingSessionEstablishOptions" />
      </Targets>
      <Member MemberName="EnableReferredByHeaderSigning">
        <MemberSignature Language="C#" Value="public static void EnableReferredByHeaderSigning (this Microsoft.Rtc.Signaling.SignalingSessionEstablishOptions options, bool enabled);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableReferredByHeaderSigning(class Microsoft.Rtc.Signaling.SignalingSessionEstablishOptions options, bool enabled) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.InternalSignalingSessionEstablishOptionsExtensions.EnableReferredByHeaderSigning(Microsoft.Rtc.Signaling.SignalingSessionEstablishOptions,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub EnableReferredByHeaderSigning (options As SignalingSessionEstablishOptions, enabled As Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EnableReferredByHeaderSigning(Microsoft::Rtc::Signaling::SignalingSessionEstablishOptions ^ options, bool enabled);" />
        <MemberSignature Language="F#" Value="static member EnableReferredByHeaderSigning : Microsoft.Rtc.Signaling.SignalingSessionEstablishOptions * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.InternalSignalingSessionEstablishOptionsExtensions.EnableReferredByHeaderSigning (options, enabled)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="options" Type="Microsoft.Rtc.Signaling.SignalingSessionEstablishOptions" RefType="this" />
          <Parameter Name="enabled" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="options">To be added.</param>
          <param name="enabled">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.InternalSignalingSessionEstablishOptionsExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.InternalSignalingSessionEstablishOptionsExtensions.EnableReferredByHeaderSigning(Microsoft.Rtc.Signaling.SignalingSessionEstablishOptions,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.SignalingSession" />
      </Targets>
      <Member MemberName="SetGrid">
        <MemberSignature Language="C#" Value="public static void SetGrid (this Microsoft.Rtc.Signaling.SignalingSession session, string grid);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetGrid(class Microsoft.Rtc.Signaling.SignalingSession session, string grid) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.InternalSignalingSessionExtensions.SetGrid(Microsoft.Rtc.Signaling.SignalingSession,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetGrid (session As SignalingSession, grid As String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetGrid(Microsoft::Rtc::Signaling::SignalingSession ^ session, System::String ^ grid);" />
        <MemberSignature Language="F#" Value="static member SetGrid : Microsoft.Rtc.Signaling.SignalingSession * string -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.InternalSignalingSessionExtensions.SetGrid (session, grid)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="session" Type="Microsoft.Rtc.Signaling.SignalingSession" RefType="this" />
          <Parameter Name="grid" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="session">To be added.</param>
          <param name="grid">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.InternalSignalingSessionExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.InternalSignalingSessionExtensions.SetGrid(Microsoft.Rtc.Signaling.SignalingSession,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.SignalingSessionSettings" />
      </Targets>
      <Member MemberName="SetRequestUri">
        <MemberSignature Language="C#" Value="public static void SetRequestUri (this Microsoft.Rtc.Signaling.SignalingSessionSettings settings, string requestUri);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRequestUri(class Microsoft.Rtc.Signaling.SignalingSessionSettings settings, string requestUri) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.InternalSignalingSessionSettingsExtensions.SetRequestUri(Microsoft.Rtc.Signaling.SignalingSessionSettings,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetRequestUri (settings As SignalingSessionSettings, requestUri As String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetRequestUri(Microsoft::Rtc::Signaling::SignalingSessionSettings ^ settings, System::String ^ requestUri);" />
        <MemberSignature Language="F#" Value="static member SetRequestUri : Microsoft.Rtc.Signaling.SignalingSessionSettings * string -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.InternalSignalingSessionSettingsExtensions.SetRequestUri (settings, requestUri)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="settings" Type="Microsoft.Rtc.Signaling.SignalingSessionSettings" RefType="this" />
          <Parameter Name="requestUri" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="settings">To be added.</param>
          <param name="requestUri">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.InternalSignalingSessionSettingsExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.InternalSignalingSessionSettingsExtensions.SetRequestUri(Microsoft.Rtc.Signaling.SignalingSessionSettings,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeAddress" />
      </Targets>
      <Member MemberName="GetUriWithoutSipPrefix">
        <MemberSignature Language="C#" Value="public static string GetUriWithoutSipPrefix (this Microsoft.Rtc.Signaling.RealTimeAddress realTimeAddress);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUriWithoutSipPrefix(class Microsoft.Rtc.Signaling.RealTimeAddress realTimeAddress) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeAddressExtensions.GetUriWithoutSipPrefix(Microsoft.Rtc.Signaling.RealTimeAddress)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetUriWithoutSipPrefix(Microsoft::Rtc::Signaling::RealTimeAddress ^ realTimeAddress);" />
        <MemberSignature Language="F#" Value="static member GetUriWithoutSipPrefix : Microsoft.Rtc.Signaling.RealTimeAddress -&gt; string" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeAddressExtensions.GetUriWithoutSipPrefix realTimeAddress" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="realTimeAddress" Type="Microsoft.Rtc.Signaling.RealTimeAddress" RefType="this" />
        </Parameters>
        <Docs>
          <param name="realTimeAddress">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeAddressExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeAddressExtensions.GetUriWithoutSipPrefix(Microsoft.Rtc.Signaling.RealTimeAddress)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="AddInDialogMessageReceivedEvent">
        <MemberSignature Language="C#" Value="public static void AddInDialogMessageReceivedEvent (this Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, EventHandler&lt;Microsoft.Rtc.Internal.Signaling.InDialogMessageReceivedEventArgs&gt; eventHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddInDialogMessageReceivedEvent(class Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, class System.EventHandler`1&lt;class Microsoft.Rtc.Internal.Signaling.InDialogMessageReceivedEventArgs&gt; eventHandler) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.AddInDialogMessageReceivedEvent(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.EventHandler{Microsoft.Rtc.Internal.Signaling.InDialogMessageReceivedEventArgs})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddInDialogMessageReceivedEvent (manager As RealTimeConnectionManager, eventHandler As EventHandler(Of InDialogMessageReceivedEventArgs))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddInDialogMessageReceivedEvent(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ manager, EventHandler&lt;Microsoft::Rtc::Internal::Signaling::InDialogMessageReceivedEventArgs ^&gt; ^ eventHandler);" />
        <MemberSignature Language="F#" Value="static member AddInDialogMessageReceivedEvent : Microsoft.Rtc.Signaling.RealTimeConnectionManager * EventHandler&lt;Microsoft.Rtc.Internal.Signaling.InDialogMessageReceivedEventArgs&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.AddInDialogMessageReceivedEvent (manager, eventHandler)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="manager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="eventHandler" Type="System.EventHandler&lt;Microsoft.Rtc.Internal.Signaling.InDialogMessageReceivedEventArgs&gt;" />
        </Parameters>
        <Docs>
          <param name="manager">To be added.</param>
          <param name="eventHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.AddInDialogMessageReceivedEvent(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.EventHandler{Microsoft.Rtc.Internal.Signaling.InDialogMessageReceivedEventArgs})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeServerConnectionManager" />
      </Targets>
      <Member MemberName="DisconnectIncomingConnections">
        <MemberSignature Language="C#" Value="public static void DisconnectIncomingConnections (this Microsoft.Rtc.Signaling.RealTimeServerConnectionManager connectionManager);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisconnectIncomingConnections(class Microsoft.Rtc.Signaling.RealTimeServerConnectionManager connectionManager) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.DisconnectIncomingConnections(Microsoft.Rtc.Signaling.RealTimeServerConnectionManager)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DisconnectIncomingConnections (connectionManager As RealTimeServerConnectionManager)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void DisconnectIncomingConnections(Microsoft::Rtc::Signaling::RealTimeServerConnectionManager ^ connectionManager);" />
        <MemberSignature Language="F#" Value="static member DisconnectIncomingConnections : Microsoft.Rtc.Signaling.RealTimeServerConnectionManager -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.DisconnectIncomingConnections connectionManager" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="connectionManager" Type="Microsoft.Rtc.Signaling.RealTimeServerConnectionManager" RefType="this" />
        </Parameters>
        <Docs>
          <param name="connectionManager">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.DisconnectIncomingConnections(Microsoft.Rtc.Signaling.RealTimeServerConnectionManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="GetTraceFilterConfiguration">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration GetTraceFilterConfiguration (this Microsoft.Rtc.Signaling.RealTimeConnectionManager manager);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration GetTraceFilterConfiguration(class Microsoft.Rtc.Signaling.RealTimeConnectionManager manager) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.GetTraceFilterConfiguration(Microsoft.Rtc.Signaling.RealTimeConnectionManager)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTraceFilterConfiguration (manager As RealTimeConnectionManager) As ITraceFilterConfiguration" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Internal::Signaling::ITraceFilterConfiguration ^ GetTraceFilterConfiguration(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ manager);" />
        <MemberSignature Language="F#" Value="static member GetTraceFilterConfiguration : Microsoft.Rtc.Signaling.RealTimeConnectionManager -&gt; Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.GetTraceFilterConfiguration manager" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="manager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
        </Parameters>
        <Docs>
          <param name="manager">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.GetTraceFilterConfiguration(Microsoft.Rtc.Signaling.RealTimeConnectionManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="RegisterConnectionConfigurationRequested">
        <MemberSignature Language="C#" Value="public static void RegisterConnectionConfigurationRequested (this Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, EventHandler&lt;Microsoft.Rtc.Internal.Signaling.ConnectionConfigurationRequestedEventArgs&gt; handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterConnectionConfigurationRequested(class Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, class System.EventHandler`1&lt;class Microsoft.Rtc.Internal.Signaling.ConnectionConfigurationRequestedEventArgs&gt; handler) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.RegisterConnectionConfigurationRequested(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.EventHandler{Microsoft.Rtc.Internal.Signaling.ConnectionConfigurationRequestedEventArgs})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RegisterConnectionConfigurationRequested (manager As RealTimeConnectionManager, handler As EventHandler(Of ConnectionConfigurationRequestedEventArgs))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void RegisterConnectionConfigurationRequested(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ manager, EventHandler&lt;Microsoft::Rtc::Internal::Signaling::ConnectionConfigurationRequestedEventArgs ^&gt; ^ handler);" />
        <MemberSignature Language="F#" Value="static member RegisterConnectionConfigurationRequested : Microsoft.Rtc.Signaling.RealTimeConnectionManager * EventHandler&lt;Microsoft.Rtc.Internal.Signaling.ConnectionConfigurationRequestedEventArgs&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.RegisterConnectionConfigurationRequested (manager, handler)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="manager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="handler" Type="System.EventHandler&lt;Microsoft.Rtc.Internal.Signaling.ConnectionConfigurationRequestedEventArgs&gt;" />
        </Parameters>
        <Docs>
          <param name="manager">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.RegisterConnectionConfigurationRequested(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.EventHandler{Microsoft.Rtc.Internal.Signaling.ConnectionConfigurationRequestedEventArgs})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="RemoveInDialogMessageReceivedEvent">
        <MemberSignature Language="C#" Value="public static void RemoveInDialogMessageReceivedEvent (this Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, EventHandler&lt;Microsoft.Rtc.Internal.Signaling.InDialogMessageReceivedEventArgs&gt; eventHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveInDialogMessageReceivedEvent(class Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, class System.EventHandler`1&lt;class Microsoft.Rtc.Internal.Signaling.InDialogMessageReceivedEventArgs&gt; eventHandler) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.RemoveInDialogMessageReceivedEvent(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.EventHandler{Microsoft.Rtc.Internal.Signaling.InDialogMessageReceivedEventArgs})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RemoveInDialogMessageReceivedEvent (manager As RealTimeConnectionManager, eventHandler As EventHandler(Of InDialogMessageReceivedEventArgs))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void RemoveInDialogMessageReceivedEvent(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ manager, EventHandler&lt;Microsoft::Rtc::Internal::Signaling::InDialogMessageReceivedEventArgs ^&gt; ^ eventHandler);" />
        <MemberSignature Language="F#" Value="static member RemoveInDialogMessageReceivedEvent : Microsoft.Rtc.Signaling.RealTimeConnectionManager * EventHandler&lt;Microsoft.Rtc.Internal.Signaling.InDialogMessageReceivedEventArgs&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.RemoveInDialogMessageReceivedEvent (manager, eventHandler)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="manager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="eventHandler" Type="System.EventHandler&lt;Microsoft.Rtc.Internal.Signaling.InDialogMessageReceivedEventArgs&gt;" />
        </Parameters>
        <Docs>
          <param name="manager">To be added.</param>
          <param name="eventHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.RemoveInDialogMessageReceivedEvent(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.EventHandler{Microsoft.Rtc.Internal.Signaling.InDialogMessageReceivedEventArgs})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="SetConnectionFailoverTimeout">
        <MemberSignature Language="C#" Value="public static void SetConnectionFailoverTimeout (this Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, int timeout);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetConnectionFailoverTimeout(class Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, int32 timeout) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetConnectionFailoverTimeout(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetConnectionFailoverTimeout (manager As RealTimeConnectionManager, timeout As Integer)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetConnectionFailoverTimeout(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ manager, int timeout);" />
        <MemberSignature Language="F#" Value="static member SetConnectionFailoverTimeout : Microsoft.Rtc.Signaling.RealTimeConnectionManager * int -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetConnectionFailoverTimeout (manager, timeout)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="manager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="timeout" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="manager">To be added.</param>
          <param name="timeout">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetConnectionFailoverTimeout(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="SetCustomSipConnection">
        <MemberSignature Language="C#" Value="public static void SetCustomSipConnection (this Microsoft.Rtc.Signaling.RealTimeConnectionManager connectionManager, Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.GetCustomSipConnectionDelegate getCustomSipConnection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCustomSipConnection(class Microsoft.Rtc.Signaling.RealTimeConnectionManager connectionManager, class Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions/GetCustomSipConnectionDelegate getCustomSipConnection) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetCustomSipConnection(Microsoft.Rtc.Signaling.RealTimeConnectionManager,Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.GetCustomSipConnectionDelegate)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetCustomSipConnection (connectionManager As RealTimeConnectionManager, getCustomSipConnection As RealTimeConnectionManagerExtensions.GetCustomSipConnectionDelegate)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetCustomSipConnection(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ connectionManager, Microsoft::Rtc::Internal::Signaling::RealTimeConnectionManagerExtensions::GetCustomSipConnectionDelegate ^ getCustomSipConnection);" />
        <MemberSignature Language="F#" Value="static member SetCustomSipConnection : Microsoft.Rtc.Signaling.RealTimeConnectionManager * Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.GetCustomSipConnectionDelegate -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetCustomSipConnection (connectionManager, getCustomSipConnection)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="connectionManager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="getCustomSipConnection" Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions+GetCustomSipConnectionDelegate" />
        </Parameters>
        <Docs>
          <param name="connectionManager">To be added.</param>
          <param name="getCustomSipConnection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetCustomSipConnection(Microsoft.Rtc.Signaling.RealTimeConnectionManager,Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.GetCustomSipConnectionDelegate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="SetDiagnosticsMode">
        <MemberSignature Language="C#" Value="public static void SetDiagnosticsMode (this Microsoft.Rtc.Signaling.RealTimeConnectionManager connectionManager, Microsoft.Rtc.Internal.Signaling.ConnectionManagerDiagnosticsMode diagnosticsMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDiagnosticsMode(class Microsoft.Rtc.Signaling.RealTimeConnectionManager connectionManager, valuetype Microsoft.Rtc.Internal.Signaling.ConnectionManagerDiagnosticsMode diagnosticsMode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetDiagnosticsMode(Microsoft.Rtc.Signaling.RealTimeConnectionManager,Microsoft.Rtc.Internal.Signaling.ConnectionManagerDiagnosticsMode)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDiagnosticsMode (connectionManager As RealTimeConnectionManager, diagnosticsMode As ConnectionManagerDiagnosticsMode)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetDiagnosticsMode(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ connectionManager, Microsoft::Rtc::Internal::Signaling::ConnectionManagerDiagnosticsMode diagnosticsMode);" />
        <MemberSignature Language="F#" Value="static member SetDiagnosticsMode : Microsoft.Rtc.Signaling.RealTimeConnectionManager * Microsoft.Rtc.Internal.Signaling.ConnectionManagerDiagnosticsMode -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetDiagnosticsMode (connectionManager, diagnosticsMode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="connectionManager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="diagnosticsMode" Type="Microsoft.Rtc.Internal.Signaling.ConnectionManagerDiagnosticsMode" />
        </Parameters>
        <Docs>
          <param name="connectionManager">To be added.</param>
          <param name="diagnosticsMode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetDiagnosticsMode(Microsoft.Rtc.Signaling.RealTimeConnectionManager,Microsoft.Rtc.Internal.Signaling.ConnectionManagerDiagnosticsMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="SetKeepAliveUASEnabled">
        <MemberSignature Language="C#" Value="public static void SetKeepAliveUASEnabled (this Microsoft.Rtc.Signaling.RealTimeConnectionManager connectionManager, bool enabled);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetKeepAliveUASEnabled(class Microsoft.Rtc.Signaling.RealTimeConnectionManager connectionManager, bool enabled) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetKeepAliveUASEnabled(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetKeepAliveUASEnabled (connectionManager As RealTimeConnectionManager, enabled As Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetKeepAliveUASEnabled(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ connectionManager, bool enabled);" />
        <MemberSignature Language="F#" Value="static member SetKeepAliveUASEnabled : Microsoft.Rtc.Signaling.RealTimeConnectionManager * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetKeepAliveUASEnabled (connectionManager, enabled)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="connectionManager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="enabled" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="connectionManager">To be added.</param>
          <param name="enabled">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetKeepAliveUASEnabled(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="SetLocalProxyRedirectionPolicy">
        <MemberSignature Language="C#" Value="public static void SetLocalProxyRedirectionPolicy (this Microsoft.Rtc.Signaling.RealTimeConnectionManager connectionManager, bool isLocalProxyRedirectionEnabled);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLocalProxyRedirectionPolicy(class Microsoft.Rtc.Signaling.RealTimeConnectionManager connectionManager, bool isLocalProxyRedirectionEnabled) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetLocalProxyRedirectionPolicy(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetLocalProxyRedirectionPolicy (connectionManager As RealTimeConnectionManager, isLocalProxyRedirectionEnabled As Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetLocalProxyRedirectionPolicy(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ connectionManager, bool isLocalProxyRedirectionEnabled);" />
        <MemberSignature Language="F#" Value="static member SetLocalProxyRedirectionPolicy : Microsoft.Rtc.Signaling.RealTimeConnectionManager * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetLocalProxyRedirectionPolicy (connectionManager, isLocalProxyRedirectionEnabled)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="connectionManager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="isLocalProxyRedirectionEnabled" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="connectionManager">To be added.</param>
          <param name="isLocalProxyRedirectionEnabled">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetLocalProxyRedirectionPolicy(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="SetOutboundDefaultLocalBinding">
        <MemberSignature Language="C#" Value="public static void SetOutboundDefaultLocalBinding (this Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, System.Net.IPEndPoint defaultLocalBinding);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOutboundDefaultLocalBinding(class Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, class System.Net.IPEndPoint defaultLocalBinding) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetOutboundDefaultLocalBinding(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.Net.IPEndPoint)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetOutboundDefaultLocalBinding (manager As RealTimeConnectionManager, defaultLocalBinding As IPEndPoint)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetOutboundDefaultLocalBinding(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ manager, System::Net::IPEndPoint ^ defaultLocalBinding);" />
        <MemberSignature Language="F#" Value="static member SetOutboundDefaultLocalBinding : Microsoft.Rtc.Signaling.RealTimeConnectionManager * System.Net.IPEndPoint -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetOutboundDefaultLocalBinding (manager, defaultLocalBinding)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="manager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="defaultLocalBinding" Type="System.Net.IPEndPoint" />
        </Parameters>
        <Docs>
          <param name="manager">To be added.</param>
          <param name="defaultLocalBinding">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetOutboundDefaultLocalBinding(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.Net.IPEndPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="SetPoolConfiguration">
        <MemberSignature Language="C#" Value="public static void SetPoolConfiguration (this Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, Microsoft.Rtc.Internal.Signaling.PoolConfiguration configuration);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPoolConfiguration(class Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, class Microsoft.Rtc.Internal.Signaling.PoolConfiguration configuration) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetPoolConfiguration(Microsoft.Rtc.Signaling.RealTimeConnectionManager,Microsoft.Rtc.Internal.Signaling.PoolConfiguration)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetPoolConfiguration (manager As RealTimeConnectionManager, configuration As PoolConfiguration)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetPoolConfiguration(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ manager, Microsoft::Rtc::Internal::Signaling::PoolConfiguration ^ configuration);" />
        <MemberSignature Language="F#" Value="static member SetPoolConfiguration : Microsoft.Rtc.Signaling.RealTimeConnectionManager * Microsoft.Rtc.Internal.Signaling.PoolConfiguration -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetPoolConfiguration (manager, configuration)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="manager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="configuration" Type="Microsoft.Rtc.Internal.Signaling.PoolConfiguration" />
        </Parameters>
        <Docs>
          <param name="manager">To be added.</param>
          <param name="configuration">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetPoolConfiguration(Microsoft.Rtc.Signaling.RealTimeConnectionManager,Microsoft.Rtc.Internal.Signaling.PoolConfiguration)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="SetTerminateDialogOnNoMaxForwards">
        <MemberSignature Language="C#" Value="public static void SetTerminateDialogOnNoMaxForwards (this Microsoft.Rtc.Signaling.RealTimeConnectionManager connectionManager, bool enabled);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTerminateDialogOnNoMaxForwards(class Microsoft.Rtc.Signaling.RealTimeConnectionManager connectionManager, bool enabled) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetTerminateDialogOnNoMaxForwards(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetTerminateDialogOnNoMaxForwards (connectionManager As RealTimeConnectionManager, enabled As Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetTerminateDialogOnNoMaxForwards(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ connectionManager, bool enabled);" />
        <MemberSignature Language="F#" Value="static member SetTerminateDialogOnNoMaxForwards : Microsoft.Rtc.Signaling.RealTimeConnectionManager * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetTerminateDialogOnNoMaxForwards (connectionManager, enabled)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="connectionManager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="enabled" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="connectionManager">To be added.</param>
          <param name="enabled">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetTerminateDialogOnNoMaxForwards(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="SetTraceFilterConfiguration">
        <MemberSignature Language="C#" Value="public static void SetTraceFilterConfiguration (this Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration configuration);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTraceFilterConfiguration(class Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, class Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration configuration) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetTraceFilterConfiguration(Microsoft.Rtc.Signaling.RealTimeConnectionManager,Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetTraceFilterConfiguration (manager As RealTimeConnectionManager, configuration As ITraceFilterConfiguration)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetTraceFilterConfiguration(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ manager, Microsoft::Rtc::Internal::Signaling::ITraceFilterConfiguration ^ configuration);" />
        <MemberSignature Language="F#" Value="static member SetTraceFilterConfiguration : Microsoft.Rtc.Signaling.RealTimeConnectionManager * Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetTraceFilterConfiguration (manager, configuration)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="manager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="configuration" Type="Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration" />
        </Parameters>
        <Docs>
          <param name="manager">To be added.</param>
          <param name="configuration">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetTraceFilterConfiguration(Microsoft.Rtc.Signaling.RealTimeConnectionManager,Microsoft.Rtc.Internal.Signaling.ITraceFilterConfiguration)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="SetXmppMode">
        <MemberSignature Language="C#" Value="public static void SetXmppMode (this Microsoft.Rtc.Signaling.RealTimeConnectionManager connectionManager, bool isXmppMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXmppMode(class Microsoft.Rtc.Signaling.RealTimeConnectionManager connectionManager, bool isXmppMode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetXmppMode(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetXmppMode (connectionManager As RealTimeConnectionManager, isXmppMode As Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetXmppMode(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ connectionManager, bool isXmppMode);" />
        <MemberSignature Language="F#" Value="static member SetXmppMode : Microsoft.Rtc.Signaling.RealTimeConnectionManager * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetXmppMode (connectionManager, isXmppMode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="connectionManager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="isXmppMode" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="connectionManager">To be added.</param>
          <param name="isXmppMode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.SetXmppMode(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeConnectionManager" />
      </Targets>
      <Member MemberName="UnregisterConnectionConfigurationRequested">
        <MemberSignature Language="C#" Value="public static void UnregisterConnectionConfigurationRequested (this Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, EventHandler&lt;Microsoft.Rtc.Internal.Signaling.ConnectionConfigurationRequestedEventArgs&gt; handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterConnectionConfigurationRequested(class Microsoft.Rtc.Signaling.RealTimeConnectionManager manager, class System.EventHandler`1&lt;class Microsoft.Rtc.Internal.Signaling.ConnectionConfigurationRequestedEventArgs&gt; handler) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.UnregisterConnectionConfigurationRequested(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.EventHandler{Microsoft.Rtc.Internal.Signaling.ConnectionConfigurationRequestedEventArgs})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub UnregisterConnectionConfigurationRequested (manager As RealTimeConnectionManager, handler As EventHandler(Of ConnectionConfigurationRequestedEventArgs))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void UnregisterConnectionConfigurationRequested(Microsoft::Rtc::Signaling::RealTimeConnectionManager ^ manager, EventHandler&lt;Microsoft::Rtc::Internal::Signaling::ConnectionConfigurationRequestedEventArgs ^&gt; ^ handler);" />
        <MemberSignature Language="F#" Value="static member UnregisterConnectionConfigurationRequested : Microsoft.Rtc.Signaling.RealTimeConnectionManager * EventHandler&lt;Microsoft.Rtc.Internal.Signaling.ConnectionConfigurationRequestedEventArgs&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.UnregisterConnectionConfigurationRequested (manager, handler)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="manager" Type="Microsoft.Rtc.Signaling.RealTimeConnectionManager" RefType="this" />
          <Parameter Name="handler" Type="System.EventHandler&lt;Microsoft.Rtc.Internal.Signaling.ConnectionConfigurationRequestedEventArgs&gt;" />
        </Parameters>
        <Docs>
          <param name="manager">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeConnectionManagerExtensions.UnregisterConnectionConfigurationRequested(Microsoft.Rtc.Signaling.RealTimeConnectionManager,System.EventHandler{Microsoft.Rtc.Internal.Signaling.ConnectionConfigurationRequestedEventArgs})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeEndpoint" />
      </Targets>
      <Member MemberName="AddRegisterResponseDefaultHeaders">
        <MemberSignature Language="C#" Value="public static void AddRegisterResponseDefaultHeaders (this Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, Microsoft.Rtc.Internal.Sip.SipResponse response);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddRegisterResponseDefaultHeaders(class Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, class Microsoft.Rtc.Internal.Sip.SipResponse response) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.AddRegisterResponseDefaultHeaders(Microsoft.Rtc.Signaling.RealTimeEndpoint,Microsoft.Rtc.Internal.Sip.SipResponse)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddRegisterResponseDefaultHeaders (endpoint As RealTimeEndpoint, response As SipResponse)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddRegisterResponseDefaultHeaders(Microsoft::Rtc::Signaling::RealTimeEndpoint ^ endpoint, Microsoft::Rtc::Internal::Sip::SipResponse ^ response);" />
        <MemberSignature Language="F#" Value="static member AddRegisterResponseDefaultHeaders : Microsoft.Rtc.Signaling.RealTimeEndpoint * Microsoft.Rtc.Internal.Sip.SipResponse -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.AddRegisterResponseDefaultHeaders (endpoint, response)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Signaling.RealTimeEndpoint" RefType="this" />
          <Parameter Name="response" Type="Microsoft.Rtc.Internal.Sip.SipResponse" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="response">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.AddRegisterResponseDefaultHeaders(Microsoft.Rtc.Signaling.RealTimeEndpoint,Microsoft.Rtc.Internal.Sip.SipResponse)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeEndpoint" />
      </Targets>
      <Member MemberName="BeginSendErrorReport">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginSendErrorReport (this Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, Microsoft.Rtc.Internal.Signaling.SessionErrorReport errorReport, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginSendErrorReport(class Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, class Microsoft.Rtc.Internal.Signaling.SessionErrorReport errorReport, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.BeginSendErrorReport(Microsoft.Rtc.Signaling.RealTimeEndpoint,Microsoft.Rtc.Internal.Signaling.SessionErrorReport,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginSendErrorReport (endpoint As RealTimeEndpoint, errorReport As SessionErrorReport, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginSendErrorReport(Microsoft::Rtc::Signaling::RealTimeEndpoint ^ endpoint, Microsoft::Rtc::Internal::Signaling::SessionErrorReport ^ errorReport, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginSendErrorReport : Microsoft.Rtc.Signaling.RealTimeEndpoint * Microsoft.Rtc.Internal.Signaling.SessionErrorReport * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.BeginSendErrorReport (endpoint, errorReport, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Signaling.RealTimeEndpoint" RefType="this" />
          <Parameter Name="errorReport" Type="Microsoft.Rtc.Internal.Signaling.SessionErrorReport" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="errorReport">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.BeginSendErrorReport(Microsoft.Rtc.Signaling.RealTimeEndpoint,Microsoft.Rtc.Internal.Signaling.SessionErrorReport,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeEndpoint" />
      </Targets>
      <Member MemberName="EndSendErrorReport">
        <MemberSignature Language="C#" Value="public static void EndSendErrorReport (this Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndSendErrorReport(class Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.EndSendErrorReport(Microsoft.Rtc.Signaling.RealTimeEndpoint,System.IAsyncResult)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub EndSendErrorReport (endpoint As RealTimeEndpoint, result As IAsyncResult)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void EndSendErrorReport(Microsoft::Rtc::Signaling::RealTimeEndpoint ^ endpoint, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndSendErrorReport : Microsoft.Rtc.Signaling.RealTimeEndpoint * IAsyncResult -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.EndSendErrorReport (endpoint, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Signaling.RealTimeEndpoint" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.EndSendErrorReport(Microsoft.Rtc.Signaling.RealTimeEndpoint,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeEndpoint" />
      </Targets>
      <Member MemberName="GetSessionErrorReportingSupport">
        <MemberSignature Language="C#" Value="public static bool GetSessionErrorReportingSupport (this Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetSessionErrorReportingSupport(class Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.GetSessionErrorReportingSupport(Microsoft.Rtc.Signaling.RealTimeEndpoint)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSessionErrorReportingSupport (endpoint As RealTimeEndpoint) As Boolean" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool GetSessionErrorReportingSupport(Microsoft::Rtc::Signaling::RealTimeEndpoint ^ endpoint);" />
        <MemberSignature Language="F#" Value="static member GetSessionErrorReportingSupport : Microsoft.Rtc.Signaling.RealTimeEndpoint -&gt; bool" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.GetSessionErrorReportingSupport endpoint" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Signaling.RealTimeEndpoint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.GetSessionErrorReportingSupport(Microsoft.Rtc.Signaling.RealTimeEndpoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeEndpoint" />
      </Targets>
      <Member MemberName="RegisterForRegisterRequests">
        <MemberSignature Language="C#" Value="public static void RegisterForRegisterRequests (this Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, Microsoft.Rtc.Internal.Sip.TransactionCreatedEventHandler ProcessRegisterReceived);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterForRegisterRequests(class Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, class Microsoft.Rtc.Internal.Sip.TransactionCreatedEventHandler ProcessRegisterReceived) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.RegisterForRegisterRequests(Microsoft.Rtc.Signaling.RealTimeEndpoint,Microsoft.Rtc.Internal.Sip.TransactionCreatedEventHandler)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RegisterForRegisterRequests (endpoint As RealTimeEndpoint, ProcessRegisterReceived As TransactionCreatedEventHandler)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void RegisterForRegisterRequests(Microsoft::Rtc::Signaling::RealTimeEndpoint ^ endpoint, Microsoft::Rtc::Internal::Sip::TransactionCreatedEventHandler ^ ProcessRegisterReceived);" />
        <MemberSignature Language="F#" Value="static member RegisterForRegisterRequests : Microsoft.Rtc.Signaling.RealTimeEndpoint * Microsoft.Rtc.Internal.Sip.TransactionCreatedEventHandler -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.RegisterForRegisterRequests (endpoint, ProcessRegisterReceived)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Signaling.RealTimeEndpoint" RefType="this" />
          <Parameter Name="ProcessRegisterReceived" Type="Microsoft.Rtc.Internal.Sip.TransactionCreatedEventHandler" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="ProcessRegisterReceived">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.RegisterForRegisterRequests(Microsoft.Rtc.Signaling.RealTimeEndpoint,Microsoft.Rtc.Internal.Sip.TransactionCreatedEventHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeEndpoint" />
      </Targets>
      <Member MemberName="SetSessionErrorReportingSupport">
        <MemberSignature Language="C#" Value="public static void SetSessionErrorReportingSupport (this Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, bool isSupported);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSessionErrorReportingSupport(class Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, bool isSupported) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.SetSessionErrorReportingSupport(Microsoft.Rtc.Signaling.RealTimeEndpoint,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetSessionErrorReportingSupport (endpoint As RealTimeEndpoint, isSupported As Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetSessionErrorReportingSupport(Microsoft::Rtc::Signaling::RealTimeEndpoint ^ endpoint, bool isSupported);" />
        <MemberSignature Language="F#" Value="static member SetSessionErrorReportingSupport : Microsoft.Rtc.Signaling.RealTimeEndpoint * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.SetSessionErrorReportingSupport (endpoint, isSupported)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Signaling.RealTimeEndpoint" RefType="this" />
          <Parameter Name="isSupported" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="isSupported">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.SetSessionErrorReportingSupport(Microsoft.Rtc.Signaling.RealTimeEndpoint,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeEndpoint" />
      </Targets>
      <Member MemberName="UnregisterForRegisterRequests">
        <MemberSignature Language="C#" Value="public static void UnregisterForRegisterRequests (this Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, Microsoft.Rtc.Internal.Sip.TransactionCreatedEventHandler ProcessRegisterReceived);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterForRegisterRequests(class Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, class Microsoft.Rtc.Internal.Sip.TransactionCreatedEventHandler ProcessRegisterReceived) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.UnregisterForRegisterRequests(Microsoft.Rtc.Signaling.RealTimeEndpoint,Microsoft.Rtc.Internal.Sip.TransactionCreatedEventHandler)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub UnregisterForRegisterRequests (endpoint As RealTimeEndpoint, ProcessRegisterReceived As TransactionCreatedEventHandler)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void UnregisterForRegisterRequests(Microsoft::Rtc::Signaling::RealTimeEndpoint ^ endpoint, Microsoft::Rtc::Internal::Sip::TransactionCreatedEventHandler ^ ProcessRegisterReceived);" />
        <MemberSignature Language="F#" Value="static member UnregisterForRegisterRequests : Microsoft.Rtc.Signaling.RealTimeEndpoint * Microsoft.Rtc.Internal.Sip.TransactionCreatedEventHandler -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.UnregisterForRegisterRequests (endpoint, ProcessRegisterReceived)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Signaling.RealTimeEndpoint" RefType="this" />
          <Parameter Name="ProcessRegisterReceived" Type="Microsoft.Rtc.Internal.Sip.TransactionCreatedEventHandler" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="ProcessRegisterReceived">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtension.UnregisterForRegisterRequests(Microsoft.Rtc.Signaling.RealTimeEndpoint,Microsoft.Rtc.Internal.Sip.TransactionCreatedEventHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeEndpoint" />
      </Targets>
      <Member MemberName="RegisterForUserRegistrationNotification">
        <MemberSignature Language="C#" Value="public static void RegisterForUserRegistrationNotification (this Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, EventHandler&lt;Microsoft.Rtc.Internal.Signaling.UserRegistrationNotificationEventArgs&gt; notificationDelegate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterForUserRegistrationNotification(class Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, class System.EventHandler`1&lt;class Microsoft.Rtc.Internal.Signaling.UserRegistrationNotificationEventArgs&gt; notificationDelegate) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtensionMethods.RegisterForUserRegistrationNotification(Microsoft.Rtc.Signaling.RealTimeEndpoint,System.EventHandler{Microsoft.Rtc.Internal.Signaling.UserRegistrationNotificationEventArgs})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RegisterForUserRegistrationNotification (endpoint As RealTimeEndpoint, notificationDelegate As EventHandler(Of UserRegistrationNotificationEventArgs))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void RegisterForUserRegistrationNotification(Microsoft::Rtc::Signaling::RealTimeEndpoint ^ endpoint, EventHandler&lt;Microsoft::Rtc::Internal::Signaling::UserRegistrationNotificationEventArgs ^&gt; ^ notificationDelegate);" />
        <MemberSignature Language="F#" Value="static member RegisterForUserRegistrationNotification : Microsoft.Rtc.Signaling.RealTimeEndpoint * EventHandler&lt;Microsoft.Rtc.Internal.Signaling.UserRegistrationNotificationEventArgs&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtensionMethods.RegisterForUserRegistrationNotification (endpoint, notificationDelegate)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Signaling.RealTimeEndpoint" RefType="this" />
          <Parameter Name="notificationDelegate" Type="System.EventHandler&lt;Microsoft.Rtc.Internal.Signaling.UserRegistrationNotificationEventArgs&gt;" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="notificationDelegate">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtensionMethods" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtensionMethods.RegisterForUserRegistrationNotification(Microsoft.Rtc.Signaling.RealTimeEndpoint,System.EventHandler{Microsoft.Rtc.Internal.Signaling.UserRegistrationNotificationEventArgs})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.RealTimeEndpoint" />
      </Targets>
      <Member MemberName="UnregisterForUserRegistrationNotification">
        <MemberSignature Language="C#" Value="public static void UnregisterForUserRegistrationNotification (this Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, EventHandler&lt;Microsoft.Rtc.Internal.Signaling.UserRegistrationNotificationEventArgs&gt; notificationDelegate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterForUserRegistrationNotification(class Microsoft.Rtc.Signaling.RealTimeEndpoint endpoint, class System.EventHandler`1&lt;class Microsoft.Rtc.Internal.Signaling.UserRegistrationNotificationEventArgs&gt; notificationDelegate) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtensionMethods.UnregisterForUserRegistrationNotification(Microsoft.Rtc.Signaling.RealTimeEndpoint,System.EventHandler{Microsoft.Rtc.Internal.Signaling.UserRegistrationNotificationEventArgs})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub UnregisterForUserRegistrationNotification (endpoint As RealTimeEndpoint, notificationDelegate As EventHandler(Of UserRegistrationNotificationEventArgs))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void UnregisterForUserRegistrationNotification(Microsoft::Rtc::Signaling::RealTimeEndpoint ^ endpoint, EventHandler&lt;Microsoft::Rtc::Internal::Signaling::UserRegistrationNotificationEventArgs ^&gt; ^ notificationDelegate);" />
        <MemberSignature Language="F#" Value="static member UnregisterForUserRegistrationNotification : Microsoft.Rtc.Signaling.RealTimeEndpoint * EventHandler&lt;Microsoft.Rtc.Internal.Signaling.UserRegistrationNotificationEventArgs&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtensionMethods.UnregisterForUserRegistrationNotification (endpoint, notificationDelegate)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Signaling.RealTimeEndpoint" RefType="this" />
          <Parameter Name="notificationDelegate" Type="System.EventHandler&lt;Microsoft.Rtc.Internal.Signaling.UserRegistrationNotificationEventArgs&gt;" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="notificationDelegate">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtensionMethods" Member="M:Microsoft.Rtc.Internal.Signaling.RealTimeEndpointExtensionMethods.UnregisterForUserRegistrationNotification(Microsoft.Rtc.Signaling.RealTimeEndpoint,System.EventHandler{Microsoft.Rtc.Internal.Signaling.UserRegistrationNotificationEventArgs})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.SignalingSession" />
      </Targets>
      <Member MemberName="AddFeatureParameter">
        <MemberSignature Language="C#" Value="public static void AddFeatureParameter (this Microsoft.Rtc.Signaling.SignalingSession session, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddFeatureParameter(class Microsoft.Rtc.Signaling.SignalingSession session, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions.AddFeatureParameter(Microsoft.Rtc.Signaling.SignalingSession,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddFeatureParameter (session As SignalingSession, name As String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddFeatureParameter(Microsoft::Rtc::Signaling::SignalingSession ^ session, System::String ^ name);" />
        <MemberSignature Language="F#" Value="static member AddFeatureParameter : Microsoft.Rtc.Signaling.SignalingSession * string -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions.AddFeatureParameter (session, name)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="session" Type="Microsoft.Rtc.Signaling.SignalingSession" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="session">To be added.</param>
          <param name="name">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions.AddFeatureParameter(Microsoft.Rtc.Signaling.SignalingSession,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.SignalingSession" />
      </Targets>
      <Member MemberName="BeginConfigureConnection">
        <MemberSignature Language="C#" Value="public static IAsyncResult BeginConfigureConnection (this Microsoft.Rtc.Signaling.SignalingSession session, Microsoft.Rtc.Signaling.ConnectionContext context, AsyncCallback userCallback, object state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginConfigureConnection(class Microsoft.Rtc.Signaling.SignalingSession session, class Microsoft.Rtc.Signaling.ConnectionContext context, class System.AsyncCallback userCallback, object state) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions.BeginConfigureConnection(Microsoft.Rtc.Signaling.SignalingSession,Microsoft.Rtc.Signaling.ConnectionContext,System.AsyncCallback,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginConfigureConnection (session As SignalingSession, context As ConnectionContext, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IAsyncResult ^ BeginConfigureConnection(Microsoft::Rtc::Signaling::SignalingSession ^ session, Microsoft::Rtc::Signaling::ConnectionContext ^ context, AsyncCallback ^ userCallback, System::Object ^ state);" />
        <MemberSignature Language="F#" Value="static member BeginConfigureConnection : Microsoft.Rtc.Signaling.SignalingSession * Microsoft.Rtc.Signaling.ConnectionContext * AsyncCallback * obj -&gt; IAsyncResult" Usage="Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions.BeginConfigureConnection (session, context, userCallback, state)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IAsyncResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="session" Type="Microsoft.Rtc.Signaling.SignalingSession" RefType="this" />
          <Parameter Name="context" Type="Microsoft.Rtc.Signaling.ConnectionContext" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="session">To be added.</param>
          <param name="context">To be added.</param>
          <param name="userCallback">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions.BeginConfigureConnection(Microsoft.Rtc.Signaling.SignalingSession,Microsoft.Rtc.Signaling.ConnectionContext,System.AsyncCallback,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.SignalingSession" />
      </Targets>
      <Member MemberName="EndConfigureConnection">
        <MemberSignature Language="C#" Value="public static Microsoft.Rtc.Signaling.RealTimeConnection EndConfigureConnection (this Microsoft.Rtc.Signaling.SignalingSession session, IAsyncResult result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rtc.Signaling.RealTimeConnection EndConfigureConnection(class Microsoft.Rtc.Signaling.SignalingSession session, class System.IAsyncResult result) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions.EndConfigureConnection(Microsoft.Rtc.Signaling.SignalingSession,System.IAsyncResult)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndConfigureConnection (session As SignalingSession, result As IAsyncResult) As RealTimeConnection" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Rtc::Signaling::RealTimeConnection ^ EndConfigureConnection(Microsoft::Rtc::Signaling::SignalingSession ^ session, IAsyncResult ^ result);" />
        <MemberSignature Language="F#" Value="static member EndConfigureConnection : Microsoft.Rtc.Signaling.SignalingSession * IAsyncResult -&gt; Microsoft.Rtc.Signaling.RealTimeConnection" Usage="Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions.EndConfigureConnection (session, result)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rtc.Signaling.RealTimeConnection</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="session" Type="Microsoft.Rtc.Signaling.SignalingSession" RefType="this" />
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
        <Docs>
          <param name="session">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions.EndConfigureConnection(Microsoft.Rtc.Signaling.SignalingSession,System.IAsyncResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.SignalingSession" />
      </Targets>
      <Member MemberName="SetUpdateMethodDisabled">
        <MemberSignature Language="C#" Value="public static void SetUpdateMethodDisabled (this Microsoft.Rtc.Signaling.SignalingSession session, bool disabled);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetUpdateMethodDisabled(class Microsoft.Rtc.Signaling.SignalingSession session, bool disabled) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions.SetUpdateMethodDisabled(Microsoft.Rtc.Signaling.SignalingSession,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetUpdateMethodDisabled (session As SignalingSession, disabled As Boolean)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetUpdateMethodDisabled(Microsoft::Rtc::Signaling::SignalingSession ^ session, bool disabled);" />
        <MemberSignature Language="F#" Value="static member SetUpdateMethodDisabled : Microsoft.Rtc.Signaling.SignalingSession * bool -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions.SetUpdateMethodDisabled (session, disabled)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="session" Type="Microsoft.Rtc.Signaling.SignalingSession" RefType="this" />
          <Parameter Name="disabled" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="session">To be added.</param>
          <param name="disabled">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.SignalingSessionExtensions.SetUpdateMethodDisabled(Microsoft.Rtc.Signaling.SignalingSession,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint" />
      </Targets>
      <Member MemberName="RegisterForSubscriptionSession">
        <MemberSignature Language="C#" Value="public static void RegisterForSubscriptionSession (this Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint endpoint, string eventPackage, System.Collections.Generic.IEnumerable&lt;System.Net.Mime.ContentType&gt; contentTypes, EventHandler&lt;Microsoft.Rtc.Internal.Signaling.SubscriptionSessionReceivedEventArgs&gt; handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterForSubscriptionSession(class Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint endpoint, string eventPackage, class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Mime.ContentType&gt; contentTypes, class System.EventHandler`1&lt;class Microsoft.Rtc.Internal.Signaling.SubscriptionSessionReceivedEventArgs&gt; handler) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.SipPeerToPeerEndpointExtensions.RegisterForSubscriptionSession(Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint,System.String,System.Collections.Generic.IEnumerable{System.Net.Mime.ContentType},System.EventHandler{Microsoft.Rtc.Internal.Signaling.SubscriptionSessionReceivedEventArgs})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RegisterForSubscriptionSession (endpoint As SipPeerToPeerEndpoint, eventPackage As String, contentTypes As IEnumerable(Of ContentType), handler As EventHandler(Of SubscriptionSessionReceivedEventArgs))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void RegisterForSubscriptionSession(Microsoft::Rtc::Signaling::SipPeerToPeerEndpoint ^ endpoint, System::String ^ eventPackage, System::Collections::Generic::IEnumerable&lt;System::Net::Mime::ContentType ^&gt; ^ contentTypes, EventHandler&lt;Microsoft::Rtc::Internal::Signaling::SubscriptionSessionReceivedEventArgs ^&gt; ^ handler);" />
        <MemberSignature Language="F#" Value="static member RegisterForSubscriptionSession : Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint * string * seq&lt;System.Net.Mime.ContentType&gt; * EventHandler&lt;Microsoft.Rtc.Internal.Signaling.SubscriptionSessionReceivedEventArgs&gt; -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.SipPeerToPeerEndpointExtensions.RegisterForSubscriptionSession (endpoint, eventPackage, contentTypes, handler)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint" RefType="this" />
          <Parameter Name="eventPackage" Type="System.String" />
          <Parameter Name="contentTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Mime.ContentType&gt;" />
          <Parameter Name="handler" Type="System.EventHandler&lt;Microsoft.Rtc.Internal.Signaling.SubscriptionSessionReceivedEventArgs&gt;" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="eventPackage">To be added.</param>
          <param name="contentTypes">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.SipPeerToPeerEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.SipPeerToPeerEndpointExtensions.RegisterForSubscriptionSession(Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint,System.String,System.Collections.Generic.IEnumerable{System.Net.Mime.ContentType},System.EventHandler{Microsoft.Rtc.Internal.Signaling.SubscriptionSessionReceivedEventArgs})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint" />
      </Targets>
      <Member MemberName="UnregisterForSubscriptionSession">
        <MemberSignature Language="C#" Value="public static void UnregisterForSubscriptionSession (this Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint endpoint, string eventPackage);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterForSubscriptionSession(class Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint endpoint, string eventPackage) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.SipPeerToPeerEndpointExtensions.UnregisterForSubscriptionSession(Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub UnregisterForSubscriptionSession (endpoint As SipPeerToPeerEndpoint, eventPackage As String)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void UnregisterForSubscriptionSession(Microsoft::Rtc::Signaling::SipPeerToPeerEndpoint ^ endpoint, System::String ^ eventPackage);" />
        <MemberSignature Language="F#" Value="static member UnregisterForSubscriptionSession : Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint * string -&gt; unit" Usage="Microsoft.Rtc.Internal.Signaling.SipPeerToPeerEndpointExtensions.UnregisterForSubscriptionSession (endpoint, eventPackage)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="endpoint" Type="Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint" RefType="this" />
          <Parameter Name="eventPackage" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="endpoint">To be added.</param>
          <param name="eventPackage">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.SipPeerToPeerEndpointExtensions" Member="M:Microsoft.Rtc.Internal.Signaling.SipPeerToPeerEndpointExtensions.UnregisterForSubscriptionSession(Microsoft.Rtc.Signaling.SipPeerToPeerEndpoint,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.SipUriParser" />
      </Targets>
      <Member MemberName="IsPhoneUser">
        <MemberSignature Language="C#" Value="public static bool IsPhoneUser (this Microsoft.Rtc.Signaling.SipUriParser sipUriParser);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPhoneUser(class Microsoft.Rtc.Signaling.SipUriParser sipUriParser) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.SipUriParserExtension.IsPhoneUser(Microsoft.Rtc.Signaling.SipUriParser)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsPhoneUser(Microsoft::Rtc::Signaling::SipUriParser ^ sipUriParser);" />
        <MemberSignature Language="F#" Value="static member IsPhoneUser : Microsoft.Rtc.Signaling.SipUriParser -&gt; bool" Usage="Microsoft.Rtc.Internal.Signaling.SipUriParserExtension.IsPhoneUser sipUriParser" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="sipUriParser" Type="Microsoft.Rtc.Signaling.SipUriParser" RefType="this" />
        </Parameters>
        <Docs>
          <param name="sipUriParser">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.SipUriParserExtension" Member="M:Microsoft.Rtc.Internal.Signaling.SipUriParserExtension.IsPhoneUser(Microsoft.Rtc.Signaling.SipUriParser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.SipUriParser" />
      </Targets>
      <Member MemberName="TryGetConnectionTarget">
        <MemberSignature Language="C#" Value="public static bool TryGetConnectionTarget (this Microsoft.Rtc.Signaling.SipUriParser sipUriParser, out string connectionTarget);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetConnectionTarget(class Microsoft.Rtc.Signaling.SipUriParser sipUriParser, [out] string&amp; connectionTarget) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.SipUriParserExtension.TryGetConnectionTarget(Microsoft.Rtc.Signaling.SipUriParser,System.String@)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryGetConnectionTarget(Microsoft::Rtc::Signaling::SipUriParser ^ sipUriParser, [Runtime::InteropServices::Out] System::String ^ % connectionTarget);" />
        <MemberSignature Language="F#" Value="static member TryGetConnectionTarget : Microsoft.Rtc.Signaling.SipUriParser *  -&gt; bool" Usage="Microsoft.Rtc.Internal.Signaling.SipUriParserExtension.TryGetConnectionTarget (sipUriParser, connectionTarget)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="sipUriParser" Type="Microsoft.Rtc.Signaling.SipUriParser" RefType="this" />
          <Parameter Name="connectionTarget" Type="System.String" RefType="out" />
        </Parameters>
        <Docs>
          <param name="sipUriParser">To be added.</param>
          <param name="connectionTarget">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.SipUriParserExtension" Member="M:Microsoft.Rtc.Internal.Signaling.SipUriParserExtension.TryGetConnectionTarget(Microsoft.Rtc.Signaling.SipUriParser,System.String@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Rtc.Signaling.SipUriParser" />
      </Targets>
      <Member MemberName="TryGetTlsTarget">
        <MemberSignature Language="C#" Value="public static bool TryGetTlsTarget (this Microsoft.Rtc.Signaling.SipUriParser sipUriParser, out string tlsTarget);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetTlsTarget(class Microsoft.Rtc.Signaling.SipUriParser sipUriParser, [out] string&amp; tlsTarget) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Internal.Signaling.SipUriParserExtension.TryGetTlsTarget(Microsoft.Rtc.Signaling.SipUriParser,System.String@)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryGetTlsTarget(Microsoft::Rtc::Signaling::SipUriParser ^ sipUriParser, [Runtime::InteropServices::Out] System::String ^ % tlsTarget);" />
        <MemberSignature Language="F#" Value="static member TryGetTlsTarget : Microsoft.Rtc.Signaling.SipUriParser *  -&gt; bool" Usage="Microsoft.Rtc.Internal.Signaling.SipUriParserExtension.TryGetTlsTarget (sipUriParser, tlsTarget)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="sipUriParser" Type="Microsoft.Rtc.Signaling.SipUriParser" RefType="this" />
          <Parameter Name="tlsTarget" Type="System.String" RefType="out" />
        </Parameters>
        <Docs>
          <param name="sipUriParser">To be added.</param>
          <param name="tlsTarget">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Internal.Signaling.SipUriParserExtension" Member="M:Microsoft.Rtc.Internal.Signaling.SipUriParserExtension.TryGetTlsTarget(Microsoft.Rtc.Signaling.SipUriParser,System.String@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.ObjectModel.Collection`1" />
      </Targets>
      <Member MemberName="AddRange&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void AddRange&lt;T&gt; (this System.Collections.ObjectModel.Collection&lt;T&gt; collectionToUpdate, System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddRange&lt;T&gt;(class System.Collections.ObjectModel.Collection`1&lt;!!T&gt; collectionToUpdate, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; collection) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Signaling.CollectionExtensions.AddRange``1(System.Collections.ObjectModel.Collection{``0},System.Collections.Generic.IEnumerable{``0})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddRange(Of T) (collectionToUpdate As Collection(Of T), collection As IEnumerable(Of T))" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddRange(System::Collections::ObjectModel::Collection&lt;T&gt; ^ collectionToUpdate, System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
        <MemberSignature Language="F#" Value="static member AddRange : System.Collections.ObjectModel.Collection&lt;'T&gt; * seq&lt;'T&gt; -&gt; unit" Usage="Microsoft.Rtc.Signaling.CollectionExtensions.AddRange (collectionToUpdate, collection)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="collectionToUpdate" Type="System.Collections.ObjectModel.Collection&lt;T&gt;" RefType="this" />
          <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="T">Type of item in the collection</typeparam>
          <param name="collectionToUpdate">The existing collection.</param>
          <param name="collection">The collection of items to add.</param>
          <summary>
            Adds the elements of the specified collection to the existing collection.
            </summary>
        </Docs>
        <Link Type="Microsoft.Rtc.Signaling.CollectionExtensions" Member="M:Microsoft.Rtc.Signaling.CollectionExtensions.AddRange``1(System.Collections.ObjectModel.Collection{``0},System.Collections.Generic.IEnumerable{``0})" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>
