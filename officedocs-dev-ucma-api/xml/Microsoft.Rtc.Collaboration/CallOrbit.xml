<Type Name="CallOrbit" FullName="Microsoft.Rtc.Collaboration.CallOrbit">
  <TypeSignature Language="C#" Value="public class CallOrbit" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallOrbit extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Rtc.Collaboration.CallOrbit" />
  <TypeSignature Language="VB.NET" Value="Public Class CallOrbit" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallOrbit" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents orbit details for parking and retrieving a call.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallOrbit (string orbitNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string orbitNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.CallOrbit.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (orbitNumber As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallOrbit(System::String ^ orbitNumber);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="orbitNumber" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="orbitNumber">The orbit number to use. Cannot be null or empty.</param>
        <summary>
            Creates a new instance of the CallOrbit class, specifying the orbit number.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="orbitNumber" /> is null.
            </exception>
        <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="orbitNumber" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallOrbit (string orbitNumber, string orbitUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string orbitNumber, string orbitUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.CallOrbit.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (orbitNumber As String, orbitUri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallOrbit(System::String ^ orbitNumber, System::String ^ orbitUri);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="orbitNumber" Type="System.String" />
        <Parameter Name="orbitUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="orbitNumber">The orbit number to use. Cannot be null or empty.</param>
        <param name="orbitUri">The orbit URI to use to retrieve the parked call. Can be null or empty.</param>
        <summary>
            Creates a new instance of the CallOrbit class, specifying the orbit number and the safe retrieval URI.
            </summary>
        <remarks>
          <para>
            When both <paramref name="orbitNumber" />  and <paramref name="orbitUri" /> values are provided,
            the <paramref name="orbitUri" /> value will be used to retrieve the parked call.
            </para>
          <para />
        </remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="orbitNumber" /> is null.
            </exception>
        <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="orbitNumber" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Rtc.Collaboration.CallOrbit orbit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class Microsoft.Rtc.Collaboration.CallOrbit orbit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.CallOrbit.Equals(Microsoft.Rtc.Collaboration.CallOrbit)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (orbit As CallOrbit) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(Microsoft::Rtc::Collaboration::CallOrbit ^ orbit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orbit" Type="Microsoft.Rtc.Collaboration.CallOrbit" />
      </Parameters>
      <Docs>
        <param name="orbit">The target orbit object to compare with.</param>
        <summary>
            Gets whether the two call orbits are equal.
            </summary>
        <returns>true when this instance matches the supplied target instance.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.CallOrbit.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The target orbit object to compare with.</param>
        <summary>
            Gets whether the two call orbits are equal.
            </summary>
        <returns>true when this instance matches the supplied target 
            instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.CallOrbit.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the hash code for this instance.
            </summary>
        <returns>The hash code for this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.Rtc.Collaboration.CallOrbit orbit1, object orbit2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.Rtc.Collaboration.CallOrbit orbit1, object orbit2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.CallOrbit.op_Equality(Microsoft.Rtc.Collaboration.CallOrbit,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (orbit1 As CallOrbit, orbit2 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::Rtc::Collaboration::CallOrbit ^ orbit1, System::Object ^ orbit2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orbit1" Type="Microsoft.Rtc.Collaboration.CallOrbit" />
        <Parameter Name="orbit2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="orbit1">The first call orbit to compare.</param>
        <param name="orbit2">The object to compare to.</param>
        <summary>
            Gets whether the two call orbits are equal.
            </summary>
        <returns>true if the call orbits are equal; otherwise returns 
            false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.Rtc.Collaboration.CallOrbit orbit1, object orbit2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.Rtc.Collaboration.CallOrbit orbit1, object orbit2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.CallOrbit.op_Inequality(Microsoft.Rtc.Collaboration.CallOrbit,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (orbit1 As CallOrbit, orbit2 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::Rtc::Collaboration::CallOrbit ^ orbit1, System::Object ^ orbit2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orbit1" Type="Microsoft.Rtc.Collaboration.CallOrbit" />
        <Parameter Name="orbit2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="orbit1">The first call orbit to compare.</param>
        <param name="orbit2">The object to compare to.</param>
        <summary>
            Gets whether the two call orbits are unequal.
            </summary>
        <returns>true if the call orbits are unequal; otherwise returns  
            false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrbitNumber">
      <MemberSignature Language="C#" Value="public string OrbitNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrbitNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallOrbit.OrbitNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrbitNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrbitNumber { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the string representation of the orbit number.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrbitUri">
      <MemberSignature Language="C#" Value="public string OrbitUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrbitUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallOrbit.OrbitUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrbitUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrbitUri { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the safe retrieval URI, if available.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            The safe retrieval URI is used to retrieve a parked call from the instance of the call 
            park server where the call is parked.
            This property returns an empty string if the safe retrieval URI is not available.
            </para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>