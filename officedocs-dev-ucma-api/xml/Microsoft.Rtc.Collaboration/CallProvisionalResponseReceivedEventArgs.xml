<Type Name="CallProvisionalResponseReceivedEventArgs" FullName="Microsoft.Rtc.Collaboration.CallProvisionalResponseReceivedEventArgs">
  <TypeSignature Language="C#" Value="public class CallProvisionalResponseReceivedEventArgs : Microsoft.Rtc.Signaling.SipResponseReceivedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallProvisionalResponseReceivedEventArgs extends Microsoft.Rtc.Signaling.SipResponseReceivedEventArgs" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Rtc.Collaboration.CallProvisionalResponseReceivedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class CallProvisionalResponseReceivedEventArgs&#xA;Inherits SipResponseReceivedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallProvisionalResponseReceivedEventArgs : Microsoft::Rtc::Signaling::SipResponseReceivedEventArgs" />
  <TypeSignature Language="F#" Value="type CallProvisionalResponseReceivedEventArgs = class&#xA;    inherit SipResponseReceivedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Rtc.Signaling.SipResponseReceivedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents information associated with the reception of a provisional response (advanced usage.)
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DialogContext">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Signaling.DialogContext DialogContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Rtc.Signaling.DialogContext DialogContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallProvisionalResponseReceivedEventArgs.DialogContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogContext As DialogContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Rtc::Signaling::DialogContext ^ DialogContext { Microsoft::Rtc::Signaling::DialogContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DialogContext : Microsoft.Rtc.Signaling.DialogContext" Usage="Microsoft.Rtc.Collaboration.CallProvisionalResponseReceivedEventArgs.DialogContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Signaling.DialogContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets information about the specific dialog on which the response is received. 
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            During call establishment, a session may have multiple dialogs. For example, it is not unusual
            to receive provisional responses coming from different remote endpoints on distinct early dialogs when making an outbound call that
            gets forked.
            </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEarlyMedia">
      <MemberSignature Language="C#" Value="public bool IsEarlyMedia { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEarlyMedia" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallProvisionalResponseReceivedEventArgs.IsEarlyMedia" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEarlyMedia As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEarlyMedia { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEarlyMedia : bool" Usage="Microsoft.Rtc.Collaboration.CallProvisionalResponseReceivedEventArgs.IsEarlyMedia" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether the provisional response contains a Session Description Protocol answer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReliable">
      <MemberSignature Language="C#" Value="public bool IsReliable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReliable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallProvisionalResponseReceivedEventArgs.IsReliable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReliable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReliable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReliable : bool" Usage="Microsoft.Rtc.Collaboration.CallProvisionalResponseReceivedEventArgs.IsReliable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether the provisional response received is reliable.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            A reliable provisional response must be acknowledged with a PRACK message.
            </para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>