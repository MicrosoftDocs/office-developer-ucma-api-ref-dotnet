<Type Name="CallEstablishOptions" FullName="Microsoft.Rtc.Collaboration.CallEstablishOptions">
  <TypeSignature Language="C#" Value="public class CallEstablishOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallEstablishOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Rtc.Collaboration.CallEstablishOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class CallEstablishOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallEstablishOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Optional parameter for establishing the call.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallEstablishOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.CallEstablishOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallEstablishOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of the CallEstablishOptions class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionContext">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Signaling.ConnectionContext ConnectionContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Rtc.Signaling.ConnectionContext ConnectionContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallEstablishOptions.ConnectionContext" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionContext As ConnectionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Rtc::Signaling::ConnectionContext ^ ConnectionContext { Microsoft::Rtc::Signaling::ConnectionContext ^ get(); void set(Microsoft::Rtc::Signaling::ConnectionContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Signaling.ConnectionContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the connection context to be used when establishing the call.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomMimeParts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Collaboration.MimePartContentDescription&gt; CustomMimeParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Rtc.Collaboration.MimePartContentDescription&gt; CustomMimeParts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallEstablishOptions.CustomMimeParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomMimeParts As Collection(Of MimePartContentDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;Microsoft::Rtc::Collaboration::MimePartContentDescription ^&gt; ^ CustomMimeParts { System::Collections::ObjectModel::Collection&lt;Microsoft::Rtc::Collaboration::MimePartContentDescription ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Collaboration.MimePartContentDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the application specific MIME parts to include in the INVITE message.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DestinationAddressInternal">
      <MemberSignature Language="C#" Value="protected internal Microsoft.Rtc.Signaling.RealTimeAddress DestinationAddressInternal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Rtc.Signaling.RealTimeAddress DestinationAddressInternal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallEstablishOptions.DestinationAddressInternal" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property DestinationAddressInternal As RealTimeAddress" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property Microsoft::Rtc::Signaling::RealTimeAddress ^ DestinationAddressInternal { Microsoft::Rtc::Signaling::RealTimeAddress ^ get(); void set(Microsoft::Rtc::Signaling::RealTimeAddress ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Signaling.RealTimeAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Signaling.SignalingHeader&gt; Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Rtc.Signaling.SignalingHeader&gt; Headers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallEstablishOptions.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As Collection(Of SignalingHeader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;Microsoft::Rtc::Signaling::SignalingHeader ^&gt; ^ Headers { System::Collections::ObjectModel::Collection&lt;Microsoft::Rtc::Signaling::SignalingHeader ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Rtc.Signaling.SignalingHeader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of custom signaling headers to be included in the request.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            The application should add its custom headers to this list. Restricted headers cannot be included in the response.
            </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsThirdPartyCallControl">
      <MemberSignature Language="C#" Value="public bool IsThirdPartyCallControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThirdPartyCallControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallEstablishOptions.IsThirdPartyCallControl" />
      <MemberSignature Language="VB.NET" Value="Public Property IsThirdPartyCallControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsThirdPartyCallControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the call is used in a third-party call control scenario.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            If property is set to true, the call will perform an initial invitation using a null 
            offer without asking the local media provider.
            </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumEstablishTime">
      <MemberSignature Language="C#" Value="public TimeSpan MaximumEstablishTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaximumEstablishTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallEstablishOptions.MaximumEstablishTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumEstablishTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaximumEstablishTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a maximum call establishment time.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>When a caller tries to establish a call, the remote party can keep sending provisional responses
            indefinitely. To protect against such rogue clients, the application can define
            a maximum establishment time. If the remote party has not sent a final response before the maximum
            establishment time, then the call will be terminated automatically.</para>
          <para>By default, the maximum establishment time is 10 minutes.</para>
          <para />
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when a maximum call establishment time set is less than 1 minute or greater than 30 minutes.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsEarlyMedia">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Collaboration.CapabilitySupport SupportsEarlyMedia { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Rtc.Collaboration.CapabilitySupport SupportsEarlyMedia" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallEstablishOptions.SupportsEarlyMedia" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsEarlyMedia As CapabilitySupport" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Rtc::Collaboration::CapabilitySupport SupportsEarlyMedia { Microsoft::Rtc::Collaboration::CapabilitySupport get(); void set(Microsoft::Rtc::Collaboration::CapabilitySupport value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Collaboration.CapabilitySupport</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the call advertises the support for 100rel.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsReplaces">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Collaboration.CapabilitySupport SupportsReplaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Rtc.Collaboration.CapabilitySupport SupportsReplaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallEstablishOptions.SupportsReplaces" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsReplaces As CapabilitySupport" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Rtc::Collaboration::CapabilitySupport SupportsReplaces { Microsoft::Rtc::Collaboration::CapabilitySupport get(); void set(Microsoft::Rtc::Collaboration::CapabilitySupport value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Collaboration.CapabilitySupport</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether call supports the replaces header.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transferor">
      <MemberSignature Language="C#" Value="public string Transferor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Transferor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallEstablishOptions.Transferor" />
      <MemberSignature Language="VB.NET" Value="Public Property Transferor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Transferor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the transferor address. The application MUST verify (see remarks for more details) the identify of the transferor before setting this property. 
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This value will be used in the outgoing invite request to set the Referred-By header.
            If this property is not set, Referred-By header will not be added by the platform.
            If a server platform and application endpoint are configured to use MTLS, Referred-By header will be signed
            to ensure that it is not altered by anyone else. The platform will not sign the header if added explicitly by the application.
            </para>
          <para>
            It is important for applications to verify the accuracy of the information given in this property and not
            simply copy from another source. This may be accomplished by PIN code, logon credentials, or by verifying against a database.
            </para>
          <para />
        </remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when the value set is null. </exception>
        <exception cref="T:System.ArgumentException"> Thrown when the string is not a well formed URI string.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseGeneratedIdentityForTrustedConference">
      <MemberSignature Language="C#" Value="protected internal bool UseGeneratedIdentityForTrustedConference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseGeneratedIdentityForTrustedConference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.CallEstablishOptions.UseGeneratedIdentityForTrustedConference" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property UseGeneratedIdentityForTrustedConference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool UseGeneratedIdentityForTrustedConference { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the call should use a generated identity during call establishment to a trusted conference.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            Setting this property to true is only valid for scenarios where the conversation has joined a conference as a trusted application.
            <see cref="M:Microsoft.Rtc.Collaboration.ConferenceSession.BeginJoin(Microsoft.Rtc.Collaboration.ConferenceJoinOptions,System.AsyncCallback,System.Object)" /> and
            <see cref="P:Microsoft.Rtc.Collaboration.ConferenceJoinOptions.JoinMode" />.
            </para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>